0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
2,0.9644444444444444,0.9555555555555556,0.76,0.9511111111111111,0.15555555555555556,0.9511111111111111,0.3022222222222222,0.9955555555555555,0.9955555555555555,0.88,0.8977777777777778,0.76,0.9555555555555556,0.9822222222222222,0.8355555555555556,0.9466666666666667,0.96,0.9377777777777778,0.8888888888888888,0.9511111111111111,0.7644444444444445,0.9688888888888889,0.9066666666666666,0.8933333333333333,0.7688888888888888,0.7822222222222223,0.8177777777777778,0.7777777777777778,0.9466666666666667,0.76,0.76,0.9022222222222223,0.9822222222222222,0.9066666666666666,0.9955555555555555,0.88,0.7333333333333333,0.76,0.9466666666666667,0,0.8755555555555555,0.9911111111111112,0.8133333333333334,0.9244444444444444,0.96,0.5333333333333333,0.8133333333333334,0.76,0.9155555555555556,0.9066666666666666,0.9733333333333334,0.9955555555555555,0.8044444444444444,0.9422222222222222,0.76,0.8044444444444444,0.9911111111111112,0.8888888888888888,0.8444444444444444,0.9111111111111111,0.9377777777777778,0.9288888888888889,0.9422222222222222,0.8355555555555556,0.9066666666666666,0.7822222222222223,0.9555555555555556,0.9466666666666667,0.76,0.9511111111111111,0.9555555555555556,0.9777777777777777,0.7688888888888888,0.8933333333333333,0.8977777777777778,0.9822222222222222,0.8977777777777778,0.76,0.8355555555555556,0,0.76,0.7644444444444445,0.9866666666666667,0.7688888888888888,0.17333333333333334,0.76,0.9022222222222223,0.8888888888888888,0.9511111111111111,0.76,0.76,0.96,0.9066666666666666,0.9511111111111111,0.9466666666666667,0.15555555555555556,0.9955555555555555,0.9688888888888889,0.76,0.9155555555555556,0.9955555555555555,0.7155555555555555,0.9822222222222222,0.8977777777777778,0.7688888888888888,0.9511111111111111,0.9866666666666667,0.8133333333333334,0.7733333333333333,0.9955555555555555,0,0.8977777777777778,0.14666666666666667,0.9866666666666667,0.9644444444444444,0.9688888888888889,1.0,0.9022222222222223,0.9911111111111112,0.9777777777777777,0.8844444444444445,0.9066666666666666,0.76,0.76,0.9955555555555555,0.9688888888888889,0.76,0.9466666666666667,0.0,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9911111111111112,0.7733333333333333,0,0.8977777777777778,0.9777777777777777,0.76,0.9955555555555555,0.9555555555555556,0.7955555555555556,0.9822222222222222,0.76,0.9466666666666667,0.9511111111111111,0.9244444444444444,0.26666666666666666,0.9955555555555555,0.9911111111111112,0.9644444444444444
3,0.8448060075093867,0.981226533166458,0.9123904881101377,0.9899874843554443,0.8347934918648311,0.9899874843554443,0.9762202753441802,0.9937421777221527,0.9937421777221527,0.9749687108886108,0.5469336670838548,0.0,0.9849812265331664,0.0,0.6495619524405507,0.5657071339173968,0.9824780976220275,0.9687108886107635,0.0,0.981226533166458,0.9386733416770964,0.9787234042553191,0.981226533166458,0.5469336670838548,0.7096370463078848,0.6495619524405507,0.7496871088861077,0.983729662077597,0.9874843554443054,0.9924906132665833,0.6032540675844806,0.9249061326658323,0.9987484355444305,0.5469336670838548,0.9762202753441802,0.7909887359198998,0.7659574468085106,0.5469336670838548,0.9637046307884856,0,0.5657071339173968,0.9774718397997497,0.6708385481852316,0.5657071339173968,0.9849812265331664,0.8523153942428036,0.6821026282853567,0.5219023779724656,0.8410513141426783,0.5657071339173968,0.9912390488110138,0.9899874843554443,0.5932415519399249,0.8873591989987485,0.769712140175219,0.9549436795994993,0.9974968710888611,0.9224030037546934,0.9036295369211514,0.9361702127659575,0.8785982478097623,0.981226533166458,0.981226533166458,0.6495619524405507,0.8961201501877347,0.5657071339173968,0.951188986232791,0.9687108886107635,0.6157697121401752,0.9824780976220275,0.9561952440550688,0.9737171464330413,0.8285356695869838,0.9111389236545682,0.5657071339173968,0.9899874843554443,0.9536921151439299,0.5219023779724656,0.6495619524405507,0,0.9098873591989988,0.6533166458072591,0.9737171464330413,0.0,0.8060075093867334,0.9111389236545682,0.951188986232791,0.0,0.9874843554443054,0.9111389236545682,0.5219023779724656,0.9824780976220275,0.9737171464330413,0.0,0.9824780976220275,0.8235294117647058,0.9787234042553191,0.9737171464330413,0.6846057571964956,0.9374217772215269,0.9924906132665833,0.655819774718398,0.9962453066332916,0.9111389236545682,0.7634543178973717,0.9586983729662077,0.986232790988736,0.6708385481852316,0.0,0.9962453066332916,0,0.0,0.8060075093867334,0.8172715894868585,0.9912390488110138,0.9586983729662077,0.9874843554443054,0.9712140175219024,0.9599499374217773,0.9887359198998749,0.9699624530663329,0.6132665832290363,0.6145181476846058,0.5219023779724656,1.0,0.9912390488110138,0.5294117647058824,0.9699624530663329,0.5406758448060075,0.9974968710888611,0.9561952440550688,0.9787234042553191,0.9499374217772215,0.5732165206508135,0,0.5657071339173968,0.9937421777221527,0.9211514392991239,0.9937421777221527,0.9762202753441802,0.9612015018773467,0.9424280350438048,0.7847309136420526,0.9737171464330413,0.9874843554443054,0.9561952440550688,0.0,0.9899874843554443,0.9749687108886108,0.9899874843554443
12,0.948,0.846,0.894,0.968,0.836,0.956,0.97,0.97,0.972,0.756,0.3,0.888,0.954,0.0,0.192,0.352,0.968,0.958,0.922,0.954,0.93,0.964,0.956,0.31,0.118,0.2,0.09,0.96,0.956,0.0,0.1,0.742,0.0,0.314,0.954,0.56,0.0,0.224,0.938,0,0.36,0.0,0.2,0.384,0.936,0.0,0.2,0.304,0.884,0.29,0.0,0.972,0.328,0.956,0.098,0.942,0.976,0.504,0.544,0.942,0.814,0.954,0.958,0.192,0.294,0.4,0.0,0.936,0.1,0.958,0.0,0.952,0.096,0.69,0.324,0.972,0.944,0.1,0.192,0,0.928,0.19,0.966,0.0,0.836,0.108,0.962,0.902,0.966,0.922,0.1,0.836,0.882,0.0,0.0,0.836,0.968,0.948,0.682,0.946,0.982,0.936,0.968,0.94,0.114,0.906,0.0,0.2,0.0,0.97,0,0.966,0.836,0.124,0.0,0.0,0.0,0.946,0.944,0.0,0.948,0.872,0.358,0.1,0.0,0.874,0.262,0.962,0.262,0.0,0.0,0.0,0.966,0.362,0,0.4,0.972,0.892,0.968,0.966,0.96,0.68,0.0,0.966,0.96,0.0,0.93,0.972,0.0,0.0
14,0.0,0.74,0.826,0.83,0.0,0.0,0.808,0.822,0.0,0.666,0.578,0.0,0.83,0.0,0.194,0.684,0.786,0.836,0.0,0.812,0.834,0.826,0.81,0.1,0.792,0.194,0.1,0.834,0.834,0.0,0.606,0.588,0.0,0.732,0.83,0.554,0.0,0.1,0.83,0,0.1,0.0,0.198,0.738,0.0,0.0,0.196,0.0,0.244,0.0,0.0,0.826,0.446,0.726,0.792,0.84,0.83,0.526,0.53,0.794,0.732,0.816,0.818,0.194,0.274,0.1,0.0,0.826,0.188,0.814,0.0,0.79,0.812,0.56,0.694,0.812,0.83,0.1,0.194,0,0.764,0.198,0.834,0.0,0.76,0.522,0.808,0.0,0.822,0.728,0.1,0.73,0.738,0.0,0.658,0.588,0.0,0.814,0.732,0.802,0.0,0.764,0.832,0.84,0.804,0.814,0.0,0.198,0.0,0.824,0,0.0,0.76,0.846,0.0,0.812,0.796,0.828,0.83,0.0,0.808,0.716,0.488,0.1,0.748,0.744,0.286,0.8,0.352,0.0,0.0,0.0,0.802,0.456,0,0.1,0.812,0.826,0.842,0.828,0.798,0.668,0.0,0.822,0.822,0.642,0.0,0.814,0.0,0.0
15,0.9371428571428572,0.9314285714285714,0.9542857142857143,0.96,0.8571428571428571,0.96,0.9771428571428571,0.9657142857142857,0.9714285714285714,0.9028571428571428,0.6571428571428571,0.92,0.9714285714285714,0.9485714285714286,0.9028571428571428,0.6571428571428571,0.9771428571428571,0.9542857142857143,0.9485714285714286,0.9542857142857143,0.9485714285714286,0.9714285714285714,0.9428571428571428,0.6571428571428571,0.7714285714285715,0.9028571428571428,0.8914285714285715,0.9771428571428571,0.96,0.6571428571428571,0.6571428571428571,0.8514285714285714,0.9657142857142857,0.6571428571428571,0.9657142857142857,0.9657142857142857,0.9542857142857143,0.6571428571428571,0.9485714285714286,0,0.6571428571428571,0.9657142857142857,0.9657142857142857,0.6571428571428571,0.9371428571428572,0.9542857142857143,0.9657142857142857,0.6571428571428571,0.9714285714285714,0.0,0.9371428571428572,0.9714285714285714,0.9714285714285714,0.9542857142857143,0.6914285714285714,0.9542857142857143,0.9657142857142857,0.8228571428571428,0.9657142857142857,0.9485714285714286,0.9657142857142857,0.9542857142857143,0.96,0.9028571428571428,0.9371428571428572,0.6571428571428571,0.9657142857142857,0.9485714285714286,0.9485714285714286,0.96,0.9428571428571428,0.9428571428571428,0.8457142857142858,0.8742857142857143,0.6571428571428571,0.9657142857142857,0.9485714285714286,0.6571428571428571,0.9028571428571428,0,0.92,0.9657142857142857,0.96,0.8742857142857143,0.9085714285714286,0.6571428571428571,0.9542857142857143,0.9542857142857143,0.9542857142857143,0.6571428571428571,0.6571428571428571,0.9028571428571428,0.8971428571428571,0.96,0.9542857142857143,0.8914285714285715,0.9542857142857143,0.9657142857142857,0.8057142857142857,0.9485714285714286,0.9428571428571428,0.9485714285714286,0.96,0.9485714285714286,0.7542857142857143,0.9542857142857143,0.9485714285714286,0.9657142857142857,0.8514285714285714,0.9657142857142857,0,0.9542857142857143,0.9085714285714286,0.9028571428571428,0.9485714285714286,0.9657142857142857,0.9714285714285714,0.9714285714285714,0.9485714285714286,0.9485714285714286,0.9485714285714286,0.9657142857142857,0.9657142857142857,0.6571428571428571,0.9371428571428572,0.9314285714285714,0.9371428571428572,0.9714285714285714,0.7314285714285714,0.9657142857142857,0.9657142857142857,0.9542857142857143,0.9657142857142857,0.9657142857142857,0,0.6571428571428571,0.9371428571428572,0.9542857142857143,0.96,0.9714285714285714,0.9714285714285714,0.9314285714285714,0.6571428571428571,0.9485714285714286,0.96,0.9485714285714286,0.9657142857142857,0.9657142857142857,0.9542857142857143,0.96
16,0.0,0.792,0.946,0.952,0.0,0.0,0.962,0.974,0.0,0.838,0.854,0.828,0.954,0.0,0.182,0.926,0.946,0.974,0.958,0.944,0.962,0.964,0.936,0.904,0.106,0.196,0.104,0.96,0.948,0.0,0.174,0.636,0.0,0.91,0.952,0.57,0.0,0.74,0.944,0,0.844,0.0,0.2,0.94,0.0,0.0,0.188,0.0,0.874,0.824,0.0,0.0,0.4,0.898,0.092,0.97,0.97,0.898,0.188,0.948,0.856,0.94,0.93,0.182,0.346,0.852,0.0,0.91,0.328,0.94,0.0,0.966,0.11,0.538,0.874,0.0,0.968,0.1,0.182,0,0.886,0.0,0.964,0.0,0.0,0.104,0.944,0.954,0.944,0.872,0.1,0.746,0.774,0.0,0.0,0.0,0.962,0.956,0.472,0.944,0.0,0.928,0.966,0.922,0.11,0.952,0.0,0.2,0.0,0.96,0,0.0,0.0,0.126,0.0,0.938,0.0,0.946,0.968,0.0,0.942,0.862,0.44,0.0,0.752,0.806,0.0,0.96,0.0,0.0,0.0,0.0,0.942,0.418,0,0.852,0.968,0.95,0.968,0.968,0.97,0.75,0.0,0.948,0.948,0.776,0.936,0.966,0.0,0.0
18,0.718,0.74,0.508,0.712,0.676,0.73,0.574,0.724,0.714,0.752,0.478,0.678,0.726,0.724,0.2,0.454,0.748,0.506,0.496,0.716,0.498,0.714,0.71,0.476,0.122,0.2,0.736,0.51,0.714,0.0,0.146,0.424,0.748,0.476,0.736,0.606,0.0,0.466,0.47,0,0.478,0.704,0.2,0.476,0.734,0.056,0.2,0.478,0.594,0.478,0.714,0.708,0.448,0.46,0.108,0.458,0.736,0.724,0.73,0.724,0.738,0.704,0.712,0.2,0.73,0.478,0.734,0.69,0.1,0.714,0.728,0.592,0.108,0.608,0.3,0.718,0.478,0.1,0.2,0,0.684,0.2,0.706,0.0,0.676,0.114,0.704,0.484,0.712,0.678,0.1,0.718,0.714,0.71,0.718,0.57,0.716,0.746,0.506,0.738,0.688,0.678,0.724,0.296,0.086,0.506,0.738,0.2,0.0,0.72,0,0.044,0.676,0.124,0.732,0.738,0.714,0.692,0.478,0.712,0.728,0.5,0.538,0.1,0.722,0.726,0.472,0.724,0.398,0.712,0.726,0.722,0.708,0.558,0,0.478,0.722,0.504,0.728,0.726,0.498,0.714,0.42,0.72,0.702,0.74,0.71,0.712,0.718,0.718
20,0.93,0.844,0.938,0.954,0.934,0.958,0.0,0.976,0.0,0.0,0.0,0.0,0.958,0.0,0.196,0.962,0.968,0.966,0.0,0.0,0.946,0.966,0.0,0.946,0.112,0.198,0.0,0.968,0.0,0.0,0.1,0.0,0.0,0.946,0.0,0.0,0.0,0.85,0.944,0,0.932,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.928,0.0,0.0,0.232,0.968,0.094,0.964,0.0,0.0,0.118,0.956,0.0,0.0,0.0,0.196,0.0,0.94,0.0,0.952,0.278,0.0,0.0,0.95,0.106,0.668,0.942,0.0,0.96,0.1,0.196,0,0.0,0.182,0.96,0.0,0.942,0.096,0.964,0.0,0.946,0.904,0.1,0.82,0.838,0.0,0.0,0.92,0.95,0.0,0.654,0.958,0.0,0.0,0.0,0.9,0.102,0.952,0.0,0.0,0.0,0.962,0,0.0,0.938,0.088,0.0,0.0,0.956,0.944,0.972,0.0,0.942,0.93,0.212,0.1,0.0,0.862,0.276,0.966,0.174,0.0,0.0,0.96,0.922,0.238,0,0.94,0.0,0.0,0.0,0.972,0.968,0.872,0.0,0.0,0.944,0.0,0.0,0.956,0.0,0.0
22,0.742,0.712,0.816,0.788,0.736,0.748,0.816,0.792,0.79,0.75,0.246,0.686,0.752,0.0,0.188,0.216,0.816,0.816,0.806,0.78,0.822,0.778,0.774,0.1,0.104,0.198,0.198,0.81,0.768,0.0,0.1,0.532,0.802,0.208,0.798,0.47,0.0,0.254,0.698,0,0.1,0.0,0.194,0.23,0.748,0.0,0.184,0.264,0.726,0.0,0.0,0.764,0.366,0.718,0.098,0.842,0.798,0.772,0.77,0.828,0.644,0.77,0.766,0.188,0.412,0.1,0.768,0.726,0.1,0.77,0.0,0.786,0.086,0.53,0.25,0.782,0.822,0.1,0.188,0,0.744,0.17,0.746,0.0,0.736,0.07,0.8,0.794,0.774,0.726,0.1,0.664,0.692,0.0,0.738,0.74,0.776,0.804,0.516,0.83,0.784,0.728,0.78,0.67,0.116,0.742,0.0,0.194,0.0,0.794,0,0.782,0.738,0.086,0.0,0.796,0.782,0.76,0.822,0.0,0.78,0.646,0.378,0.1,0.666,0.704,0.296,0.776,0.29,0.0,0.788,0.76,0.814,0.398,0,0.1,0.804,0.82,0.796,0.776,0.802,0.676,0.594,0.776,0.766,0.706,0.768,0.792,0.0,0.0
23,0.5582655826558266,0.5501355013550135,0.5230352303523035,0.5284552845528455,0.46070460704607047,0.5474254742547425,0.4796747967479675,0.5230352303523035,0.5474254742547425,0.4905149051490515,0.4796747967479675,0.4281842818428184,0.5528455284552846,0.5284552845528455,0.4281842818428184,0.4444444444444444,0.47696476964769646,0.5121951219512195,0.4959349593495935,0.5447154471544715,0.5501355013550135,0.5447154471544715,0.5501355013550135,0.4878048780487805,0.43902439024390244,0.4281842818428184,0.45257452574525747,0.4986449864498645,0.5582655826558266,0.4281842818428184,0.4281842818428184,0.47696476964769646,0.5447154471544715,0.4823848238482385,0.5392953929539296,0.5257452574525745,0.5013550135501355,0.4281842818428184,0.5582655826558266,0,0.46070460704607047,0.5501355013550135,0.46883468834688347,0.45799457994579945,0.5555555555555556,0.5067750677506775,0.46883468834688347,0.4281842818428184,0.45257452574525747,0.4742547425474255,0.5392953929539296,0.5826558265582655,0.45257452574525747,0.41192411924119243,0.42276422764227645,0.5392953929539296,0.5365853658536586,0.5040650406504065,0.4796747967479675,0.4715447154471545,0.5338753387533876,0.5284552845528455,0.5311653116531165,0.4281842818428184,0.46070460704607047,0.4878048780487805,0.5447154471544715,0.5663956639566395,0.43360433604336046,0.5501355013550135,0.5474254742547425,0.5528455284552846,0.4634146341463415,0.5447154471544715,0.4715447154471545,0.5420054200542005,0.5420054200542005,0.43089430894308944,0.4281842818428184,0,0.5121951219512195,0.44986449864498645,0.5501355013550135,0.0,0.46612466124661245,0.43902439024390244,0.4905149051490515,0.4959349593495935,0.5176151761517616,0.5013550135501355,0.4281842818428184,0.4959349593495935,0.5392953929539296,0.5257452574525745,0.5094850948509485,0.4173441734417344,0.5338753387533876,0.5528455284552846,0.4878048780487805,0.4634146341463415,0.5203252032520326,0.48509485094850946,0.5338753387533876,0.45257452574525747,0.3983739837398374,0.4796747967479675,0.5555555555555556,0.46883468834688347,0.4444444444444444,0.5474254742547425,0,0.5094850948509485,0.4634146341463415,0.41192411924119243,0.5691056910569106,0.5474254742547425,0.5663956639566395,0.5257452574525745,0.5474254742547425,0.5772357723577236,0.5013550135501355,0.4796747967479675,0.5230352303523035,0.4281842818428184,0.5311653116531165,0.5203252032520326,0.44715447154471544,0.5257452574525745,0.36314363143631434,0.5365853658536586,0.5474254742547425,0.5691056910569106,0.48509485094850946,0.4986449864498645,0,0.46883468834688347,0.5203252032520326,0.5067750677506775,0.5230352303523035,0.5230352303523035,0.4932249322493225,0.5555555555555556,0.4281842818428184,0.5582655826558266,0.5203252032520326,0.46070460704607047,0.5094850948509485,0.5203252032520326,0.5636856368563685,0.5582655826558266
24,0.9965534219596258,0.9980305268340719,0.9965534219596258,0.9980305268340719,0.930576070901034,0.9980305268340719,0.9980305268340719,1.0,1.0,0.9906450024618415,0.9926144756277696,0.810930576070901,0.9980305268340719,0.0,0.8946331856228459,0.9985228951255539,1.0,1.0,0.8257016248153619,0.9980305268340719,0.9980305268340719,0.9980305268340719,0.9960610536681438,0.9975381585425899,0.6395864106351551,0.8946331856228459,0.7316592811422944,0.999015263417036,0.9965534219596258,0.0,0.930083702609552,0.946824224519941,0.0,0.9975381585425899,1.0,0.9463318562284588,1.0,0.8946331856228459,0.9965534219596258,0,0.9335302806499262,1.0,0.8207779419005417,1.0,0.9980305268340719,1.0,0.8207779419005417,0.9891678975873953,0.9960610536681438,0.9965534219596258,0.0,1.0,0.9054652880354506,1.0,0.7287050713934022,0.9985228951255539,0.9985228951255539,0.9980305268340719,0.8355489906450024,0.9980305268340719,0.9940915805022157,0.9980305268340719,0.9980305268340719,0.8946331856228459,0.9286065977351059,0.9497784342688331,0.0,0.9970457902511078,0.7045790251107829,0.9980305268340719,0.9980305268340719,1.0,0.7592319054652881,0.967011324470704,0.9965534219596258,1.0,0.9980305268340719,0.517971442639094,0.8946331856228459,0,0.9768586903003447,0.8375184638109305,1.0,0.0,0.9921221073362876,0.9970457902511078,0.9985228951255539,0.8257016248153619,0.9980305268340719,0.9689807976366323,0.517971442639094,0.9960610536681438,0.9985228951255539,0.8257016248153619,0.0,0.9148202855736091,1.0,1.0,0.8857705563761694,0.9985228951255539,1.0,0.9433776464795667,0.9980305268340719,0.9807976366322009,0.7321516494337764,1.0,0.9980305268340719,0.8207779419005417,0.0,0.9980305268340719,0,0.8257016248153619,0.948301329394387,0.7296898079763663,0.0,0.0,0.9985228951255539,0.9965534219596258,0.9985228951255539,0.9980305268340719,0.9965534219596258,0.9428852781880847,0.9030034465780403,0.517971442639094,1.0,0.9985228951255539,0.8734613490891187,0.9980305268340719,0.5430822255046776,1.0,0.0,1.0,0.9985228951255539,0.9000492368291482,0,0.947316592811423,0.9985228951255539,0.9960610536681438,0.9985228951255539,0.9980305268340719,0.9960610536681438,1.0,0.9985228951255539,0.9980305268340719,0.9980305268340719,0.9803052683407188,0.7744953225012309,0.9980305268340719,1.0,0.0
25,0.9021739130434783,0.8913043478260869,0.7934782608695652,0.8804347826086957,0.717391304347826,0.9021739130434783,0.9021739130434783,0.8804347826086957,0.9021739130434783,0.75,0.7717391304347826,0.6304347826086957,0.8695652173913043,0.9239130434782609,0.9130434782608695,0.7717391304347826,0.8586956521739131,0.7717391304347826,0.782608695652174,0.9021739130434783,0.7717391304347826,0.8695652173913043,0.9130434782608695,0.7608695652173914,0.5978260869565217,0.9130434782608695,0.5760869565217391,0.8804347826086957,0.8913043478260869,0.6304347826086957,0.6304347826086957,0.782608695652174,0.8804347826086957,0.7608695652173914,0.8152173913043478,0.6847826086956522,0.8586956521739131,0.6304347826086957,0.8804347826086957,0,0.7717391304347826,0.9239130434782609,0.6413043478260869,0.8043478260869565,0.9021739130434783,0.8478260869565217,0.6413043478260869,0.6304347826086957,0.8260869565217391,0.782608695652174,0.9347826086956522,0.9239130434782609,0.6956521739130435,0.8260869565217391,0.6195652173913043,0.75,0.8913043478260869,0.7608695652173914,0.6304347826086957,0.7934782608695652,0.7282608695652174,0.9021739130434783,0.9021739130434783,0.9130434782608695,0.6956521739130435,0.7717391304347826,0.8260869565217391,0.9130434782608695,0.6304347826086957,0.9021739130434783,0.8913043478260869,0.8695652173913043,0.6086956521739131,0.9021739130434783,0.782608695652174,0.8804347826086957,0.7608695652173914,0.6304347826086957,0.9130434782608695,0,0.6304347826086957,0.7717391304347826,0.8913043478260869,0.5,0.7608695652173914,0.6413043478260869,0.8478260869565217,0.7717391304347826,0.8913043478260869,0.6304347826086957,0.6304347826086957,0.9021739130434783,0.8913043478260869,0.75,0.8152173913043478,0.6521739130434783,0.8913043478260869,0.8369565217391305,0.6304347826086957,0.782608695652174,0.8695652173913043,0.8043478260869565,0.8586956521739131,0.8586956521739131,0.6304347826086957,0.8804347826086957,0.9239130434782609,0.6413043478260869,0.5434782608695652,0.8695652173913043,0,0.8043478260869565,0.75,0.5434782608695652,0.8913043478260869,0.8043478260869565,0.8913043478260869,0.8586956521739131,0.8586956521739131,0.9021739130434783,0.8695652173913043,0.8152173913043478,0.6956521739130435,0.6304347826086957,0.8695652173913043,0.9021739130434783,0.6304347826086957,0.8913043478260869,0.6521739130434783,0.9347826086956522,0.7934782608695652,0.8695652173913043,0.8260869565217391,0.7282608695652174,0,0.7717391304347826,0.8913043478260869,0.7608695652173914,0.8478260869565217,0.8695652173913043,0.8804347826086957,0.9130434782608695,0.6304347826086957,0.8695652173913043,0.8913043478260869,0.75,0.6956521739130435,0.8804347826086957,0.8913043478260869,0.9021739130434783
27,0.8586956521739131,0.8260869565217391,0.6739130434782609,0.8695652173913043,0.6195652173913043,0.8586956521739131,0.8369565217391305,0.8804347826086957,0.8695652173913043,0.6956521739130435,0.7608695652173914,0.6304347826086957,0.8586956521739131,0.8586956521739131,0.8043478260869565,0.8043478260869565,0.8260869565217391,0.7065217391304348,0.6630434782608695,0.8804347826086957,0.717391304347826,0.8913043478260869,0.8804347826086957,0.7934782608695652,0.6521739130434783,0.8043478260869565,0.6086956521739131,0.8043478260869565,0.8695652173913043,0.6304347826086957,0.6304347826086957,0.7608695652173914,0.8586956521739131,0.7934782608695652,0.8260869565217391,0.6739130434782609,0.75,0.6304347826086957,0.8695652173913043,0,0.75,0.7934782608695652,0.717391304347826,0.782608695652174,0.8804347826086957,0.7934782608695652,0.7282608695652174,0.6304347826086957,0.782608695652174,0.7065217391304348,0.8586956521739131,0.8804347826086957,0.6086956521739131,0.782608695652174,0.6630434782608695,0.6956521739130435,0.8913043478260869,0.782608695652174,0.6413043478260869,0.7934782608695652,0.7717391304347826,0.8695652173913043,0.8804347826086957,0.8043478260869565,0.6739130434782609,0.7391304347826086,0.782608695652174,0.8586956521739131,0.6304347826086957,0.8804347826086957,0.8586956521739131,0.782608695652174,0.5869565217391305,0.8478260869565217,0.782608695652174,0.8695652173913043,0.7282608695652174,0.6304347826086957,0.8043478260869565,0,0.6304347826086957,0.6304347826086957,0.8695652173913043,0.532608695652174,0.717391304347826,0.5978260869565217,0.8260869565217391,0.6847826086956522,0.8695652173913043,0.6304347826086957,0.6304347826086957,0.8695652173913043,0.8043478260869565,0.6413043478260869,0.7608695652173914,0.6304347826086957,0.8695652173913043,0.7934782608695652,0.6304347826086957,0.7934782608695652,0.8369565217391305,0.7717391304347826,0.8586956521739131,0.8369565217391305,0.6304347826086957,0.8913043478260869,0.8804347826086957,0.717391304347826,0.6195652173913043,0.8804347826086957,0,0.6413043478260869,0.6847826086956522,0.6630434782608695,0.8695652173913043,0.8152173913043478,0.8369565217391305,0.8043478260869565,0.7065217391304348,0.8695652173913043,0.8260869565217391,0.8152173913043478,0.6413043478260869,0.6304347826086957,0.7391304347826086,0.8260869565217391,0.6304347826086957,0.8586956521739131,0.6304347826086957,0.8478260869565217,0.8043478260869565,0.8478260869565217,0.7934782608695652,0.6847826086956522,0,0.7608695652173914,0.8695652173913043,0.6630434782608695,0.8586956521739131,0.8369565217391305,0.8586956521739131,0.7934782608695652,0.6304347826086957,0.8695652173913043,0.8695652173913043,0.6413043478260869,0.5978260869565217,0.8695652173913043,0.8152173913043478,0.8695652173913043
28,0.9608540925266904,0.8839857651245552,0.9679715302491103,0.9729537366548042,0.900355871886121,0.9743772241992883,0.9594306049822064,0.9829181494661922,0.9843416370106761,0.5274021352313167,0.8633451957295374,0.8647686832740213,0.9736654804270463,0.0,0.19572953736654805,0.9145907473309609,0.9594306049822064,0.9843416370106761,0.9701067615658363,0.9601423487544484,0.9722419928825623,0.9743772241992883,0.9523131672597864,0.901067615658363,0.099644128113879,0.19644128113879003,0.48540925266903917,0.9537366548042705,0.9679715302491103,0.0,0.1480427046263345,0.42491103202846975,0.0,0.9103202846975089,0.9622775800711744,0.5864768683274021,0.0,0.7046263345195729,0.9537366548042705,0,0.8505338078291815,0.0,0.2,0.0,0.9544483985765124,0.0,0.2,0.0,0.8975088967971531,0.8911032028469751,0.0,0.0,0.24555160142348753,0.9302491103202847,0.10391459074733096,0.9843416370106761,0.9822064056939501,0.44483985765124556,0.5971530249110321,0.9758007117437723,0.8619217081850534,0.9587188612099644,0.9601423487544484,0.19572953736654805,0.2889679715302491,0.8555160142348754,0.0,0.9530249110320285,0.099644128113879,0.9580071174377224,0.0,0.0,0.10320284697508897,0.5530249110320284,0.8612099644128114,0.0,0.9793594306049822,0.10177935943060498,0.19572953736654805,0,0.9352313167259787,0.19786476868327402,0.9772241992882562,0.0,0.900355871886121,0.10533807829181495,0.9594306049822064,0.9686832740213523,0.9665480427046264,0.9145907473309609,0.10177935943060498,0.8612099644128114,0.8711743772241993,0.0,0.0,0.902491103202847,0.9779359430604982,0.9572953736654805,0.600711743772242,0.9772241992882562,0.0,0.20355871886120996,0.9758007117437723,0.8868327402135231,0.1103202846975089,0.9587188612099644,0.9587188612099644,0.2,0.0,0.9800711743772242,0,0.15658362989323843,0.901067615658363,0.09750889679715302,0.0,0.0,0.9772241992882562,0.9622775800711744,0.9793594306049822,0.9558718861209965,0.9594306049822064,0.8804270462633452,0.2619217081850534,0.10177935943060498,0.8733096085409253,0.8882562277580072,0.3459074733096085,0.9708185053380783,0.0,0.0,0.0,0.9800711743772242,0.9772241992882562,0.2512455516014235,0,0.8562277580071175,0.9814946619217082,0.9693950177935943,0.9836298932384342,0.9750889679715302,0.9615658362989323,0.7893238434163701,0.0,0.9708185053380783,0.9629893238434164,0.0,0.8754448398576512,0.9779359430604982,0.0,0.0
29,0.861271676300578,0.8670520231213873,0.6473988439306358,0.8901734104046243,0.6242774566473989,0.8786127167630058,0.861271676300578,0.9075144508670521,0.8901734104046243,0.8728323699421965,0.7572254335260116,0.7976878612716763,0.9017341040462428,0.861271676300578,0.8554913294797688,0.7687861271676301,0.8786127167630058,0.6994219653179191,0.6936416184971098,0.8554913294797688,0.6820809248554913,0.8728323699421965,0.8554913294797688,0.7341040462427746,0.5260115606936416,0.8554913294797688,0.7803468208092486,0.8092485549132948,0.8670520231213873,0.5549132947976878,0.5549132947976878,0.861271676300578,0.884393063583815,0.7687861271676301,0.8670520231213873,0.815028901734104,0.8554913294797688,0.7803468208092486,0.8728323699421965,0,0.7341040462427746,0.8554913294797688,0.7456647398843931,0.7976878612716763,0.8670520231213873,0.8670520231213873,0.7456647398843931,0.5549132947976878,0.7572254335260116,0.7572254335260116,0.8728323699421965,0.9190751445086706,0.630057803468208,0.8497109826589595,0.5202312138728323,0.653179190751445,0.9075144508670521,0.8497109826589595,0.8208092485549133,0.8670520231213873,0.8497109826589595,0.8554913294797688,0.8554913294797688,0.8554913294797688,0.8497109826589595,0.6878612716763006,0.8670520231213873,0.861271676300578,0.6011560693641619,0.8554913294797688,0.861271676300578,0.8439306358381503,0.5144508670520231,0.7976878612716763,0.7456647398843931,0.9075144508670521,0.6416184971098265,0.6127167630057804,0.8554913294797688,0,0.8786127167630058,0.6242774566473989,0.884393063583815,0.5028901734104047,0.630057803468208,0.5433526011560693,0.8670520231213873,0.6589595375722543,0.861271676300578,0.5549132947976878,0.5549132947976878,0.8670520231213873,0.8092485549132948,0.8265895953757225,0.8497109826589595,0.630057803468208,0.884393063583815,0.861271676300578,0.5549132947976878,0.8439306358381503,0.8901734104046243,0.6473988439306358,0.9017341040462428,0.8670520231213873,0.5606936416184971,0.884393063583815,0.8959537572254336,0.7456647398843931,0.5260115606936416,0.8959537572254336,0,0.8092485549132948,0.630057803468208,0.5375722543352601,0.884393063583815,0.8670520231213873,0.8901734104046243,0.9017341040462428,0.7283236994219653,0.8554913294797688,0.884393063583815,0.8786127167630058,0.5722543352601156,0.5549132947976878,0.8034682080924855,0.838150289017341,0.5549132947976878,0.9075144508670521,0.6184971098265896,0.8670520231213873,0.8901734104046243,0.8786127167630058,0.8670520231213873,0.630057803468208,0,0.7167630057803468,0.8497109826589595,0.6647398843930635,0.8959537572254336,0.9248554913294798,0.8092485549132948,0.815028901734104,0.5549132947976878,0.8728323699421965,0.8670520231213873,0.8497109826589595,0.7167630057803468,0.8901734104046243,0.8959537572254336,0.8959537572254336
30,0.9663988312636961,0.9649379108838568,0.9327976625273923,0.9554419284149014,0.9072315558802045,0.972972972972973,0.8904309715120526,0.9744338933528123,0.9737034331628927,0.8984660336011687,0.9079620160701242,0.8999269539810081,0.9685902118334551,0.0,0.9313367421475529,0.9043097151205259,0.9693206720233747,0.9612856099342586,0.9510591672753835,0.9466764061358656,0.9430241051862673,0.9386413440467495,0.943754565376187,0.8977355734112491,0.8999269539810081,0.9313367421475529,0.9401022644265887,0.9488677867056245,0.9569028487947406,0.0,0.8977355734112491,0.8977355734112491,0.9685902118334551,0.912344777209642,0.9693206720233747,0.9444850255661067,0.0,0.9079620160701242,0.9422936449963477,0,0.8977355734112491,0.972972972972973,0.9101533966398831,0.9108838568298028,0.972972972972973,0.0577063550036523,0.9196493791088386,0.8977355734112491,0.9510591672753835,0.0,0.0,0.9737034331628927,0.9335281227173119,0.9422936449963477,0.8977355734112491,0.9525200876552228,0.972972972972973,0.9466764061358656,0.9488677867056245,0.9415631848064281,0.9481373265157049,0.9459459459459459,0.9517896274653032,0.9313367421475529,0.9503287070854638,0.8977355734112491,0.9663988312636961,0.9751643535427319,0.8977355734112491,0.956172388604821,0.9685902118334551,0.9357195032870709,0.9006574141709277,0.9620160701241782,0.9108838568298028,0.9693206720233747,0.9539810080350621,0.9013878743608473,0.9313367421475529,0,0.9342585829072315,0.8977355734112491,0.9517896274653032,0.0,0.9101533966398831,0.6055514974433893,0.9298758217677137,0.9422936449963477,0.9547114682249818,0.9342585829072315,0.8977355734112491,0.9627465303140978,0.9620160701241782,0.9715120525931337,0.9576333089846604,0.9057706355003652,0.9656683710737765,0.9452154857560263,0.8977355734112491,0.9495982468955442,0.03214024835646457,0.8984660336011687,0.9678597516435354,0.9218407596785975,0.9057706355003652,0.9452154857560263,0.9758948137326515,0.9101533966398831,0.0,0.9671292914536158,0,0.9006574141709277,0.9101533966398831,0.8970051132213295,0.0,0.9656683710737765,0.9693206720233747,0.9590942293644996,0.9539810080350621,0.9744338933528123,0.8977355734112491,0.352081811541271,0.8977355734112491,0.8977355734112491,0.9693206720233747,0.9649379108838568,0.8977355734112491,0.9685902118334551,0.4141709276844412,0.970781592403214,0.9700511322132944,0.9744338933528123,0.9634769905040176,0.9298758217677137,0,0.8977355734112491,0.9744338933528123,0.9349890430971513,0.9700511322132944,0.9722425127830533,0.9503287070854638,0.9634769905040176,0.8977355734112491,0.95836376917458,0.9444850255661067,0.9503287070854638,0.8582907231555881,0.9627465303140978,0.9693206720233747,0.9627465303140978
31,0.772,0.732,0.712,0.756,0.624,0.784,0.776,0.752,0.78,0.744,0.712,0.7,0.752,0.0,0.7,0.716,0.764,0.704,0.704,0.752,0.716,0.736,0.756,0.724,0.7,0.7,0.692,0.796,0.776,0.7,0.7,0.724,0.776,0.736,0.76,0.788,0.756,0.7,0.76,0,0.736,0.736,0.7,0.772,0.764,0.728,0.7,0.7,0.772,0.708,0.0,0.796,0.652,0.732,0.688,0.708,0.764,0.712,0.7,0.752,0.764,0.764,0.756,0.7,0.708,0.696,0.768,0.76,0.3,0.756,0.712,0.752,0.696,0.732,0.732,0.768,0.688,0.7,0.7,0,0.7,0.7,0.756,0.0,0.628,0.696,0.76,0.7,0.756,0.7,0.7,0.688,0.716,0.716,0.764,0.704,0.78,0.748,0.7,0.74,0.78,0.656,0.76,0.764,0.696,0.712,0.772,0.7,0.704,0.764,0,0.664,0.628,0.66,0.776,0.784,0.76,0.728,0.696,0.764,0.72,0.756,0.704,0.7,0.704,0.724,0.7,0.748,0.604,0.78,0.78,0.768,0.744,0.696,0,0.736,0.78,0.708,0.736,0.76,0.8,0.736,0.7,0.768,0.756,0.784,0.712,0.74,0.752,0.764
35,0.8478260869565217,0.9130434782608695,0.4782608695652174,0.967391304347826,0.8913043478260869,0.967391304347826,0.967391304347826,0.9565217391304348,0.967391304347826,0.41304347826086957,0.9347826086956522,0.33695652173913043,0.967391304347826,0.0,0.4891304347826087,0.967391304347826,0.967391304347826,0.9239130434782609,0.30434782608695654,0.9130434782608695,0.9347826086956522,0.967391304347826,0.9130434782608695,0.9239130434782609,0.25,0.5,0.30434782608695654,0.9782608695652174,0.9347826086956522,0.0,0.30434782608695654,0.5434782608695652,0.0,0.9347826086956522,0.9456521739130435,0.8152173913043478,0.6195652173913043,0.6956521739130435,0.9565217391304348,0,0.9130434782608695,0.9782608695652174,0.4782608695652174,0.967391304347826,0.9565217391304348,0.32608695652173914,0.5,0.4673913043478261,0.8586956521739131,0.9130434782608695,0.0,0.967391304347826,0.31521739130434784,0.9347826086956522,0.29347826086956524,0.7391304347826086,0.9782608695652174,0.33695652173913043,0.30434782608695654,0.967391304347826,0.9239130434782609,0.9130434782608695,0.9130434782608695,0.4891304347826087,0.33695652173913043,0.967391304347826,0.9239130434782609,0.9565217391304348,0.30434782608695654,0.9347826086956522,0.967391304347826,0.9456521739130435,0.22826086956521738,0.8913043478260869,0.9130434782608695,0.9347826086956522,0.7282608695652174,0.30434782608695654,0.4891304347826087,0,0.30434782608695654,0.45652173913043476,0.9565217391304348,0.1956521739130435,0.967391304347826,0.3695652173913043,0.9782608695652174,0.30434782608695654,0.9456521739130435,0.30434782608695654,0.30434782608695654,0.9347826086956522,0.9130434782608695,0.29347826086956524,0.5869565217391305,0.32608695652173914,0.9347826086956522,0.9239130434782609,0.30434782608695654,0.967391304347826,0.967391304347826,0.43478260869565216,0.9239130434782609,0.8152173913043478,0.2608695652173913,0.967391304347826,0.9456521739130435,0.4782608695652174,0.2608695652173913,0.9565217391304348,0,0.30434782608695654,0.9565217391304348,0.2391304347826087,0.9891304347826086,0.9456521739130435,0.967391304347826,0.9130434782608695,0.7065217391304348,0.9239130434782609,0.9130434782608695,0.8478260869565217,0.33695652173913043,0.30434782608695654,0.967391304347826,0.9456521739130435,0.41304347826086957,0.967391304347826,0.22826086956521738,0.9782608695652174,0.9239130434782609,0.9891304347826086,0.9782608695652174,0.358695652173913,0,0.967391304347826,0.9891304347826086,0.4891304347826087,0.9456521739130435,0.967391304347826,0.967391304347826,0.9565217391304348,0.30434782608695654,0.9239130434782609,0.9565217391304348,0.391304347826087,0.33695652173913043,0.9565217391304348,0.9891304347826086,0.9565217391304348
36,0.967128027681661,0.9567474048442907,0.870242214532872,0.9532871972318339,0.0,0.9653979238754326,0.9515570934256056,0.9688581314878892,0.9757785467128027,0.7716262975778547,0.4532871972318339,0.8339100346020761,0.9602076124567474,0.0,0.28546712802768165,0.6211072664359861,0.9221453287197232,0.9567474048442907,0.9463667820069204,0.9498269896193772,0.9359861591695502,0.9550173010380623,0.9463667820069204,0.42387543252595156,0.28719723183391005,0.28546712802768165,0.7837370242214533,0.9290657439446367,0.9550173010380623,0.0,0.2664359861591695,0.5622837370242214,0.9792387543252595,0.5501730103806228,0.972318339100346,0.7802768166089965,0.0,0.6003460207612457,0.8581314878892734,0,0.43944636678200694,0.986159169550173,0.28719723183391005,0.6193771626297578,0.9688581314878892,0.9844290657439446,0.28546712802768165,0.44982698961937717,0.8321799307958477,0.4359861591695502,0.0,0.9688581314878892,0.7318339100346021,0.801038062283737,0.19377162629757785,0.9221453287197232,0.9705882352941176,0.8148788927335641,0.9394463667820069,0.9290657439446367,0.9065743944636678,0.9532871972318339,0.9515570934256056,0.28546712802768165,0.583044982698962,0.43944636678200694,0.9463667820069204,0.9602076124567474,0.14359861591695502,0.9515570934256056,0.9480968858131488,0.9463667820069204,0.2906574394463668,0.7525951557093425,0.43252595155709345,0.9653979238754326,0.9394463667820069,0.16608996539792387,0.28546712802768165,0,0.9238754325259516,0.0,0.9532871972318339,0.0,0.0,0.20069204152249134,0.884083044982699,0.9204152249134948,0.9515570934256056,0.8996539792387543,0.14186851211072665,0.9463667820069204,0.8979238754325259,0.9809688581314879,0.8737024221453287,0.0,0.9688581314878892,0.9567474048442907,0.754325259515571,0.9446366782006921,0.9740484429065744,0.39965397923875434,0.9705882352941176,0.884083044982699,0.2889273356401384,0.9204152249134948,0.9740484429065744,0.28719723183391005,0.0,0.9636678200692042,0,0.972318339100346,0.0,0.17993079584775087,0.0,0.9532871972318339,0.9775086505190311,0.9567474048442907,0.9394463667820069,0.9740484429065744,0.9083044982698962,0.6920415224913494,0.7214532871972318,0.0,0.9429065743944637,0.9619377162629758,0.0,0.9584775086505191,0.0,0.9757785467128027,0.9532871972318339,0.9740484429065744,0.9480968858131488,0.7577854671280276,0,0.43944636678200694,0.9775086505190311,0.870242214532872,0.9809688581314879,0.9584775086505191,0.9290657439446367,0.9204152249134948,0.9325259515570934,0.9602076124567474,0.9515570934256056,0.8148788927335641,0.7906574394463668,0.9602076124567474,0.9775086505190311,0.9653979238754326
37,0.78125,0.734375,0.71875,0.7864583333333334,0.5364583333333334,0.7916666666666666,0.7760416666666666,0.7708333333333334,0.78125,0.65625,0.6510416666666666,0.6510416666666666,0.7708333333333334,0.7604166666666666,0.7291666666666666,0.65625,0.78125,0.7604166666666666,0.7447916666666666,0.7708333333333334,0.7395833333333334,0.671875,0.78125,0.6510416666666666,0.6510416666666666,0.7291666666666666,0.75,0.8020833333333334,0.78125,0.6510416666666666,0.6510416666666666,0.7760416666666666,0.7864583333333334,0.6510416666666666,0.8072916666666666,0.7395833333333334,0.7604166666666666,0.6510416666666666,0.7864583333333334,0,0.59375,0.8020833333333334,0.703125,0.6510416666666666,0.78125,0.796875,0.7760416666666666,0.6510416666666666,0.7604166666666666,0.0,0.7552083333333334,0.765625,0.7395833333333334,0.765625,0.6666666666666666,0.75,0.8020833333333334,0.7447916666666666,0.7708333333333334,0.7447916666666666,0.7864583333333334,0.7760416666666666,0.7708333333333334,0.7291666666666666,0.71875,0.5989583333333334,0.7916666666666666,0.7916666666666666,0.3489583333333333,0.7864583333333334,0.7864583333333334,0.625,0.640625,0.625,0.6510416666666666,0.765625,0.75,0.6458333333333334,0.7291666666666666,0,0.6458333333333334,0.6458333333333334,0.71875,0.6302083333333334,0.5364583333333334,0.6354166666666666,0.7552083333333334,0.7395833333333334,0.7760416666666666,0.6510416666666666,0.6510416666666666,0.765625,0.6510416666666666,0.8125,0.765625,0.53125,0.7864583333333334,0.796875,0.6510416666666666,0.75,0.765625,0.7552083333333334,0.7864583333333334,0.7135416666666666,0.6510416666666666,0.7604166666666666,0.78125,0.703125,0.5677083333333334,0.7864583333333334,0,0.78125,0.5364583333333334,0.5885416666666666,0.78125,0.828125,0.7864583333333334,0.7760416666666666,0.7395833333333334,0.7864583333333334,0.6510416666666666,0.703125,0.6510416666666666,0.6510416666666666,0.7395833333333334,0.7447916666666666,0.6510416666666666,0.765625,0.5520833333333334,0.7604166666666666,0.8125,0.7760416666666666,0.7760416666666666,0.7447916666666666,0,0.65625,0.6875,0.75,0.7916666666666666,0.7604166666666666,0.7760416666666666,0.75,0.6510416666666666,0.78125,0.78125,0.78125,0.7604166666666666,0.78125,0.7864583333333334,0.7760416666666666
