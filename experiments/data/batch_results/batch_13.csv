0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
4538,0.0,0.49210206561360875,0.5342243823410288,0.5714864317537465,0.0,0.6245443499392467,0.45889023896314296,0.6763872012960713,0.618874038072094,0.4868367760226813,0.29890643985419196,0.0,0.604293236127987,0.0,0.44106925880923453,0.2774402592142568,0.4791413527744026,0.648440664236533,0.0,0.5451599837991089,0.5609558525718914,0.572701498582422,0.5362494937221547,0.425273390036452,0.5974078574321587,0.45402997164844067,0.4528149048197651,0.46577561765897124,0.5633859862292426,0.0,0.4507897934386391,0.4418793033616849,0.0,0.2774402592142568,0.6038882138517618,0.46982584042122316,0.0,0.29890643985419196,0.5168084244633455,0.0,0.2924260834345889,0.0,0.4572701498582422,0.29890643985419196,0.0,0.0,0.4560550830295666,0.29890643985419196,0.29890643985419196,0.41919805589307413,0.0,0.625354394491697,0.4309437019036047,0.4625354394491697,0.5382746051032807,0.5795868772782503,0.6322397731875253,0.4892669096800324,0.543134872417983,0.5520453624949372,0.48805184285135683,0.541109761036857,0.5402997164844067,0.44106925880923453,0.43013365735115433,0.28392061563385984,0.0,0.587282300526529,0.29890643985419196,0.553665451599838,0.0,0.4576751721344674,0.6022681247468611,0.37626569461320375,0.29890643985419196,0.639935196435804,0.6010530579181855,0.29890643985419196,0.44106925880923453,0.0,0.5087079789388417,0.0,0.5937626569461321,0.0,0.0,0.534629404617254,0.4791413527744026,0.0,0.5508302956662616,0.5188335358444714,0.29890643985419196,0.49655731065208586,0.43418388011340625,0.0,0.5492102065613609,0.0,0.0,0.5698663426488457,0.4576751721344674,0.5573106520858647,0.6245443499392467,0.3863912515188335,0.6164439044147428,0.48764682057513165,0.5763466990684488,0.5135682462535439,0.0,0.4572701498582422,0.0,0.6192790603483191,0.0,0.0,0.0,0.467395706763872,0.0,0.5893074119076549,0.5690562980963954,0.5694613203726205,0.6034831915755366,0.0,0.47225597407857434,0.42284325637910086,0.4710409072498987,0.0,0.5062778452814904,0.4953422438234103,0.0,0.606318347509113,0.0,0.0,0.0,0.0,0.5901174564601053,0.44957472660996356,0.0,0.34750911300121506,0.6213041717294451,0.5350344268934791,0.658971243418388,0.6180639935196436,0.3029566626164439,0.49898744430943703,0.45889023896314296,0.5763466990684488,0.5544754961522884,0.51559335763467,0.0,0.5945727014985824,0.6038882138517618,0.0
4552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
6332,0.7851851851851852,0.7111111111111111,0.5851851851851851,0.7703703703703704,0.5703703703703704,0.7851851851851852,0.674074074074074,0.8296296296296296,0.8222222222222222,0.674074074074074,0.7185185185185186,0.6962962962962963,0.8,0.7037037037037037,0.6962962962962963,0.7481481481481481,0.7703703703703704,0.7185185185185186,0.6444444444444445,0.7333333333333333,0.5851851851851851,0.725925925925926,0.7407407407407407,0.7111111111111111,0.562962962962963,0.6962962962962963,0.5481481481481482,0.6148148148148148,0.7481481481481481,0.5777777777777777,0.5777777777777777,0.7703703703703704,0.7925925925925926,0.7037037037037037,0.8,0.6518518518518519,0.8222222222222222,0.6814814814814815,0.7111111111111111,0.0,0.7185185185185186,0.6814814814814815,0.7111111111111111,0.7555555555555555,0.7703703703703704,0.837037037037037,0.7185185185185186,0.5777777777777777,0.7333333333333333,0.7111111111111111,0.7851851851851852,0.8222222222222222,0.7185185185185186,0.8074074074074075,0.4888888888888889,0.5555555555555556,0.8222222222222222,0.6888888888888889,0.6370370370370371,0.7703703703703704,0.762962962962963,0.7333333333333333,0.7407407407407407,0.6962962962962963,0.6,0.725925925925926,0.8,0.725925925925926,0.4222222222222222,0.7555555555555555,0.7703703703703704,0.7555555555555555,0.5259259259259259,0.7333333333333333,0.725925925925926,0.7851851851851852,0.6592592592592592,0.5777777777777777,0.6962962962962963,0.0,0.5777777777777777,0.5777777777777777,0.7777777777777778,0.5407407407407407,0.6222222222222222,0.4962962962962963,0.7481481481481481,0.6370370370370371,0.7555555555555555,0.5777777777777777,0.5777777777777777,0.7333333333333333,0.7333333333333333,0.7851851851851852,0.7333333333333333,0.6592592592592592,0.8222222222222222,0.8148148148148148,0.5777777777777777,0.7851851851851852,0.8148148148148148,0.7481481481481481,0.7851851851851852,0.7185185185185186,0.5777777777777777,0.7037037037037037,0.8074074074074075,0.7111111111111111,0.4888888888888889,0.7851851851851852,0.0,0.762962962962963,0.5925925925925926,0.5259259259259259,0.8,0.8,0.7851851851851852,0.7037037037037037,0.6962962962962963,0.725925925925926,0.7185185185185186,0.7185185185185186,0.5925925925925926,0.5777777777777777,0.7407407407407407,0.725925925925926,0.5777777777777777,0.8,0.5851851851851851,0.8,0.7851851851851852,0.7407407407407407,0.7925925925925926,0.6592592592592592,0.0,0.7481481481481481,0.8296296296296296,0.5925925925925926,0.7777777777777778,0.7555555555555555,0.6148148148148148,0.6814814814814815,0.5777777777777777,0.762962962962963,0.7481481481481481,0.725925925925926,0.7185185185185186,0.8074074074074075,0.7555555555555555,0.7703703703703704
23380,0.8483547925608012,0.8884120171673819,0.6509298998569385,0.8326180257510729,0.3061516452074392,0.7467811158798283,0.32331902718168815,0.7238912732474965,0.8454935622317596,0.5507868383404864,0.2374821173104435,0.30472103004291845,0.6351931330472103,0.0,0.296137339055794,0.2918454935622318,0.3333333333333333,0.8183118741058655,0.8240343347639485,0.804005722460658,0.7381974248927039,0.6380543633762518,0.7896995708154506,0.2446351931330472,0.6351931330472103,0.296137339055794,0.3748211731044349,0.31616595135908443,0.9070100143061517,0.0,0.4592274678111588,0.5894134477825465,0.9756795422031473,0.25464949928469244,0.8812589413447782,0.43490701001430615,0.3419170243204578,0.2918454935622318,0.8927038626609443,0.0,0.24606580829756797,1.0,0.28469241773962806,0.296137339055794,0.8955650929899857,0.13447782546494993,0.2918454935622318,0.24320457796852646,0.38197424892703863,0.22746781115879827,0.0,0.771101573676681,0.994277539341917,0.3547925608011445,0.5150214592274678,0.7238912732474965,0.932761087267525,0.5937052932761088,0.575107296137339,0.5278969957081545,0.6852646638054364,0.7353361945636624,0.7982832618025751,0.296137339055794,0.46494992846924177,0.2117310443490701,0.8397711015736766,0.9599427753934192,0.2675250357653791,0.8497854077253219,0.7582260371959942,0.7639484978540773,0.6766809728183119,0.43061516452074394,0.2374821173104435,0.8025751072961373,0.7839771101573677,0.24320457796852646,0.296137339055794,0.0,0.48783977110157367,0.27753934191702434,0.8798283261802575,0.0,0.3032904148783977,0.5293276108726752,0.31187410586552217,0.7968526466380543,0.82689556509299,0.4864091559370529,0.24320457796852646,0.8412017167381974,0.7310443490701002,0.9756795422031473,0.6123032904148784,0.30042918454935624,0.932761087267525,0.7968526466380543,0.24320457796852646,0.5364806866952789,0.9356223175965666,0.2832618025751073,0.9484978540772532,0.9799713876967096,0.6266094420600858,0.8526466380543634,0.9685264663805436,0.28469241773962806,0.6824034334763949,0.8984263233190272,0.0,0.721030042918455,0.3032904148783977,0.5221745350500715,0.9170243204577968,0.7997138769670958,0.7067238912732475,0.5550786838340487,0.7997138769670958,0.9685264663805436,0.36623748211731044,0.31187410586552217,0.9055793991416309,0.24320457796852646,0.7467811158798283,0.9241773962804005,0.45493562231759654,0.5793991416309013,0.2718168812589413,0.9928469241773963,0.8068669527896996,0.821173104434907,0.6881258941344778,0.7997138769670958,0.0,0.24606580829756797,0.8283261802575107,0.65379113018598,0.9785407725321889,0.6123032904148784,0.3147353361945637,0.6766809728183119,0.3605150214592275,0.9399141630901288,0.7610872675250357,0.592274678111588,0.351931330472103,0.9155937052932761,0.932761087267525,0.9113018597997139
23381,0.56,0.608,0.576,0.568,0.576,0.64,0.648,0.616,0.624,0.632,0.608,0.584,0.64,0.576,0.664,0.6,0.64,0.6,0.6,0.584,0.616,0.664,0.584,0.576,0.52,0.664,0.6,0.664,0.6,0.584,0.584,0.584,0.544,0.576,0.552,0.552,0.52,0.584,0.6,0.0,0.632,0.0,0.568,0.552,0.608,0.528,0.568,0.584,0.592,0.664,0.552,0.616,0.536,0.528,0.592,0.592,0.544,0.592,0.576,0.568,0.544,0.624,0.64,0.664,0.592,0.552,0.544,0.592,0.584,0.632,0.6,0.536,0.592,0.496,0.6,0.608,0.568,0.584,0.664,0.0,0.584,0.6,0.584,0.616,0.64,0.504,0.632,0.552,0.576,0.584,0.584,0.664,0.536,0.608,0.56,0.584,0.536,0.584,0.584,0.6,0.56,0.576,0.552,0.6,0.584,0.0,0.592,0.568,0.496,0.576,0.0,0.56,0.64,0.552,0.608,0.552,0.592,0.584,0.664,0.56,0.584,0.64,0.568,0.584,0.568,0.536,0.584,0.6,0.0,0.592,0.552,0.664,0.584,0.576,0.0,0.6,0.52,0.56,0.488,0.592,0.648,0.656,0.584,0.584,0.608,0.608,0.56,0.576,0.664,0.592
40474,0.6828571428571428,0.6328571428571429,0.6071428571428571,0.71,0.23714285714285716,0.7042857142857143,0.6971428571428572,0.7114285714285714,0.6985714285714286,0.7042857142857143,0.5828571428571429,0.5828571428571429,0.7157142857142857,0.69,0.5828571428571429,0.5942857142857143,0.7114285714285714,0.6014285714285714,0.6057142857142858,0.7071428571428572,0.6085714285714285,0.7214285714285714,0.7114285714285714,0.5828571428571429,0.5828571428571429,0.6171428571428571,0.6742857142857143,0.6485714285714286,0.7114285714285714,0.5828571428571429,0.5828571428571429,0.6471428571428571,0.6957142857142857,0.3414285714285714,0.7057142857142857,0.6528571428571428,0.37,0.5985714285714285,0.7042857142857143,0.0,0.5828571428571429,0.6985714285714286,0.5828571428571429,0.59,0.7085714285714285,0.09714285714285714,0.5828571428571429,0.5828571428571429,0.6942857142857143,0.0,0.6842857142857143,0.7085714285714285,0.54,0.6242857142857143,0.5814285714285714,0.5885714285714285,0.6971428571428572,0.6914285714285714,0.7042857142857143,0.7,0.6828571428571428,0.7114285714285714,0.7171428571428572,0.5828571428571429,0.7014285714285714,0.5828571428571429,0.7128571428571429,0.7028571428571428,0.5828571428571429,0.7071428571428572,0.6985714285714286,0.7,0.5828571428571429,0.6171428571428571,0.5828571428571429,0.7142857142857143,0.6014285714285714,0.5828571428571429,0.5828571428571429,0.0,0.6542857142857142,0.5828571428571429,0.7085714285714285,0.0,0.38285714285714284,0.5828571428571429,0.7185714285714285,0.6028571428571429,0.7185714285714285,0.6442857142857142,0.5828571428571429,0.6771428571428572,0.6842857142857143,0.6728571428571428,0.6985714285714286,0.5057142857142857,0.6742857142857143,0.7142857142857143,0.5828571428571429,0.7,0.6757142857142857,0.5371428571428571,0.7085714285714285,0.6757142857142857,0.5828571428571429,0.6257142857142857,0.7157142857142857,0.5828571428571429,0.0,0.7128571428571429,0.0,0.6042857142857143,0.38285714285714284,0.5742857142857143,0.7071428571428572,0.7,0.7114285714285714,0.7014285714285714,0.5942857142857143,0.6971428571428572,0.6157142857142858,0.5685714285714286,0.5828571428571429,0.5828571428571429,0.66,0.6514285714285715,0.5828571428571429,0.7114285714285714,0.5614285714285714,0.6942857142857143,0.7014285714285714,0.7171428571428572,0.69,0.5614285714285714,0.0,0.5828571428571429,0.6928571428571428,0.61,0.71,0.7085714285714285,0.6542857142857142,0.6928571428571428,0.5828571428571429,0.7085714285714285,0.7157142857142857,0.6928571428571428,0.33,0.7085714285714285,0.72,0.7057142857142857
40475,0.6728571428571428,0.6357142857142857,0.6071428571428571,0.7185714285714285,0.23714285714285716,0.7114285714285714,0.6971428571428572,0.7171428571428572,0.7114285714285714,0.6985714285714286,0.5828571428571429,0.5828571428571429,0.7128571428571429,0.0,0.5828571428571429,0.5942857142857143,0.7114285714285714,0.6014285714285714,0.6057142857142858,0.71,0.6085714285714285,0.7171428571428572,0.7042857142857143,0.5828571428571429,0.5828571428571429,0.6171428571428571,0.6785714285714286,0.6485714285714286,0.7071428571428572,0.5828571428571429,0.5828571428571429,0.6571428571428571,0.7071428571428572,0.3414285714285714,0.7014285714285714,0.6528571428571428,0.29,0.5985714285714285,0.7,0.0,0.5828571428571429,0.6971428571428572,0.5828571428571429,0.59,0.7028571428571428,0.08857142857142856,0.5828571428571429,0.5828571428571429,0.6942857142857143,0.0,0.69,0.7085714285714285,0.54,0.6242857142857143,0.5842857142857143,0.5885714285714285,0.7171428571428572,0.6914285714285714,0.69,0.7,0.6828571428571428,0.7071428571428572,0.7085714285714285,0.5828571428571429,0.6585714285714286,0.5828571428571429,0.7157142857142857,0.6971428571428572,0.5828571428571429,0.71,0.7,0.6842857142857143,0.5828571428571429,0.6171428571428571,0.5828571428571429,0.7014285714285714,0.6014285714285714,0.5828571428571429,0.5828571428571429,0.0,0.6614285714285715,0.5828571428571429,0.7071428571428572,0.0,0.38285714285714284,0.5828571428571429,0.7185714285714285,0.6028571428571429,0.71,0.6557142857142857,0.5828571428571429,0.6771428571428572,0.6857142857142857,0.6642857142857143,0.6885714285714286,0.5057142857142857,0.6685714285714286,0.7171428571428572,0.5828571428571429,0.7,0.6842857142857143,0.44285714285714284,0.7114285714285714,0.6771428571428572,0.57,0.6257142857142857,0.7085714285714285,0.5828571428571429,0.0,0.7114285714285714,0.0,0.5957142857142858,0.38285714285714284,0.5428571428571428,0.7071428571428572,0.7042857142857143,0.7085714285714285,0.6914285714285714,0.5942857142857143,0.7028571428571428,0.6157142857142858,0.5685714285714286,0.5828571428571429,0.5828571428571429,0.66,0.6514285714285715,0.5828571428571429,0.71,0.5614285714285714,0.6957142857142857,0.7014285714285714,0.7128571428571429,0.69,0.57,0.0,0.5828571428571429,0.6928571428571428,0.61,0.7028571428571428,0.7114285714285714,0.6542857142857142,0.6928571428571428,0.5828571428571429,0.7071428571428572,0.7157142857142857,0.6885714285714286,0.33,0.72,0.7085714285714285,0.7
40476,0.67,0.6357142857142857,0.6071428571428571,0.7185714285714285,0.23714285714285716,0.7014285714285714,0.6957142857142857,0.7142857142857143,0.7128571428571429,0.6814285714285714,0.5828571428571429,0.5828571428571429,0.7128571428571429,0.0,0.5828571428571429,0.5942857142857143,0.7114285714285714,0.6014285714285714,0.6057142857142858,0.7142857142857143,0.6085714285714285,0.7142857142857143,0.7057142857142857,0.5828571428571429,0.5828571428571429,0.6171428571428571,0.69,0.6485714285714286,0.7071428571428572,0.5828571428571429,0.5828571428571429,0.6814285714285714,0.7014285714285714,0.3414285714285714,0.7057142857142857,0.6528571428571428,0.3871428571428571,0.5985714285714285,0.71,0.0,0.5828571428571429,0.7014285714285714,0.5828571428571429,0.59,0.7042857142857143,0.31857142857142856,0.5828571428571429,0.5828571428571429,0.6914285714285714,0.0,0.6857142857142857,0.7071428571428572,0.54,0.6242857142857143,0.5828571428571429,0.5885714285714285,0.7071428571428572,0.6914285714285714,0.6942857142857143,0.7,0.6828571428571428,0.7128571428571429,0.71,0.5828571428571429,0.6442857142857142,0.5828571428571429,0.7028571428571428,0.6957142857142857,0.5828571428571429,0.7042857142857143,0.6957142857142857,0.6985714285714286,0.5814285714285714,0.6171428571428571,0.5828571428571429,0.7028571428571428,0.6014285714285714,0.5828571428571429,0.5828571428571429,0.0,0.6585714285714286,0.6285714285714286,0.7171428571428572,0.0,0.38285714285714284,0.5828571428571429,0.7185714285714285,0.6028571428571429,0.7114285714285714,0.6528571428571428,0.5828571428571429,0.6771428571428572,0.6842857142857143,0.6685714285714286,0.7071428571428572,0.5057142857142857,0.6657142857142857,0.7071428571428572,0.5828571428571429,0.7,0.6914285714285714,0.4514285714285714,0.7128571428571429,0.6728571428571428,0.5814285714285714,0.6257142857142857,0.72,0.5828571428571429,0.0,0.72,0.0,0.6057142857142858,0.38285714285714284,0.5542857142857143,0.7,0.6985714285714286,0.7171428571428572,0.6942857142857143,0.5942857142857143,0.6857142857142857,0.6128571428571429,0.5685714285714286,0.5828571428571429,0.5828571428571429,0.6528571428571428,0.6542857142857142,0.5828571428571429,0.7085714285714285,0.5614285714285714,0.6814285714285714,0.7,0.71,0.69,0.5628571428571428,0.0,0.5828571428571429,0.69,0.61,0.7028571428571428,0.7014285714285714,0.6542857142857142,0.6928571428571428,0.5828571428571429,0.7128571428571429,0.7057142857142857,0.6985714285714286,0.33,0.7142857142857143,0.7128571428571429,0.7014285714285714
40477,0.6871428571428572,0.6357142857142857,0.6071428571428571,0.7257142857142858,0.23714285714285716,0.7128571428571429,0.6971428571428572,0.7128571428571429,0.7071428571428572,0.6857142857142857,0.5828571428571429,0.5828571428571429,0.7142857142857143,0.0,0.5828571428571429,0.5942857142857143,0.7114285714285714,0.6014285714285714,0.6057142857142858,0.7142857142857143,0.6085714285714285,0.7171428571428572,0.7085714285714285,0.5828571428571429,0.5828571428571429,0.6171428571428571,0.6728571428571428,0.6485714285714286,0.71,0.5828571428571429,0.5828571428571429,0.6685714285714286,0.7042857142857143,0.3414285714285714,0.7057142857142857,0.6528571428571428,0.32857142857142857,0.5985714285714285,0.7028571428571428,0.0,0.5828571428571429,0.7057142857142857,0.5828571428571429,0.59,0.7128571428571429,0.27285714285714285,0.5828571428571429,0.5828571428571429,0.6942857142857143,0.0,0.6771428571428572,0.6971428571428572,0.54,0.6242857142857143,0.58,0.5885714285714285,0.7085714285714285,0.6914285714285714,0.6885714285714286,0.7,0.6828571428571428,0.7128571428571429,0.7142857142857143,0.5828571428571429,0.6814285714285714,0.5828571428571429,0.7157142857142857,0.6928571428571428,0.5828571428571429,0.7128571428571429,0.6971428571428572,0.6914285714285714,0.5828571428571429,0.6171428571428571,0.5828571428571429,0.7114285714285714,0.6014285714285714,0.5828571428571429,0.5828571428571429,0.0,0.6585714285714286,0.5828571428571429,0.7157142857142857,0.0,0.38285714285714284,0.5828571428571429,0.7185714285714285,0.6028571428571429,0.7042857142857143,0.6457142857142857,0.5828571428571429,0.6771428571428572,0.6842857142857143,0.6628571428571428,0.6857142857142857,0.5057142857142857,0.66,0.7128571428571429,0.5828571428571429,0.7,0.6685714285714286,0.39714285714285713,0.7071428571428572,0.6671428571428571,0.5814285714285714,0.6257142857142857,0.7128571428571429,0.5828571428571429,0.0,0.7057142857142857,0.0,0.61,0.38285714285714284,0.5728571428571428,0.7071428571428572,0.7057142857142857,0.7257142857142858,0.6942857142857143,0.5942857142857143,0.7,0.6142857142857143,0.5685714285714286,0.5828571428571429,0.5828571428571429,0.6514285714285715,0.6514285714285715,0.5828571428571429,0.6985714285714286,0.5614285714285714,0.6885714285714286,0.6928571428571428,0.7114285714285714,0.69,0.56,0.0,0.5828571428571429,0.6885714285714286,0.61,0.71,0.7042857142857143,0.6542857142857142,0.6928571428571428,0.5828571428571429,0.7042857142857143,0.7157142857142857,0.6971428571428572,0.33,0.71,0.71,0.7042857142857143
40478,0.6728571428571428,0.6357142857142857,0.6071428571428571,0.72,0.23714285714285716,0.7157142857142857,0.6971428571428572,0.7171428571428572,0.7071428571428572,0.6671428571428571,0.5828571428571429,0.5828571428571429,0.7071428571428572,0.6714285714285714,0.5828571428571429,0.5942857142857143,0.7114285714285714,0.6014285714285714,0.6057142857142858,0.7157142857142857,0.6085714285714285,0.7257142857142858,0.7042857142857143,0.5828571428571429,0.5828571428571429,0.6171428571428571,0.6828571428571428,0.6485714285714286,0.7157142857142857,0.5828571428571429,0.5828571428571429,0.6671428571428571,0.7014285714285714,0.3414285714285714,0.7042857142857143,0.6528571428571428,0.31857142857142856,0.5985714285714285,0.7085714285714285,0.0,0.5828571428571429,0.6828571428571428,0.5828571428571429,0.59,0.7042857142857143,0.3028571428571429,0.5828571428571429,0.5828571428571429,0.6914285714285714,0.0,0.6928571428571428,0.7,0.54,0.6242857142857143,0.5742857142857143,0.5885714285714285,0.7071428571428572,0.6914285714285714,0.6971428571428572,0.7,0.6828571428571428,0.7157142857142857,0.7085714285714285,0.5828571428571429,0.66,0.5828571428571429,0.7142857142857143,0.6985714285714286,0.5828571428571429,0.7128571428571429,0.6971428571428572,0.6842857142857143,0.5828571428571429,0.6171428571428571,0.5828571428571429,0.7,0.6014285714285714,0.5828571428571429,0.5828571428571429,0.0,0.6585714285714286,0.6157142857142858,0.7185714285714285,0.0,0.38285714285714284,0.5828571428571429,0.7185714285714285,0.6028571428571429,0.7114285714285714,0.6728571428571428,0.5828571428571429,0.6771428571428572,0.6842857142857143,0.6657142857142857,0.6871428571428572,0.5057142857142857,0.6642857142857143,0.71,0.5828571428571429,0.7,0.6885714285714286,0.4157142857142857,0.7171428571428572,0.6742857142857143,0.5771428571428572,0.6257142857142857,0.7157142857142857,0.5828571428571429,0.0,0.7142857142857143,0.0,0.6014285714285714,0.38285714285714284,0.5757142857142857,0.7057142857142857,0.7071428571428572,0.7114285714285714,0.7,0.5942857142857143,0.6942857142857143,0.6157142857142858,0.5685714285714286,0.5828571428571429,0.5828571428571429,0.6514285714285715,0.6514285714285715,0.5828571428571429,0.7085714285714285,0.5614285714285714,0.6985714285714286,0.7057142857142857,0.71,0.69,0.5628571428571428,0.0,0.5828571428571429,0.7057142857142857,0.61,0.7128571428571429,0.7214285714285714,0.6542857142857142,0.6928571428571428,0.5828571428571429,0.71,0.7228571428571429,0.69,0.33,0.7142857142857143,0.7185714285714285,0.7028571428571428
40496,0.584,0.656,0.672,0.672,0.664,0.68,0.688,0.624,0.64,0.656,0.648,0.0,0.672,0.64,0.2,0.656,0.672,0.656,0.0,0.648,0.688,0.672,0.664,0.672,0.656,0.2,0.688,0.672,0.656,0.648,0.568,0.592,0.656,0.672,0.664,0.496,0.2,0.656,0.336,0.0,0.688,0.64,0.224,0.64,0.656,0.296,0.224,0.624,0.416,0.672,0.632,0.664,0.392,0.648,0.688,0.672,0.664,0.688,0.688,0.656,0.632,0.648,0.656,0.2,0.6,0.68,0.656,0.488,0.112,0.664,0.648,0.688,0.656,0.584,0.448,0.664,0.656,0.112,0.2,0.0,0.112,0.216,0.6,0.624,0.656,0.616,0.68,0.0,0.656,0.112,0.112,0.648,0.648,0.0,0.648,0.432,0.648,0.664,0.6,0.68,0.616,0.672,0.648,0.176,0.664,0.432,0.656,0.224,0.632,0.672,0.0,0.0,0.648,0.6,0.656,0.656,0.664,0.656,0.656,0.648,0.688,0.208,0.432,0.112,0.624,0.632,0.328,0.664,0.264,0.688,0.664,0.64,0.656,0.392,0.0,0.68,0.648,0.688,0.648,0.64,0.672,0.64,0.616,0.656,0.672,0.664,0.0,0.648,0.624,0.64
40497,0.9247083775185578,0.9946977730646872,0.9247083775185578,0.95864262990456,0.024390243902439025,0.9925768822905621,0.9247083775185578,0.9872746553552492,0.9936373276776246,0.926829268292683,0.9247083775185578,0.0,0.9915164369034994,0.9915164369034994,0.9512195121951219,0.9257688229056203,0.9607635206786851,0.9427359490986215,0.0,0.9395546129374337,0.9300106044538706,0.9247083775185578,0.9395546129374337,0.9247083775185578,0.9374337221633086,0.9512195121951219,0.9310710498409331,0.9384941675503712,0.9660657476139979,0.9247083775185578,0.9247083775185578,0.9300106044538706,0.9883351007423118,0.9247083775185578,0.9565217391304348,0.943796394485684,0.9416755037115588,0.9247083775185578,0.95864262990456,0.0,0.7762460233297985,0.9915164369034994,0.936373276776246,0.9247083775185578,0.9915164369034994,0.8600212089077413,0.9374337221633086,0.9247083775185578,0.9247083775185578,0.9247083775185578,0.9904559915164369,0.9925768822905621,0.9172852598091198,0.9374337221633086,0.9247083775185578,0.9331919406150583,0.985153764581124,0.9374337221633086,0.9331919406150583,0.9353128313891834,0.9522799575821845,0.9384941675503712,0.9459172852598091,0.9512195121951219,0.9554612937433722,0.3753976670201485,0.9565217391304348,0.9915164369034994,0.9247083775185578,0.9501590668080594,0.9915164369034994,0.9724284199363733,0.9406150583244963,0.9459172852598091,0.9247083775185578,0.9893955461293743,0.9342523860021209,0.9247083775185578,0.9512195121951219,0.0,0.9300106044538706,0.9247083775185578,0.9724284199363733,0.0,0.9247083775185578,0.936373276776246,0.9427359490986215,0.0,0.9480381760339343,0.9247083775185578,0.9247083775185578,0.9915164369034994,0.9660657476139979,0.0,0.9639448568398727,0.9247083775185578,0.9247083775185578,0.9416755037115588,0.9247083775185578,0.9374337221633086,0.9936373276776246,0.4867444326617179,0.9830328738069989,0.9787910922587487,0.9300106044538706,0.9522799575821845,0.9925768822905621,0.936373276776246,0.9650053022269353,0.9777306468716861,0.0,0.0,0.9247083775185578,0.9374337221633086,0.9915164369034994,0.9512195121951219,0.9925768822905621,0.9660657476139979,0.9628844114528102,0.9957582184517497,0.9247083775185578,0.7348886532343585,0.9247083775185578,0.9247083775185578,0.9946977730646872,0.9957582184517497,0.9247083775185578,0.9660657476139979,0.623541887592789,0.9936373276776246,0.9522799575821845,0.9957582184517497,0.9490986214209968,0.9247083775185578,0.0,0.9247083775185578,0.9787910922587487,0.9247083775185578,0.9915164369034994,0.9819724284199364,0.9247083775185578,0.9957582184517497,0.9247083775185578,0.9798515376458112,0.9406150583244963,0.9448568398727466,0.0,0.9819724284199364,0.9957582184517497,0.985153764581124
40498,0.5616326530612245,0.5444897959183673,0.45224489795918366,0.5730612244897959,0.15428571428571428,0.6212244897959184,0.5028571428571429,0.6791836734693878,0.6179591836734694,0.5281632653061225,0.45224489795918366,0.44571428571428573,0.5951020408163266,0.0,0.4489795918367347,0.43673469387755104,0.5469387755102041,0.6089795918367347,0.6138775510204082,0.5502040816326531,0.4742857142857143,0.5420408163265306,0.5624489795918367,0.4489795918367347,0.5722448979591837,0.4489795918367347,0.5428571428571428,0.46775510204081633,0.5795918367346938,0.0,0.4489795918367347,0.5077551020408163,0.6473469387755102,0.3877551020408163,0.6408163265306123,0.4857142857142857,0.2620408163265306,0.4489795918367347,0.5485714285714286,0.0,0.4473469387755102,0.6351020408163265,0.4489795918367347,0.46040816326530615,0.6122448979591837,0.29551020408163264,0.4489795918367347,0.4489795918367347,0.4636734693877551,0.4489795918367347,0.0,0.6318367346938776,0.5795918367346938,0.45714285714285713,0.4269387755102041,0.4840816326530612,0.6334693877551021,0.676734693877551,0.5942857142857143,0.5338775510204081,0.5330612244897959,0.5477551020408163,0.563265306122449,0.4489795918367347,0.5281632653061225,0.18122448979591838,0.6138775510204082,0.603265306122449,0.4489795918367347,0.5648979591836735,0.5379591836734694,0.5191836734693878,0.5828571428571429,0.4946938775510204,0.4636734693877551,0.6473469387755102,0.6138775510204082,0.4489795918367347,0.4489795918367347,0.0,0.5159183673469387,0.4489795918367347,0.5420408163265306,0.0,0.40653061224489795,0.3346938775510204,0.5371428571428571,0.6040816326530613,0.5714285714285714,0.5346938775510204,0.4489795918367347,0.5412244897959184,0.5355102040816326,0.5363265306122449,0.6236734693877551,0.44326530612244897,0.5812244897959183,0.5869387755102041,0.4489795918367347,0.5395918367346939,0.31755102040816324,0.483265306122449,0.6138775510204082,0.5542857142857143,0.5951020408163266,0.6383673469387755,0.6236734693877551,0.4489795918367347,0.0,0.603265306122449,0.0,0.23020408163265307,0.40653061224489795,0.4228571428571429,0.6351020408163265,0.6073469387755102,0.5697959183673469,0.566530612244898,0.6138775510204082,0.6391836734693878,0.4489795918367347,0.2987755102040816,0.4489795918367347,0.4489795918367347,0.5518367346938775,0.5322448979591837,0.4489795918367347,0.6138775510204082,0.1510204081632653,0.6089795918367347,0.6228571428571429,0.6538775510204081,0.6546938775510204,0.5134693877551021,0.0,0.44571428571428573,0.6685714285714286,0.4506122448979592,0.6751020408163265,0.6089795918367347,0.45877551020408164,0.5526530612244898,0.4489795918367347,0.5951020408163266,0.5461224489795918,0.5836734693877551,0.4775510204081633,0.6057142857142858,0.6138775510204082,0.6008163265306122
40499,0.0,0.9032727272727272,0.9447272727272727,0.9592727272727273,0.0,0.9621818181818181,0.9709090909090909,0.9752727272727273,0.9825454545454545,0.9578181818181818,0.15054545454545454,0.0,0.9527272727272728,0.0,0.18181818181818182,0.09527272727272727,0.9963636363636363,0.976,0.0,0.9389090909090909,0.952,0.9621818181818181,0.9396363636363636,0.19345454545454546,0.9694545454545455,0.18181818181818182,0.5650909090909091,0.9912727272727273,0.9541818181818181,0.0,0.7621818181818182,0.8487272727272728,0.0,0.10909090909090909,0.986909090909091,0.6232727272727273,0.0,0.09090909090909091,0.9301818181818182,0.0,0.20654545454545453,0.0,0.18181818181818182,0.09745454545454546,0.9490909090909091,0.0,0.17454545454545456,0.1461818181818182,0.36872727272727274,0.21454545454545454,0.0,0.9774545454545455,0.5330909090909091,0.6261818181818182,0.9476363636363636,0.9716363636363636,0.9730909090909091,0.9614545454545455,0.9636363636363636,0.9614545454545455,0.8676363636363637,0.9454545454545454,0.944,0.18181818181818182,0.6334545454545455,0.21163636363636365,0.0,0.928,0.2923636363636364,0.9476363636363636,0.0,0.9890909090909091,0.9752727272727273,0.610909090909091,0.128,0.9774545454545455,0.9709090909090909,0.09090909090909091,0.18181818181818182,0.0,0.9076363636363637,0.0,0.9614545454545455,0.0,0.0,0.9461818181818182,0.9578181818181818,0.0,0.9527272727272728,0.9061818181818182,0.09090909090909091,0.8552727272727273,0.872,0.0,0.968,0.0,0.8821818181818182,0.9876363636363636,0.7752727272727272,0.96,0.9825454545454545,0.9403636363636364,0.968,0.8574545454545455,0.9512727272727273,0.9323636363636364,0.9563636363636364,0.18181818181818182,0.0,0.9730909090909091,0.0,0.0,0.0,0.9883636363636363,0.0,0.9621818181818181,0.9767272727272728,0.9403636363636364,0.9709090909090909,0.9541818181818181,0.9221818181818182,0.5272727272727272,0.5483636363636364,0.0,0.8756363636363637,0.9185454545454546,0.0,0.96,0.0,0.0,0.9614545454545455,0.9694545454545455,0.9650909090909091,0.5396363636363637,0.0,0.21163636363636365,0.986909090909091,0.944,0.9825454545454545,0.9636363636363636,0.9418181818181818,0.7316363636363636,0.0,0.9636363636363636,0.9527272727272728,0.9330909090909091,0.0,0.9650909090909091,0.0,0.0
40536,0.8663484486873508,0.8353221957040573,0.8348448687350836,0.8558472553699285,0.6324582338902148,0.8644391408114559,0.8587112171837709,0.8610978520286396,0.8706443914081146,0.8381861575178997,0.8353221957040573,0.8353221957040573,0.8610978520286396,0.0,0.8353221957040573,0.835799522673031,0.8610978520286396,0.8291169451073985,0.839618138424821,0.8606205250596659,0.8405727923627685,0.8591885441527446,0.8568019093078759,0.8372315035799522,0.8353221957040573,0.8353221957040573,0.8353221957040573,0.8615751789976134,0.8582338902147971,0.0,0.8353221957040573,0.847255369928401,0.0,0.839618138424821,0.847255369928401,0.8353221957040573,0.8625298329355608,0.8353221957040573,0.8582338902147971,0.0,0.7393794749403342,0.8673031026252983,0.8353221957040573,0.8486873508353222,0.8644391408114559,0.833890214797136,0.8353221957040573,0.8353221957040573,0.8482100238663485,0.8539379474940334,0.0,0.8682577565632458,0.8047732696897375,0.8372315035799522,0.8353221957040573,0.831980906921241,0.8610978520286396,0.8353221957040573,0.8353221957040573,0.8367541766109785,0.8262529832935561,0.8568019093078759,0.8587112171837709,0.8353221957040573,0.0,0.7221957040572793,0.0,0.8634844868735083,0.8353221957040573,0.8568019093078759,0.8405727923627685,0.8630071599045346,0.8353221957040573,0.8353221957040573,0.8525059665871122,0.8572792362768497,0.8372315035799522,0.8353221957040573,0.8353221957040573,0.0,0.8381861575178997,0.0,0.8596658711217183,0.0,0.0,0.8348448687350836,0.8563245823389022,0.8348448687350836,0.8591885441527446,0.8400954653937948,0.8353221957040573,0.8443914081145585,0.8305489260143198,0.8696897374701671,0.0,0.8004773269689738,0.8568019093078759,0.8429594272076373,0.8353221957040573,0.8381861575178997,0.8572792362768497,0.7241050119331742,0.8539379474940334,0.8577565632458234,0.8353221957040573,0.8630071599045346,0.8668257756563246,0.8353221957040573,0.0,0.8563245823389022,0.0,0.8649164677804296,0.0,0.8353221957040573,0.0,0.0,0.8649164677804296,0.8620525059665871,0.8558472553699285,0.8601431980906922,0.8529832935560859,0.7494033412887828,0.8348448687350836,0.0,0.0,0.8257756563245824,0.0,0.8548926014319809,0.4639618138424821,0.8687350835322196,0.0,0.8668257756563246,0.8372315035799522,0.8315035799522673,0.0,0.7718377088305489,0.8548926014319809,0.8348448687350836,0.8548926014319809,0.8591885441527446,0.8587112171837709,0.8443914081145585,0.8353221957040573,0.8558472553699285,0.8587112171837709,0.0,0.7842482100238664,0.8548926014319809,0.8649164677804296,0.0
40589,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
40592,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
40597,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
40646,0.595,0.5225,0.5775,0.545,0.5,0.5675,0.4675,0.5725,0.5975,0.5425,0.53,0.0,0.575,0.62,0.49,0.5525,0.4675,0.5525,0.0,0.58,0.605,0.0,0.5625,0.5725,0.495,0.49,0.5225,0.4675,0.5475,0.6325,0.495,0.4675,0.6,0.6,0.6125,0.5725,0.61,0.46,0.515,0.0,0.46,0.0,0.5325,0.5925,0.5775,0.5575,0.5325,0.5725,0.555,0.0,0.6025,0.6025,0.525,0.555,0.4875,0.5525,0.5875,0.52,0.5275,0.565,0.5625,0.575,0.575,0.49,0.555,0.465,0.5875,0.51,0.455,0.585,0.565,0.4725,0.4925,0.4925,0.505,0.59,0.575,0.5,0.49,0.0,0.465,0.5025,0.5125,0.515,0.46,0.5375,0.4625,0.0,0.575,0.4875,0.5,0.525,0.4925,0.0,0.5325,0.0,0.5875,0.6225,0.495,0.59,0.59,0.52,0.5725,0.515,0.4975,0.0,0.6025,0.5325,0.5125,0.56,0.0,0.0,0.4625,0.485,0.645,0.6175,0.6025,0.57,0.0,0.5725,0.55,0.4675,0.505,0.5,0.58,0.55,0.4725,0.535,0.5,0.605,0.6175,0.0,0.5675,0.555,0.0,0.465,0.5875,0.595,0.5325,0.5875,0.4625,0.5025,0.595,0.5375,0.59,0.5625,0.0,0.5625,0.0,0.6125
40647,0.745,0.5525,0.7325,0.7475,0.47,0.6675,0.52,0.6775,0.805,0.655,0.785,0.0,0.7775,0.7725,0.5,0.685,0.515,0.675,0.0,0.75,0.72,0.0,0.7525,0.73,0.505,0.5,0.52,0.5175,0.565,0.82,0.5575,0.4975,0.79,0.685,0.8125,0.7925,0.7375,0.5125,0.52,0.0,0.5,0.0,0.63,0.725,0.7625,0.71,0.63,0.7825,0.6375,0.0,0.7775,0.7125,0.4875,0.6475,0.5175,0.6525,0.7625,0.5425,0.4925,0.7125,0.7525,0.7125,0.7025,0.5,0.52,0.5025,0.7775,0.53,0.495,0.7425,0.735,0.5075,0.4825,0.5075,0.5175,0.72,0.7125,0.5,0.5,0.0,0.595,0.5025,0.5125,0.455,0.4925,0.595,0.52,0.0,0.7775,0.485,0.5,0.4825,0.5875,0.0,0.6075,0.0,0.69,0.8225,0.525,0.705,0.7325,0.515,0.625,0.5225,0.485,0.0,0.7625,0.63,0.505,0.6725,0.0,0.0,0.49,0.5,0.8175,0.795,0.7625,0.72,0.0,0.635,0.7125,0.4925,0.5225,0.5,0.7825,0.4975,0.51,0.7575,0.5,0.7425,0.79,0.0,0.6825,0.55,0.0,0.5025,0.7525,0.7275,0.62,0.705,0.5125,0.5,0.79,0.555,0.775,0.62,0.0,0.7575,0.0,0.775
