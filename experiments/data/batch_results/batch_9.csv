0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
987,1.0,1.0,0.992,0.968,0.72,1.0,0.92,0.984,1.0,0.84,0.84,0.84,0.992,0.912,0.84,0.84,0.936,0.976,0.984,0.968,1.0,0.952,0.984,0.84,0.84,0.84,0.84,0.912,0.984,0.84,0.84,0.848,1.0,0.84,0.984,1.0,1.0,0.84,0.944,0,0.832,1.0,0.84,0.864,1.0,1.0,0.84,0.84,0.904,0.84,0.944,0.976,0.992,0.88,0.84,0.992,1.0,0.856,0.912,0.928,1.0,0.984,0.968,0.84,0.896,0.664,1.0,1.0,0.84,0.968,1.0,0.928,0.84,0.88,0.84,0.976,0.984,0.84,0.84,0,0.84,0.84,0.944,0.8,0.768,0.84,0.864,0.984,0.968,0.84,0.84,1.0,0.88,1.0,0.872,0.816,1.0,0.976,0.84,0.944,1.0,0.864,1.0,0.84,0.84,0.984,1.0,0.84,0.792,1.0,0,1.0,0.76,0.792,1.0,0.944,1.0,0.952,0.984,1.0,0.84,0.816,0.952,0.84,0.896,1.0,0.84,0.984,0.368,1.0,0.952,1.0,0.936,0.992,0.0,0.824,0.928,0.992,1.0,0.968,0.888,1.0,0.84,1.0,0.952,0.848,1.0,1.0,1.0,1.0

990,0.7608695652173914,0.7336956521739131,0.7010869565217391,0.75,0.0,0.7717391304347826,0.7391304347826086,0.7934782608695652,0.7880434782608695,0.7228260869565217,0.7119565217391305,0.7119565217391305,0.75,0.8043478260869565,0.7010869565217391,0.7228260869565217,0.7445652173913043,0.7282608695652174,0.7445652173913043,0.7717391304347826,0.7391304347826086,0.7228260869565217,0.7717391304347826,0.7282608695652174,0.7119565217391305,0.7010869565217391,0.7228260869565217,0.7445652173913043,0.7554347826086957,0.7119565217391305,0.7119565217391305,0.7445652173913043,0.7554347826086957,0.7282608695652174,0.7554347826086957,0.6956521739130435,0.7445652173913043,0.7119565217391305,0.7554347826086957,0,0.7228260869565217,0.7391304347826086,0.7119565217391305,0.7282608695652174,0.7663043478260869,0.75,0.7119565217391305,0.7119565217391305,0.7119565217391305,0.7282608695652174,0.7880434782608695,0.7934782608695652,0.717391304347826,0.7445652173913043,0.7010869565217391,0.7119565217391305,0.7554347826086957,0.75,0.7663043478260869,0.7663043478260869,0.6847826086956522,0.782608695652174,0.7608695652173914,0.7010869565217391,0.6684782608695652,0.592391304347826,0.7282608695652174,0.7663043478260869,0.7119565217391305,0.7717391304347826,0.7391304347826086,0.7445652173913043,0.7065217391304348,0.7010869565217391,0.7119565217391305,0.7717391304347826,0.7336956521739131,0.7119565217391305,0.7010869565217391,0,0.7119565217391305,0.0,0.7554347826086957,0.6195652173913043,0.0,0.6902173913043478,0.7391304347826086,0.7391304347826086,0.7717391304347826,0.7119565217391305,0.7119565217391305,0.7065217391304348,0.7445652173913043,0.782608695652174,0.75,0.6793478260869565,0.7608695652173914,0.7336956521739131,0.7119565217391305,0.7608695652173914,0.7989130434782609,0.5760869565217391,0.7717391304347826,0.7717391304347826,0.717391304347826,0.6956521739130435,0.7771739130434783,0.7119565217391305,0.6195652173913043,0.7663043478260869,0,0.7989130434782609,0.0,0.6358695652173914,0.7663043478260869,0.7391304347826086,0.7717391304347826,0.7717391304347826,0.7336956521739131,0.7608695652173914,0.7119565217391305,0.7282608695652174,0.7119565217391305,0.0,0.7336956521739131,0.717391304347826,0.0,0.7608695652173914,0.0,0.7717391304347826,0.75,0.7717391304347826,0.7608695652173914,0.7228260869565217,0.0,0.7282608695652174,0.7934782608695652,0.7065217391304348,0.7934782608695652,0.7880434782608695,0.7445652173913043,0.7336956521739131,0.7119565217391305,0.7608695652173914,0.7717391304347826,0.7010869565217391,0.4891304347826087,0.7554347826086957,0.75,0.7608695652173914
991,0.8796296296296297,0.9421296296296297,0.9305555555555556,0.9560185185185185,0.875,0.9513888888888888,0.9328703703703703,0.9699074074074074,0.9953703703703703,0.9166666666666666,0.8842592592592593,0.0,0.9421296296296297,0.9467592592592593,0.7013888888888888,0.9606481481481481,0.9328703703703703,0.9537037037037037,0.0,0.9375,0.9328703703703703,0.9305555555555556,0.9398148148148148,0.9212962962962963,0.7777777777777778,0.7013888888888888,0.7870370370370371,0.9328703703703703,0.9398148148148148,0.7013888888888888,0.7013888888888888,0.8449074074074074,0.9837962962962963,0.9444444444444444,0.9351851851851852,0.8564814814814815,1.0,0.7013888888888888,0.8819444444444444,0,0.875,0.9236111111111112,0.7175925925925926,0.9930555555555556,0.9398148148148148,1.0,0.7175925925925926,0.7013888888888888,0.8240740740740741,0.9282407407407407,0.9490740740740741,0.9768518518518519,0.7685185185185185,0.9421296296296297,0.7708333333333334,0.9606481481481481,0.9652777777777778,0.7777777777777778,0.7013888888888888,0.9560185185185185,0.9027777777777778,0.9490740740740741,0.9421296296296297,0.7013888888888888,0.8472222222222222,0.875,0.9282407407407407,0.875,0.7013888888888888,0.9513888888888888,0.8912037037037037,0.9236111111111112,0.8194444444444444,0.8611111111111112,0.8819444444444444,0.9652777777777778,0.9490740740740741,0.7013888888888888,0.7013888888888888,0,0.8055555555555556,0.7268518518518519,0.9236111111111112,0.8773148148148148,0.9212962962962963,0.9398148148148148,0.9097222222222222,0.0,0.9467592592592593,0.7013888888888888,0.7013888888888888,0.9097222222222222,0.9212962962962963,0.0,0.9004629629629629,0.8912037037037037,0.9629629629629629,0.8981481481481481,0.7013888888888888,0.9537037037037037,1.0,0.7199074074074074,0.9583333333333334,0.8310185185185185,0.7083333333333334,0.8587962962962963,0.9537037037037037,0.7175925925925926,0.7916666666666666,0.9583333333333334,0,0.0,0.9212962962962963,0.9143518518518519,0.9513888888888888,0.9212962962962963,0.9768518518518519,0.9490740740740741,0.9513888888888888,0.9560185185185185,0.9398148148148148,0.875,0.7314814814814815,0.7013888888888888,0.9537037037037037,0.9560185185185185,0.7013888888888888,0.9421296296296297,0.6481481481481481,0.9930555555555556,0.9305555555555556,0.9375,0.9606481481481481,0.7013888888888888,0.8958333333333334,0.9375,0.9884259259259259,0.8703703703703703,0.9884259259259259,0.9606481481481481,0.9166666666666666,0.9143518518518519,0.7013888888888888,0.9398148148148148,0.9537037037037037,0.9097222222222222,0.0,0.9537037037037037,0.9467592592592593,0.9398148148148148
993,0.9766381766381766,0.9737891737891737,0.8638176638176638,0.9766381766381766,0.0,0.9766381766381766,0.8740740740740741,0.9754985754985755,0.9766381766381766,0.9629629629629629,0.9743589743589743,0.9065527065527066,0.9766381766381766,0.0,0.9743589743589743,0.9709401709401709,0.9749287749287749,0.8689458689458689,0.8689458689458689,0.9766381766381766,0.8695156695156695,0.9766381766381766,0.9766381766381766,0.9692307692307692,0.6307692307692307,0.9743589743589743,0.6262108262108262,0.8729344729344729,0.9766381766381766,0.0,0.6301994301994301,0.9213675213675213,0.0,0.9703703703703703,0.9749287749287749,0.9128205128205128,0.6871794871794872,0.9743589743589743,0.9766381766381766,0,0.9635327635327635,0.9766381766381766,0.8387464387464387,0.9754985754985755,0.9766381766381766,0.9122507122507123,0.8387464387464387,0.6301994301994301,0.9264957264957265,0.976068376068376,0.0,0.9732193732193732,0.7817663817663818,0.9680911680911681,0.6142450142450142,0.8672364672364672,0.976068376068376,0.9173789173789174,0.6347578347578348,0.9709401709401709,0.9487179487179487,0.9766381766381766,0.9766381766381766,0.9743589743589743,0.8284900284900285,0.972079772079772,0.0,0.9766381766381766,0.6301994301994301,0.9766381766381766,0.9766381766381766,0.9772079772079773,0.6307692307692307,0.9766381766381766,0.9766381766381766,0.9766381766381766,0.8700854700854701,0.6301994301994301,0.9743589743589743,0,0.9749287749287749,0.0,0.976068376068376,0.0,0.0,0.6028490028490029,0.9772079772079773,0.8643874643874644,0.9766381766381766,0.9743589743589743,0.6301994301994301,0.9766381766381766,0.9732193732193732,0.9259259259259259,0.0,0.0,0.9766381766381766,0.9749287749287749,0.717948717948718,0.9692307692307692,0.9743589743589743,0.8222222222222222,0.9766381766381766,0.9766381766381766,0.6165242165242165,0.8729344729344729,0.976068376068376,0.8387464387464387,0.0,0.9766381766381766,0,0.8723646723646724,0.0,0.6142450142450142,0.0,0.0,0.9754985754985755,0.9766381766381766,0.8717948717948718,0.976068376068376,0.9766381766381766,0.8923076923076924,0.8227920227920228,0.0,0.9641025641025641,0.9737891737891737,0.0,0.9766381766381766,0.0,0.9766381766381766,0.0,0.9754985754985755,0.9658119658119658,0.796011396011396,0.0,0.9737891737891737,0.976068376068376,0.8632478632478633,0.976068376068376,0.9766381766381766,0.8729344729344729,0.9726495726495726,0.6301994301994301,0.9766381766381766,0.9766381766381766,0.0,0.6364672364672365,0.9766381766381766,0.9743589743589743,0.0
994,0.9858490566037735,0.9716981132075472,0.8632075471698113,0.9858490566037735,0.7169811320754716,0.9811320754716981,0.9811320754716981,0.9952830188679245,0.9952830188679245,0.8349056603773585,0.7405660377358491,0.7405660377358491,0.9905660377358491,0.9481132075471698,0.7688679245283019,0.7405660377358491,0.9811320754716981,0.9386792452830188,0.910377358490566,0.9622641509433962,0.9056603773584906,0.8867924528301887,0.9811320754716981,0.7405660377358491,0.7405660377358491,0.7405660377358491,0.9481132075471698,0.9575471698113207,0.9716981132075472,0.7405660377358491,0.7405660377358491,0.7971698113207547,1.0,0.7405660377358491,0.9858490566037735,0.8820754716981132,1.0,0.7405660377358491,0.9056603773584906,0,0.7358490566037735,0.9528301886792453,0.7028301886792453,0.7405660377358491,0.9764150943396226,0.9858490566037735,0.7028301886792453,0.7405660377358491,0.9481132075471698,0.0,0.9622641509433962,0.9905660377358491,0.839622641509434,0.8679245283018868,0.7405660377358491,0.910377358490566,1.0,0.9669811320754716,0.910377358490566,0.9292452830188679,0.8915094339622641,0.9622641509433962,0.9764150943396226,0.7688679245283019,0.9433962264150944,0.6745283018867925,0.9575471698113207,0.9339622641509434,0.7405660377358491,0.9811320754716981,0.9716981132075472,0.9622641509433962,0.7405660377358491,0.910377358490566,0.7405660377358491,1.0,0.9009433962264151,0.7405660377358491,0.7688679245283019,0,0.7405660377358491,0.75,0.9764150943396226,0.6886792452830188,0.7311320754716981,0.7452830188679245,0.7924528301886793,0.8820754716981132,0.9669811320754716,0.7405660377358491,0.7405660377358491,0.9433962264150944,0.9481132075471698,0.9952830188679245,0.9386792452830188,0.7783018867924528,0.9952830188679245,0.9575471698113207,0.7405660377358491,0.9339622641509434,0.9952830188679245,0.9245283018867925,1.0,0.9245283018867925,0.7405660377358491,0.9056603773584906,0.9905660377358491,0.7028301886792453,0.6886792452830188,0.9905660377358491,0,0.9905660377358491,0.7311320754716981,0.6792452830188679,0.9811320754716981,0.9669811320754716,0.9952830188679245,0.9669811320754716,0.9481132075471698,0.9716981132075472,0.7405660377358491,0.7216981132075472,0.7641509433962265,0.7405660377358491,0.9575471698113207,0.9858490566037735,0.7405660377358491,0.9764150943396226,0.5660377358490566,0.9858490566037735,0.9292452830188679,0.9481132075471698,0.9764150943396226,0.839622641509434,0.0,0.7405660377358491,0.9811320754716981,0.8726415094339622,1.0,0.9905660377358491,0.9528301886792453,0.9716981132075472,0.7405660377358491,0.9858490566037735,0.9716981132075472,0.910377358490566,0.8632075471698113,0.9952830188679245,0.9528301886792453,0.9905660377358491
995,0.994,0.988,0.994,0.994,0.948,0.992,0.988,0.994,0.994,0.97,0.9,0.928,0.992,0.0,0.986,0.898,0.994,0.996,0.996,0.994,0.998,0.994,0.994,0.9,0.9,0.986,0.9,0.996,0.992,0.0,0.9,0.972,0.994,0.9,0.998,0.988,0.99,0.9,0.992,0,0.9,0.996,0.978,0.9,0.992,0.682,0.978,0.9,0.978,0.0,0.0,0.992,0.9,0.986,0.9,0.996,0.992,0.982,0.988,0.998,0.984,0.994,0.992,0.986,0.97,0.9,0.988,0.992,0.9,0.992,0.984,0.99,0.9,0.988,0.9,0.996,0.994,0.9,0.986,0,0.962,0.96,0.994,0.0,0.948,0.9,0.996,0.994,0.994,0.9,0.9,0.976,0.99,0.996,0.97,0.946,0.994,0.992,0.9,0.996,0.994,0.91,0.992,0.992,0.9,0.994,0.994,0.978,0.0,0.996,0,0.994,0.948,0.896,0.0,0.99,0.992,0.992,0.996,0.992,0.984,0.87,0.9,0.9,0.986,0.988,0.9,0.99,0.896,0.992,0.99,0.992,0.992,0.904,0.0,0.9,0.998,0.994,0.996,0.99,0.998,0.988,0.9,0.994,0.992,0.964,0.928,0.992,0.994,0.99
1000,0.9713679745493107,0.9904559915164369,0.9416755037115588,0.9671261930010604,0.953340402969247,0.9936373276776246,0.9522799575821845,0.9957582184517497,0.9925768822905621,0.9310710498409331,0.9225874867444327,0.9342523860021209,0.9925768822905621,0.0,0.9724284199363733,0.926829268292683,0.9713679745493107,0.9490986214209968,0.9427359490986215,0.9469777306468717,0.943796394485684,0.9225874867444327,0.968186638388123,0.9225874867444327,0.9225874867444327,0.9724284199363733,0.9247083775185578,0.9544008483563097,0.9777306468716861,0.9225874867444327,0.9225874867444327,0.9469777306468717,0.9915164369034994,0.9225874867444327,0.9501590668080594,0.9416755037115588,0.9575821845174973,0.9225874867444327,0.9809119830328739,0,0.9109225874867445,0.9904559915164369,0.9342523860021209,0.9194061505832449,0.9915164369034994,0.9331919406150583,0.9342523860021209,0.9225874867444327,0.9384941675503712,0.0,0.9946977730646872,0.9925768822905621,0.9236479321314952,0.9374337221633086,0.9225874867444327,0.943796394485684,0.9872746553552492,0.9300106044538706,0.9300106044538706,0.9310710498409331,0.9427359490986215,0.9448568398727466,0.9480381760339343,0.9724284199363733,0.9671261930010604,0.2014846235418876,0.9480381760339343,0.9925768822905621,0.9225874867444327,0.968186638388123,0.9915164369034994,0.9904559915164369,0.9225874867444327,0.9777306468716861,0.9225874867444327,0.9915164369034994,0.9480381760339343,0.9257688229056203,0.9724284199363733,0,0.9427359490986215,0.9289501590668081,0.9777306468716861,0.0,0.9501590668080594,0.9225874867444327,0.9374337221633086,0.9406150583244963,0.9565217391304348,0.9236479321314952,0.9225874867444327,0.9904559915164369,0.9787910922587487,0.9713679745493107,0.9618239660657476,0.9490986214209968,0.985153764581124,0.9384941675503712,0.9225874867444327,0.9342523860021209,0.9925768822905621,0.806998939554613,0.9883351007423118,0.975609756097561,0.9225874867444327,0.9427359490986215,0.9915164369034994,0.9342523860021209,0.0,0.9766702014846236,0,0.9692470837751855,0.9501590668080594,0.9225874867444327,0.9957582184517497,0.9448568398727466,0.9946977730646872,0.9872746553552492,0.9501590668080594,0.9936373276776246,0.9225874867444327,0.7539766702014846,0.9225874867444327,0.9225874867444327,0.9978791092258749,0.9968186638388123,0.9225874867444327,0.985153764581124,0.9109225874867445,0.9925768822905621,0.9480381760339343,0.9968186638388123,0.9384941675503712,0.9331919406150583,0.0,0.9225874867444327,0.9872746553552492,0.9416755037115588,0.9925768822905621,0.9925768822905621,0.9490986214209968,0.9968186638388123,0.9225874867444327,0.9872746553552492,0.9406150583244963,0.9544008483563097,0.9448568398727466,0.9830328738069989,0.9968186638388123,0.9915164369034994
1002,0.8947649572649573,0.8862179487179487,0.8942307692307693,0.8963675213675214,0.0,0.8952991452991453,0.4674145299145299,0.8942307692307693,0.8872863247863247,0.0,0.8942307692307693,0.8942307692307693,0.8963675213675214,0.0,0.8942307692307693,0.8969017094017094,0.8963675213675214,0.8776709401709402,0.8931623931623932,0.8952991452991453,0.8942307692307693,0.8936965811965812,0.8947649572649573,0.8942307692307693,0.8942307692307693,0.8942307692307693,0.8942307692307693,0.8942307692307693,0.8985042735042735,0.0,0.8942307692307693,0.8947649572649573,0.0,0.8942307692307693,0.8936965811965812,0.8931623931623932,0.8723290598290598,0.8942307692307693,0.8952991452991453,0,0.6746794871794872,0.8862179487179487,0.8942307692307693,0.8798076923076923,0.8952991452991453,0.8595085470085471,0.8942307692307693,0.8942307692307693,0.8899572649572649,0.8942307692307693,0.0,0.8894230769230769,0.8766025641025641,0.8835470085470085,0.8942307692307693,0.8910256410256411,0.8915598290598291,0.8942307692307693,0.8942307692307693,0.8931623931623932,0.8760683760683761,0.8952991452991453,0.8947649572649573,0.8942307692307693,0.0,0.6810897435897436,0.0,0.8947649572649573,0.10576923076923077,0.8947649572649573,0.8942307692307693,0.8952991452991453,0.8942307692307693,0.8942307692307693,0.8942307692307693,0.8814102564102564,0.8894230769230769,0.8942307692307693,0.8942307692307693,0,0.8942307692307693,0.0,0.8926282051282052,0.0,0.0,0.8942307692307693,0.8942307692307693,0.8926282051282052,0.8958333333333334,0.8942307692307693,0.8942307692307693,0.8819444444444444,0.8696581196581197,0.8947649572649573,0.0,0.0,0.8936965811965812,0.8936965811965812,0.8942307692307693,0.8947649572649573,0.8739316239316239,0.6271367521367521,0.8931623931623932,0.8856837606837606,0.8942307692307693,0.8899572649572649,0.8969017094017094,0.8942307692307693,0.0,0.8931623931623932,0,0.8936965811965812,0.0,0.8942307692307693,0.0,0.0,0.8936965811965812,0.8952991452991453,0.8835470085470085,0.8888888888888888,0.8942307692307693,0.6597222222222222,0.8942307692307693,0.0,0.0,0.8782051282051282,0.0,0.8952991452991453,0.0,0.8814102564102564,0.0,0.8856837606837606,0.8936965811965812,0.8926282051282052,0.0,0.686965811965812,0.8931623931623932,0.8942307692307693,0.8867521367521367,0.8958333333333334,0.8942307692307693,0.8819444444444444,0.8942307692307693,0.8952991452991453,0.8942307692307693,0.0,0.4155982905982906,0.8942307692307693,0.8899572649572649,0.0
1003,0.7647058823529411,0.788235294117647,0.8117647058823529,0.8352941176470589,0.7411764705882353,0.8235294117647058,0.8235294117647058,0.8117647058823529,0.788235294117647,0.7529411764705882,0.788235294117647,0.0,0.8235294117647058,0.7764705882352941,0.6823529411764706,0.7647058823529411,0.8,0.8117647058823529,0.0,0.8117647058823529,0.8,0.8117647058823529,0.8117647058823529,0.7764705882352941,0.7529411764705882,0.7529411764705882,0.7411764705882353,0.8,0.788235294117647,0.7529411764705882,0.7529411764705882,0.8,0.8235294117647058,0.7764705882352941,0.8235294117647058,0.7647058823529411,0.8352941176470589,0.7529411764705882,0.8,0,0.7647058823529411,0.8,0.7764705882352941,0.7647058823529411,0.8,0.7647058823529411,0.7764705882352941,0.7529411764705882,0.7764705882352941,0.7647058823529411,0.8117647058823529,0.8235294117647058,0.7058823529411765,0.7764705882352941,0.7529411764705882,0.8,0.8235294117647058,0.7529411764705882,0.7647058823529411,0.8235294117647058,0.8117647058823529,0.8,0.8117647058823529,0.6823529411764706,0.7176470588235294,0.7058823529411765,0.8117647058823529,0.788235294117647,0.7529411764705882,0.8117647058823529,0.8117647058823529,0.8352941176470589,0.8,0.7058823529411765,0.7529411764705882,0.8117647058823529,0.8235294117647058,0.7529411764705882,0.6823529411764706,0,0.7529411764705882,0.788235294117647,0.8352941176470589,0.788235294117647,0.7647058823529411,0.7529411764705882,0.8352941176470589,0.0,0.8,0.7529411764705882,0.7529411764705882,0.7647058823529411,0.7058823529411765,0.0,0.7764705882352941,0.7529411764705882,0.8235294117647058,0.8235294117647058,0.7529411764705882,0.7764705882352941,0.8,0.7058823529411765,0.8235294117647058,0.8117647058823529,0.7529411764705882,0.7647058823529411,0.8235294117647058,0.7764705882352941,0.7529411764705882,0.8235294117647058,0,0.0,0.7647058823529411,0.7647058823529411,0.8235294117647058,0.8117647058823529,0.8,0.7764705882352941,0.8470588235294118,0.8117647058823529,0.8,0.7411764705882353,0.7529411764705882,0.7529411764705882,0.788235294117647,0.788235294117647,0.7529411764705882,0.8352941176470589,0.6588235294117647,0.788235294117647,0.8235294117647058,0.8,0.8352941176470589,0.7529411764705882,0.0,0.7529411764705882,0.788235294117647,0.8117647058823529,0.788235294117647,0.8235294117647058,0.8352941176470589,0.8117647058823529,0.7529411764705882,0.8235294117647058,0.8235294117647058,0.7529411764705882,0.0,0.8,0.8117647058823529,0.7764705882352941
1004,1.0,0.9866666666666667,0.8733333333333333,1.0,0.0,1.0,1.0,0.9933333333333333,1.0,0.8666666666666667,0.8333333333333334,0.9266666666666666,1.0,0.9866666666666667,0.9866666666666667,0.8333333333333334,1.0,1.0,0.96,1.0,0.9866666666666667,0.9933333333333333,1.0,0.8333333333333334,0.8333333333333334,0.9866666666666667,0.8333333333333334,1.0,1.0,0.8333333333333334,0.8333333333333334,0.9933333333333333,1.0,0.8333333333333334,1.0,1.0,1.0,0.8333333333333334,1.0,0,0.8333333333333334,1.0,0.98,0.8333333333333334,1.0,1.0,0.98,0.8333333333333334,0.92,0.0,0.9866666666666667,1.0,0.8866666666666667,0.9933333333333333,0.8333333333333334,0.9933333333333333,1.0,0.8333333333333334,0.94,1.0,1.0,0.9866666666666667,1.0,0.9866666666666667,0.9466666666666667,0.19333333333333333,1.0,0.9933333333333333,0.8333333333333334,1.0,0.9866666666666667,0.9866666666666667,0.8333333333333334,0.96,0.8333333333333334,1.0,0.9933333333333333,0.8333333333333334,0.9866666666666667,0,0.8333333333333334,0.0,1.0,0.7866666666666666,0.0,0.8333333333333334,0.98,0.88,1.0,0.8333333333333334,0.8333333333333334,0.9866666666666667,0.9066666666666666,1.0,0.9533333333333334,0.9733333333333334,1.0,1.0,0.8333333333333334,0.9933333333333333,1.0,1.0,1.0,1.0,0.8333333333333334,1.0,0.9933333333333333,0.98,0.7933333333333333,1.0,0,1.0,0.0,0.8133333333333334,1.0,1.0,1.0,0.9933333333333333,0.9933333333333333,0.9933333333333333,0.9466666666666667,0.98,0.86,0.0,0.9866666666666667,0.9933333333333333,0.0,1.0,0.4866666666666667,0.9933333333333333,1.0,1.0,1.0,0.8733333333333333,0.0,0.8333333333333334,1.0,0.8866666666666667,1.0,1.0,1.0,0.9933333333333333,0.8333333333333334,1.0,1.0,0.94,1.0,1.0,1.0,1.0
1008,0.6105263157894737,0.631578947368421,0.6736842105263158,0.6631578947368421,0.6105263157894737,0.6421052631578947,0.6947368421052632,0.6526315789473685,0.6,0.6736842105263158,0.6210526315789474,0.0,0.6842105263157895,0.6105263157894737,0.6526315789473685,0.6210526315789474,0.6526315789473685,0.5894736842105263,0.0,0.6526315789473685,0.6421052631578947,0.6,0.6526315789473685,0.6526315789473685,0.5684210526315789,0.6526315789473685,0.5473684210526316,0.6631578947368421,0.5684210526315789,0.5684210526315789,0.5684210526315789,0.5263157894736842,0.5894736842105263,0.6842105263157895,0.5157894736842106,0.5368421052631579,0.6,0.5578947368421052,0.6526315789473685,0,0.6105263157894737,0.6,0.5052631578947369,0.631578947368421,0.6631578947368421,0.6,0.5052631578947369,0.5684210526315789,0.5473684210526316,0.5684210526315789,0.5894736842105263,0.6105263157894737,0.45263157894736844,0.5789473684210527,0.5473684210526316,0.6421052631578947,0.6210526315789474,0.5789473684210527,0.5473684210526316,0.631578947368421,0.5473684210526316,0.6631578947368421,0.6842105263157895,0.6526315789473685,0.5368421052631579,0.6210526315789474,0.6105263157894737,0.6210526315789474,0.5684210526315789,0.6842105263157895,0.6631578947368421,0.6210526315789474,0.6421052631578947,0.6105263157894737,0.6421052631578947,0.6842105263157895,0.6210526315789474,0.5684210526315789,0.6526315789473685,0,0.5684210526315789,0.5684210526315789,0.6736842105263158,0.5473684210526316,0.6631578947368421,0.47368421052631576,0.7052631578947368,0.0,0.6421052631578947,0.5684210526315789,0.5684210526315789,0.5894736842105263,0.6105263157894737,0.0,0.5473684210526316,0.5684210526315789,0.6736842105263158,0.6210526315789474,0.5684210526315789,0.631578947368421,0.6,0.6105263157894737,0.6421052631578947,0.631578947368421,0.6105263157894737,0.6526315789473685,0.6421052631578947,0.5052631578947369,0.4842105263157895,0.6526315789473685,0,0.0,0.6842105263157895,0.5157894736842106,0.6105263157894737,0.6526315789473685,0.6,0.6421052631578947,0.6421052631578947,0.6526315789473685,0.6210526315789474,0.6631578947368421,0.47368421052631576,0.5684210526315789,0.5684210526315789,0.6210526315789474,0.5684210526315789,0.7052631578947368,0.5473684210526316,0.6210526315789474,0.5368421052631579,0.6421052631578947,0.6,0.47368421052631576,0.0,0.6421052631578947,0.5473684210526316,0.6,0.5578947368421052,0.6736842105263158,0.7052631578947368,0.631578947368421,0.5684210526315789,0.5894736842105263,0.6736842105263158,0.6736842105263158,0.0,0.6526315789473685,0.6,0.6105263157894737
1010,0.9891304347826086,0.9891304347826086,0.6956521739130435,1.0,1.0,1.0,1.0,1.0,1.0,0.75,0.9891304347826086,0.6956521739130435,1.0,0.9891304347826086,0.9891304347826086,1.0,1.0,0.9891304347826086,0.6086956521739131,1.0,0.967391304347826,1.0,0.9891304347826086,1.0,0.6956521739130435,0.9891304347826086,0.7065217391304348,1.0,0.9891304347826086,0.6956521739130435,0.6956521739130435,0.75,0.9891304347826086,0.9891304347826086,1.0,1.0,1.0,0.9891304347826086,1.0,0,1.0,1.0,1.0,1.0,0.9891304347826086,1.0,1.0,0.6956521739130435,0.9891304347826086,0.9891304347826086,0.9891304347826086,1.0,0.6195652173913043,0.9891304347826086,0.6956521739130435,0.9021739130434783,1.0,0.6847826086956522,0.6956521739130435,0.9891304347826086,1.0,0.9891304347826086,0.9891304347826086,0.9891304347826086,0.6413043478260869,1.0,1.0,0.9891304347826086,0.7065217391304348,0.9891304347826086,0.9891304347826086,1.0,0.6956521739130435,0.9891304347826086,1.0,1.0,0.9021739130434783,0.6956521739130435,0.9891304347826086,0,0.6956521739130435,0.8913043478260869,1.0,0.6304347826086957,1.0,0.6847826086956522,1.0,0.6086956521739131,0.9891304347826086,0.6956521739130435,0.6956521739130435,0.9891304347826086,0.9891304347826086,0.6195652173913043,0.782608695652174,0.967391304347826,1.0,1.0,0.6956521739130435,0.9891304347826086,1.0,0.7717391304347826,1.0,1.0,0.6847826086956522,0.9891304347826086,0.9891304347826086,1.0,0.5652173913043478,1.0,0,0.5978260869565217,1.0,0.5869565217391305,1.0,1.0,1.0,1.0,1.0,0.9891304347826086,1.0,0.9891304347826086,0.7282608695652174,0.6956521739130435,1.0,1.0,0.6956521739130435,1.0,0.0,1.0,1.0,1.0,0.9891304347826086,0.717391304347826,0.0,1.0,1.0,0.6956521739130435,1.0,1.0,1.0,1.0,0.6956521739130435,0.9891304347826086,0.9891304347826086,0.7608695652173914,0.6956521739130435,1.0,1.0,0.9891304347826086
1011,0.0,0.8928571428571429,0.9285714285714286,0.9166666666666666,0.0,0.9047619047619048,0.9047619047619048,0.9166666666666666,0.9285714285714286,0.8571428571428571,0.5714285714285714,0.0,0.9166666666666666,0.9166666666666666,0.8452380952380952,0.8690476190476191,0.9285714285714286,0.9404761904761905,0.0,0.9404761904761905,0.9285714285714286,0.8928571428571429,0.9285714285714286,0.42857142857142855,0.9404761904761905,0.75,0.9523809523809523,0.9285714285714286,0.9166666666666666,0.5714285714285714,0.5714285714285714,0.7857142857142857,0.9285714285714286,0.6547619047619048,0.9404761904761905,0.8809523809523809,0.9285714285714286,0.5714285714285714,0.9047619047619048,0,0.5952380952380952,0.9285714285714286,0.8333333333333334,0.8333333333333334,0.9166666666666666,0.9285714285714286,0.8333333333333334,0.5714285714285714,0.5714285714285714,0.0,0.9166666666666666,0.9166666666666666,0.8928571428571429,0.9642857142857143,0.9285714285714286,0.9404761904761905,0.9285714285714286,0.9166666666666666,0.9404761904761905,0.9285714285714286,0.8690476190476191,0.9166666666666666,0.9166666666666666,0.8452380952380952,0.8809523809523809,0.4166666666666667,0.9047619047619048,0.9166666666666666,0.5714285714285714,0.9285714285714286,0.9166666666666666,0.9285714285714286,0.9285714285714286,0.8690476190476191,0.5714285714285714,0.9166666666666666,0.9285714285714286,0.5714285714285714,0.8452380952380952,0,0.5714285714285714,0.8333333333333334,0.9404761904761905,0.9047619047619048,0.5714285714285714,0.7023809523809523,0.9047619047619048,0.0,0.9166666666666666,0.5714285714285714,0.5714285714285714,0.9047619047619048,0.8690476190476191,0.0,0.9047619047619048,0.5714285714285714,0.0,0.9047619047619048,0.8571428571428571,0.9285714285714286,0.9166666666666666,0.9047619047619048,0.9285714285714286,0.8214285714285714,0.9285714285714286,0.9404761904761905,0.9047619047619048,0.8333333333333334,0.9404761904761905,0.9166666666666666,0,0.0,0.5714285714285714,0.9404761904761905,0.9166666666666666,0.9047619047619048,0.9285714285714286,0.9166666666666666,0.9285714285714286,0.9047619047619048,0.8095238095238095,0.8095238095238095,0.8928571428571429,0.5714285714285714,0.9404761904761905,0.8928571428571429,0.6547619047619048,0.9166666666666666,0.6785714285714286,0.9285714285714286,0.8928571428571429,0.9166666666666666,0.9285714285714286,0.8928571428571429,0.0,0.5833333333333334,0.9285714285714286,0.9285714285714286,0.9166666666666666,0.9047619047619048,0.8690476190476191,0.9285714285714286,0.5714285714285714,0.9166666666666666,0.9166666666666666,0.9166666666666666,0.0,0.9285714285714286,0.9166666666666666,0.9166666666666666
1016,0.9758064516129032,0.9798387096774194,0.907258064516129,0.9637096774193549,0.0,0.9919354838709677,0.9758064516129032,0.9959677419354839,0.9959677419354839,0.907258064516129,0.9314516129032258,0.907258064516129,0.9717741935483871,0.9838709677419355,0.9354838709677419,0.9596774193548387,0.9838709677419355,0.9919354838709677,0.9556451612903226,0.9274193548387096,0.9193548387096774,0.907258064516129,0.9435483870967742,0.9435483870967742,0.9435483870967742,0.9354838709677419,0.9153225806451613,0.9838709677419355,0.9637096774193549,0.907258064516129,0.907258064516129,0.9233870967741935,0.9959677419354839,0.9435483870967742,0.9798387096774194,0.9596774193548387,0.8830645161290323,0.907258064516129,0.9475806451612904,0,0.8830645161290323,0.9919354838709677,0.9475806451612904,0.9717741935483871,0.9758064516129032,0.7903225806451613,0.9475806451612904,0.907258064516129,0.9395161290322581,0.9435483870967742,0.9838709677419355,0.9879032258064516,0.9032258064516129,0.9516129032258065,0.907258064516129,0.9475806451612904,0.9838709677419355,0.9233870967741935,0.9435483870967742,0.9233870967741935,0.9717741935483871,0.9233870967741935,0.9354838709677419,0.9354838709677419,0.9556451612903226,0.8024193548387096,0.967741935483871,0.9717741935483871,0.907258064516129,0.9435483870967742,0.9516129032258065,0.9758064516129032,0.9274193548387096,0.9475806451612904,0.9556451612903226,0.9879032258064516,0.9798387096774194,0.907258064516129,0.9354838709677419,0,0.907258064516129,0.0,0.9637096774193549,0.9717741935483871,0.0,0.9435483870967742,0.9153225806451613,0.9354838709677419,0.9435483870967742,0.907258064516129,0.907258064516129,0.9717741935483871,0.9475806451612904,0.9959677419354839,0.9354838709677419,0.0,0.9838709677419355,0.9556451612903226,0.907258064516129,0.9314516129032258,0.9919354838709677,0.9435483870967742,0.9959677419354839,0.9758064516129032,0.907258064516129,0.9717741935483871,0.9879032258064516,0.9475806451612904,0.9475806451612904,0.9838709677419355,0,0.9556451612903226,0.0,0.9919354838709677,0.9959677419354839,0.9637096774193549,0.9919354838709677,0.9153225806451613,0.9838709677419355,0.9879032258064516,0.907258064516129,0.7983870967741935,0.907258064516129,0.0,0.9798387096774194,0.9838709677419355,0.0,0.9556451612903226,0.0,0.9959677419354839,0.9475806451612904,0.9838709677419355,0.9798387096774194,0.907258064516129,0.0,0.9435483870967742,0.9959677419354839,0.907258064516129,0.9959677419354839,0.9798387096774194,0.9556451612903226,0.9838709677419355,0.907258064516129,0.9717741935483871,0.9354838709677419,0.9233870967741935,0.9596774193548387,0.9798387096774194,0.9838709677419355,0.9516129032258065
1018,0.9353233830845771,0.9280868385345997,0.9357756671189507,0.937584803256445,0.0,0.9371325192220714,0.5355042966983266,0.937584803256445,0.9371325192220714,0.0,0.9357756671189507,0.9357756671189507,0.937584803256445,0.0,0.9357756671189507,0.9357756671189507,0.9353233830845771,0.9262777023971054,0.9339665309814563,0.9371325192220714,0.9357756671189507,0.9362279511533242,0.9371325192220714,0.9357756671189507,0.9357756671189507,0.9357756671189507,0.9357756671189507,0.9357756671189507,0.9366802351876978,0.0,0.9357756671189507,0.9357756671189507,0.0,0.9362279511533242,0.0,0.9335142469470827,0.0,0.9357756671189507,0.937584803256445,0,0.6241519674355496,0.9366802351876978,0.9357756671189507,0.9258254183627318,0.9348710990502035,0.8887381275440976,0.9357756671189507,0.9357756671189507,0.9366802351876978,0.9357756671189507,0.0,0.9326096788783356,0.921302578018996,0.9335142469470827,0.9357756671189507,0.9344188150158299,0.9380370872908186,0.9357756671189507,0.9357756671189507,0.9357756671189507,0.9158751696065129,0.9371325192220714,0.9371325192220714,0.9357756671189507,0.0,0.6087743102668476,0.0,0.9362279511533242,0.0642243328810493,0.937584803256445,0.9357756671189507,0.9330619629127092,0.9357756671189507,0.9357756671189507,0.9366802351876978,0.9317051108095884,0.9298959746720941,0.9357756671189507,0.9357756671189507,0,0.9357756671189507,0.0,0.9393939393939394,0.0,0.0,0.9357756671189507,0.9389416553595658,0.9339665309814563,0.937584803256445,0.9357756671189507,0.9357756671189507,0.9339665309814563,0.9199457259158752,0.9371325192220714,0.0,0.0,0.9380370872908186,0.9366802351876978,0.9357756671189507,0.9366802351876978,0.9285391225689733,0.8312980551786522,0.9371325192220714,0.9371325192220714,0.9357756671189507,0.9298959746720941,0.9357756671189507,0.9357756671189507,0.0,0.9366802351876978,0,0.9357756671189507,0.0,0.9357756671189507,0.0,0.0,0.9384893713251922,0.9371325192220714,0.926729986431479,0.9312528267752148,0.9357756671189507,0.6024423337856174,0.9357756671189507,0.0,0.0,0.9235639981908639,0.0,0.9371325192220714,0.0,0.9371325192220714,0.0,0.9371325192220714,0.937584803256445,0.9339665309814563,0.0,0.6331976481230213,0.9371325192220714,0.9357756671189507,0.9389416553595658,0.9371325192220714,0.9330619629127092,0.9240162822252375,0.9357756671189507,0.9380370872908186,0.9371325192220714,0.0,0.3464495703301673,0.9362279511533242,0.9407507914970602,0.0
1020,0.984,0.986,0.994,0.99,0.0,0.984,0.998,0.994,0.994,0.932,0.926,0.9,0.982,0.0,0.91,0.982,0.992,0.994,0.994,0.98,0.994,0.984,0.98,0.964,0.9,0.9,0.9,0.992,0.984,0.0,0.9,0.98,0.0,0.974,0.99,0.972,0.992,0.9,0.982,0,0.918,0.99,0.952,0.982,0.984,0.24,0.954,0.9,0.99,0.968,0.0,0.994,0.896,0.986,0.9,0.998,0.99,0.99,0.9,0.994,0.966,0.98,0.98,0.91,0.964,0.934,0.982,0.984,0.9,0.986,0.96,0.994,0.9,0.966,0.962,0.996,0.998,0.9,0.91,0,0.91,0.0,0.992,0.0,0.0,0.9,0.984,0.994,0.984,0.9,0.9,0.974,0.966,0.99,0.95,0.0,0.994,0.988,0.9,0.986,0.996,0.968,0.99,0.978,0.9,0.988,0.988,0.952,0.0,0.994,0,0.996,0.0,0.898,0.0,0.982,0.99,0.976,0.998,0.992,0.904,0.922,0.9,0.0,0.972,0.978,0.0,0.972,0.0,0.988,0.98,0.986,0.984,0.89,0.0,0.962,0.992,0.996,0.996,0.98,0.998,0.974,0.9,0.992,0.984,0.96,0.986,0.992,0.99,0.0
1021,0.9678597516435354,0.9678597516435354,0.9444850255661067,0.95836376917458,0.9101533966398831,0.9751643535427319,0.9211102994886778,0.9751643535427319,0.9737034331628927,0.9043097151205259,0.8977355734112491,0.8977355734112491,0.9737034331628927,0.0,0.9298758217677137,0.9138056975894814,0.9488677867056245,0.9642074506939372,0.9510591672753835,0.9517896274653032,0.9474068663257852,0.9342585829072315,0.9517896274653032,0.8977355734112491,0.9013878743608473,0.8977355734112491,0.9517896274653032,0.9276844411979547,0.9539810080350621,0.8977355734112491,0.8977355734112491,0.8977355734112491,0.9751643535427319,0.9174579985390796,0.9678597516435354,0.956172388604821,0.20452885317750183,0.8977355734112491,0.9517896274653032,0,0.8977355734112491,0.9722425127830533,0.8838568298027758,0.912344777209642,0.972972972972973,0.9386413440467495,0.8845872899926954,0.8977355734112491,0.95836376917458,0.0,0.0,0.9737034331628927,0.9452154857560263,0.9306062819576333,0.8977355734112491,0.9510591672753835,0.9685902118334551,0.95836376917458,0.956172388604821,0.943754565376187,0.95836376917458,0.9459459459459459,0.9532505478451424,0.9298758217677137,0.9517896274653032,0.8977355734112491,0.9700511322132944,0.9678597516435354,0.10226442658875091,0.9495982468955442,0.9474068663257852,0.9620160701241782,0.9035792549306063,0.9452154857560263,0.914536157779401,0.9693206720233747,0.9554419284149014,0.9013878743608473,0.9298758217677137,0,0.91672753834916,0.885317750182615,0.9466764061358656,0.0,0.9130752373995618,0.6026296566837107,0.9349890430971513,0.9495982468955442,0.9525200876552228,0.9116143170197224,0.8977355734112491,0.95836376917458,0.9554419284149014,0.9671292914536158,0.9656683710737765,0.9094229364499635,0.9722425127830533,0.9547114682249818,0.8977355734112491,0.9495982468955442,0.9722425127830533,0.8984660336011687,0.9671292914536158,0.9547114682249818,0.9050401753104456,0.9452154857560263,0.9751643535427319,0.8838568298027758,0.0,0.9649379108838568,0,0.9685902118334551,0.9130752373995618,0.8977355734112491,0.9722425127830533,0.9715120525931337,0.9627465303140978,0.9620160701241782,0.9532505478451424,0.9751643535427319,0.8977355734112491,0.7005113221329438,0.8977355734112491,0.8977355734112491,0.970781592403214,0.9678597516435354,0.8977355734112491,0.970781592403214,0.8144631117604091,0.9715120525931337,0.9700511322132944,0.9744338933528123,0.9634769905040176,0.9422936449963477,0.0,0.8977355734112491,0.9744338933528123,0.9444850255661067,0.9722425127830533,0.9722425127830533,0.929145361577794,0.9715120525931337,0.8977355734112491,0.9620160701241782,0.9481373265157049,0.95836376917458,0.8918918918918919,0.9656683710737765,0.9744338933528123,0.9620160701241782
1022,0.996,0.996,0.99,0.992,0.968,0.994,0.0,0.998,0.996,0.0,0.984,0.0,0.994,0.0,0.9,0.988,0.996,0.992,0.0,0.992,0.992,0.994,0.996,0.99,0.9,0.9,0.0,0.996,0.99,0.0,0.9,0.0,0.0,0.99,0.0,0.0,0.948,0.9,0.992,0,0.95,0.996,0.0,0.996,0.996,0.992,0.0,0.9,0.0,0.992,0.0,0.994,0.9,0.99,0.9,0.99,0.994,0.0,0.9,0.992,0.0,0.994,0.992,0.9,0.0,0.972,0.0,0.994,0.9,0.996,0.982,0.996,0.9,0.984,0.992,0.994,0.99,0.9,0.9,0,0.97,0.9,0.996,0.0,0.984,0.9,0.992,0.0,0.992,0.9,0.9,0.984,0.984,0.0,0.0,0.878,0.996,0.0,0.9,0.992,0.998,0.0,0.996,0.998,0.9,0.992,0.996,0.0,0.0,0.996,0,0.0,0.948,0.9,0.0,0.0,0.994,0.994,0.994,0.996,0.994,0.982,0.9,0.9,0.0,0.994,0.9,0.994,0.77,0.994,0.0,0.994,0.974,0.9,0.0,0.974,0.994,0.0,0.996,0.996,0.996,0.988,0.0,0.996,0.992,0.0,0.0,0.994,0.996,0.0
1023,0.9649122807017544,0.9239766081871345,0.9532163742690059,0.9590643274853801,0.7894736842105263,0.9649122807017544,0.9532163742690059,0.9649122807017544,0.9824561403508771,0.9181286549707602,0.8713450292397661,0.8654970760233918,0.9532163742690059,0.0,0.8654970760233918,0.9590643274853801,0.9824561403508771,0.9766081871345029,0.0,0.9415204678362573,0.9649122807017544,0.9590643274853801,0.9473684210526315,0.9415204678362573,0.8713450292397661,0.8654970760233918,0.8654970760233918,0.9824561403508771,0.9239766081871345,0.8654970760233918,0.8654970760233918,0.9298245614035088,0.0,0.9590643274853801,0.9532163742690059,0.9181286549707602,0.9649122807017544,0.8654970760233918,0.9415204678362573,0,0.8538011695906432,0.9649122807017544,0.9005847953216374,0.9707602339181286,0.9532163742690059,0.9824561403508771,0.9005847953216374,0.8654970760233918,0.9298245614035088,0.9298245614035088,0.0,0.9707602339181286,0.8654970760233918,0.9649122807017544,0.8654970760233918,0.9707602339181286,0.9707602339181286,0.9181286549707602,0.8654970760233918,0.9590643274853801,0.9590643274853801,0.9532163742690059,0.935672514619883,0.8654970760233918,0.9064327485380117,0.8128654970760234,0.9707602339181286,0.9473684210526315,0.8654970760233918,0.9473684210526315,0.9181286549707602,0.9590643274853801,0.8830409356725146,0.9239766081871345,0.935672514619883,0.9649122807017544,0.9649122807017544,0.8654970760233918,0.8654970760233918,0,0.8654970760233918,0.8654970760233918,0.9532163742690059,0.8947368421052632,0.8947368421052632,0.9005847953216374,0.9239766081871345,0.0,0.935672514619883,0.8654970760233918,0.8654970760233918,0.935672514619883,0.9239766081871345,0.9005847953216374,0.9532163742690059,0.8654970760233918,0.9883040935672515,0.9473684210526315,0.8654970760233918,0.9473684210526315,0.9824561403508771,0.847953216374269,0.9766081871345029,0.9298245614035088,0.9005847953216374,0.9473684210526315,0.9707602339181286,0.9005847953216374,0.8947368421052632,0.9649122807017544,0,0.0,0.8362573099415205,0.9122807017543859,0.9649122807017544,0.9532163742690059,0.9766081871345029,0.935672514619883,0.9590643274853801,0.9824561403508771,0.8888888888888888,0.8947368421052632,0.8654970760233918,0.8654970760233918,0.9824561403508771,0.9883040935672515,0.8654970760233918,0.9532163742690059,0.8304093567251462,0.9824561403508771,0.9590643274853801,0.9649122807017544,0.9649122807017544,0.8654970760233918,0.0,0.8362573099415205,0.9883040935672515,0.9473684210526315,0.9941520467836257,0.9532163742690059,0.9532163742690059,0.9473684210526315,0.8654970760233918,0.9473684210526315,0.9415204678362573,0.9181286549707602,0.5029239766081871,0.9649122807017544,0.9707602339181286,0.0
