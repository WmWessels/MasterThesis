0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
40705,0.9208333333333333,0.8791666666666667,0.8791666666666667,0.9208333333333333,0.6583333333333333,0.9208333333333333,0.8958333333333334,0.9208333333333333,0.925,0.8625,0.8958333333333334,0.9,0.9291666666666667,0.0,0.8958333333333334,0.9083333333333333,0.8458333333333333,0.9,0.9083333333333333,0.9083333333333333,0.9041666666666667,0.9208333333333333,0.9166666666666666,0.8458333333333333,0.6375,0.8875,0.7375,0.775,0.9208333333333333,0.6375,0.6375,0.8708333333333333,0.9333333333333333,0.9083333333333333,0.9125,0.825,0.9125,0.8916666666666667,0.9125,0,0.8375,0.925,0.8416666666666667,0.8958333333333334,0.925,0.9125,0.8416666666666667,0.6375,0.925,0.8333333333333334,0.0,0.9208333333333333,0.8541666666666666,0.9083333333333333,0.6333333333333333,0.8916666666666667,0.9166666666666666,0.6333333333333333,0.9083333333333333,0.8958333333333334,0.875,0.9166666666666666,0.9208333333333333,0.8958333333333334,0.8,0.7958333333333333,0.9125,0.925,0.3625,0.9166666666666666,0.925,0.9083333333333333,0.6416666666666667,0.8791666666666667,0.9041666666666667,0.9083333333333333,0.9,0.6416666666666667,0.8875,0,0.9166666666666666,0.875,0.9208333333333333,0.5583333333333333,0.6583333333333333,0.6083333333333333,0.9083333333333333,0.9,0.9208333333333333,0.9125,0.6375,0.9208333333333333,0.9208333333333333,0.9208333333333333,0.8791666666666667,0.65,0.9166666666666666,0.9083333333333333,0.6375,0.9166666666666666,0.9083333333333333,0.825,0.9166666666666666,0.9083333333333333,0.6208333333333333,0.8791666666666667,0.9166666666666666,0.8416666666666667,0.6,0.9166666666666666,0,0.9083333333333333,0.6583333333333333,0.5916666666666667,0.9291666666666667,0.9083333333333333,0.9208333333333333,0.9291666666666667,0.9,0.9083333333333333,0.9125,0.8708333333333333,0.8791666666666667,0.6375,0.9,0.8875,0.7791666666666667,0.925,0.36666666666666664,0.9166666666666666,0.9,0.9083333333333333,0.9208333333333333,0.8875,0.0,0.8375,0.9125,0.875,0.9125,0.925,0.775,0.9,0.6375,0.9125,0.9208333333333333,0.8541666666666666,0.8875,0.9166666666666666,0.9125,0.9291666666666667
40706,0.30604982206405695,0.46619217081850534,0.19217081850533807,0.33807829181494664,0.4626334519572954,0.3594306049822064,0.4377224199288256,0.4377224199288256,0.28825622775800713,0.29537366548042704,0.505338078291815,0.0,0.3167259786476868,0.9537366548042705,0.4555160142348754,0.505338078291815,0.4377224199288256,0.45907473309608543,0.0,0.35231316725978645,0.23487544483985764,0.0,0.33451957295373663,0.505338078291815,0.9074733096085409,0.4555160142348754,0.38434163701067614,0.4377224199288256,0.45907473309608543,0.8540925266903915,0.6014234875444839,0.3594306049822064,1.0,0.505338078291815,0.5551601423487544,0.49110320284697506,1.0,0.505338078291815,0.44483985765124556,0,0.505338078291815,0.0,0.49466192170818507,0.505338078291815,0.3416370106761566,0.797153024911032,0.48398576512455516,0.505338078291815,0.5124555160142349,0.0,0.9928825622775801,0.398576512455516,0.46619217081850534,0.5373665480427047,0.33451957295373663,0.45907473309608543,0.5338078291814946,0.2313167259786477,0.604982206405694,0.34519572953736655,0.5587188612099644,0.3238434163701068,0.29537366548042704,0.4555160142348754,0.4697508896797153,0.505338078291815,0.5587188612099644,0.44483985765124556,0.5266903914590747,0.2918149466192171,0.39501779359430605,0.4092526690391459,0.9217081850533808,0.44483985765124556,0.505338078291815,0.3487544483985765,0.42704626334519574,0.505338078291815,0.4555160142348754,0,0.4804270462633452,0.498220640569395,0.37722419928825623,0.7153024911032029,0.45907473309608543,0.4555160142348754,0.4377224199288256,0.0,0.3096085409252669,0.501779359430605,0.505338078291815,0.35231316725978645,0.43416370106761565,0.0,0.3487544483985765,0.0,0.6690391459074733,0.505338078291815,0.5124555160142349,0.31316725978647686,0.25622775800711745,0.4377224199288256,0.7366548042704626,0.4412811387900356,0.3736654804270463,0.0,0.3594306049822064,0.49466192170818507,0.9217081850533808,0.5693950177935944,0,0.0,0.45907473309608543,0.39501779359430605,0.8861209964412812,0.5231316725978647,0.36298932384341637,0.3594306049822064,0.0,0.7295373665480427,0.3487544483985765,0.45907473309608543,0.4555160142348754,0.505338078291815,0.9110320284697508,0.39501779359430605,0.4697508896797153,0.33807829181494664,0.49466192170818507,0.4234875444839858,0.608540925266904,0.0,0.3701067615658363,0.45907473309608543,0.0,0.505338078291815,0.5373665480427047,0.1601423487544484,0.8718861209964412,0.33807829181494664,0.4377224199288256,0.5871886120996441,0.5124555160142349,0.697508896797153,0.3167259786476868,0.5195729537366548,0.0,0.35587188612099646,0.0,0.8683274021352313
40707,0.9692470837751855,0.9671261930010604,0.9575821845174973,0.9713679745493107,0.44750795334040294,0.9724284199363733,0.9671261930010604,0.9734888653234358,0.9734888653234358,0.95864262990456,0.9565217391304348,0.9565217391304348,0.9703075291622482,0.0,0.9607635206786851,0.9565217391304348,0.9628844114528102,0.9628844114528102,0.95864262990456,0.9628844114528102,0.9565217391304348,0.9639448568398727,0.9660657476139979,0.9565217391304348,0.9565217391304348,0.9565217391304348,0.9565217391304348,0.9554612937433722,0.9650053022269353,0.9565217391304348,0.9565217391304348,0.9671261930010604,0.9724284199363733,0.9565217391304348,0.9650053022269353,0.95864262990456,0.28101802757158006,0.9565217391304348,0.9692470837751855,0,0.9353128313891834,0.968186638388123,0.9565217391304348,0.9565217391304348,0.9692470837751855,0.8123011664899258,0.9660657476139979,0.9565217391304348,0.968186638388123,0.9565217391304348,0.0,0.9766702014846236,0.953340402969247,0.9597030752916225,0.9565217391304348,0.9575821845174973,0.9724284199363733,0.9607635206786851,0.9575821845174973,0.9618239660657476,0.9448568398727466,0.9639448568398727,0.9639448568398727,0.9607635206786851,0.9639448568398727,0.22799575821845175,0.9639448568398727,0.9703075291622482,0.9565217391304348,0.9703075291622482,0.9692470837751855,0.9703075291622482,0.9565217391304348,0.9554612937433722,0.9565217391304348,0.9703075291622482,0.9554612937433722,0.9565217391304348,0.9607635206786851,0,0.9575821845174973,0.9565217391304348,0.9650053022269353,0.0,0.49628844114528103,0.9565217391304348,0.9628844114528102,0.95864262990456,0.9639448568398727,0.9565217391304348,0.9565217391304348,0.9618239660657476,0.9607635206786851,0.9692470837751855,0.9692470837751855,0.5800636267232238,0.9713679745493107,0.9618239660657476,0.9565217391304348,0.9639448568398727,0.9724284199363733,0.7741251325556734,0.9713679745493107,0.9660657476139979,0.9565217391304348,0.9597030752916225,0.9724284199363733,0.9565217391304348,0.0,0.9703075291622482,0,0.2608695652173913,0.49628844114528103,0.9554612937433722,0.9734888653234358,0.9628844114528102,0.975609756097561,0.9597030752916225,0.9650053022269353,0.9703075291622482,0.9565217391304348,0.8833510074231177,0.9565217391304348,0.9565217391304348,0.9692470837751855,0.9639448568398727,0.9565217391304348,0.9639448568398727,0.11134676564156946,0.9745493107104984,0.9628844114528102,0.9745493107104984,0.9703075291622482,0.9565217391304348,0.0,0.9597030752916225,0.9724284199363733,0.9575821845174973,0.9713679745493107,0.968186638388123,0.95864262990456,0.9660657476139979,0.9565217391304348,0.9692470837751855,0.9650053022269353,0.9660657476139979,0.9660657476139979,0.9713679745493107,0.968186638388123,0.9692470837751855
40708,0.9660657476139979,0.9883351007423118,0.9671261930010604,0.9713679745493107,0.38918345705196183,0.9777306468716861,0.9671261930010604,0.9713679745493107,0.9819724284199364,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9692470837751855,0.9840933191940615,0.9671261930010604,0.9671261930010604,0.9724284199363733,0.9639448568398727,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9713679745493107,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9713679745493107,0.0,0.9671261930010604,0.9713679745493107,0.9872746553552492,0.9671261930010604,0.9766702014846236,0.9671261930010604,0.911983032873807,0.9671261930010604,0.9671261930010604,0,0.9639448568398727,0.968186638388123,0.9671261930010604,0.9671261930010604,0.9862142099681867,0.9215270413573701,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9840933191940615,0.9777306468716861,0.9650053022269353,0.9628844114528102,0.9671261930010604,0.9660657476139979,0.9766702014846236,0.9671261930010604,0.9671261930010604,0.9713679745493107,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9713679745493107,0.37857900318133614,0.9745493107104984,0.9734888653234358,0.9671261930010604,0.9692470837751855,0.9724284199363733,0.9734888653234358,0.9671261930010604,0.9724284199363733,0.9671261930010604,0.9745493107104984,0.9660657476139979,0.9671261930010604,0.9671261930010604,0,0.9671261930010604,0.9671261930010604,0.968186638388123,0.0,0.4750795334040297,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9671261930010604,0.9787910922587487,0.968186638388123,0.9660657476139979,0.9671261930010604,0.8950159066808059,0.975609756097561,0.9671261930010604,0.9671261930010604,0.9703075291622482,0.6882290562036055,0.8833510074231177,0.9787910922587487,0.9703075291622482,0.9671261930010604,0.9650053022269353,0.985153764581124,0.9671261930010604,0.0,0.9734888653234358,0,0.9692470837751855,0.4634146341463415,0.9639448568398727,0.985153764581124,0.9703075291622482,0.9819724284199364,0.9671261930010604,0.9618239660657476,0.9883351007423118,0.9671261930010604,0.9501590668080594,0.9671261930010604,0.9671261930010604,0.9787910922587487,0.9925768822905621,0.9671261930010604,0.9671261930010604,0.4591728525980912,0.9830328738069989,0.9745493107104984,0.9703075291622482,0.9703075291622482,0.9671261930010604,0.0,0.9618239660657476,0.9745493107104984,0.9671261930010604,0.9830328738069989,0.9671261930010604,0.9671261930010604,0.9830328738069989,0.9671261930010604,0.975609756097561,0.9671261930010604,0.9671261930010604,0.953340402969247,0.9745493107104984,0.9703075291622482,0.985153764581124
40710,0.8157894736842105,0.7894736842105263,0.618421052631579,0.8157894736842105,0.7763157894736842,0.8026315789473685,0.8421052631578947,0.8289473684210527,0.7894736842105263,0.7368421052631579,0.8026315789473685,0.7368421052631579,0.8157894736842105,0.7368421052631579,0.7236842105263158,0.8157894736842105,0.8157894736842105,0.6973684210526315,0.618421052631579,0.8026315789473685,0.6973684210526315,0.8289473684210527,0.8026315789473685,0.8289473684210527,0.4868421052631579,0.7236842105263158,0.6710526315789473,0.8552631578947368,0.7631578947368421,0.6447368421052632,0.5394736842105263,0.7763157894736842,0.7631578947368421,0.8026315789473685,0.8026315789473685,0.7631578947368421,0.8421052631578947,0.7631578947368421,0.8157894736842105,0,0.7894736842105263,0.7894736842105263,0.6973684210526315,0.8421052631578947,0.8157894736842105,0.8421052631578947,0.6973684210526315,0.5394736842105263,0.8026315789473685,0.7763157894736842,0.7763157894736842,0.8157894736842105,0.5526315789473685,0.8157894736842105,0.4868421052631579,0.6447368421052632,0.8026315789473685,0.75,0.8289473684210527,0.8289473684210527,0.7368421052631579,0.8289473684210527,0.7894736842105263,0.7236842105263158,0.7236842105263158,0.75,0.8157894736842105,0.8157894736842105,0.5394736842105263,0.7894736842105263,0.8552631578947368,0.8289473684210527,0.5,0.7105263157894737,0.7894736842105263,0.8157894736842105,0.6447368421052632,0.5394736842105263,0.7236842105263158,0,0.5394736842105263,0.618421052631579,0.8421052631578947,0.5394736842105263,0.7763157894736842,0.5131578947368421,0.8421052631578947,0.6842105263157895,0.8157894736842105,0.5394736842105263,0.5394736842105263,0.7631578947368421,0.7894736842105263,0.7236842105263158,0.8157894736842105,0.6842105263157895,0.8026315789473685,0.8421052631578947,0.5526315789473685,0.8157894736842105,0.8157894736842105,0.7763157894736842,0.8026315789473685,0.8157894736842105,0.5,0.6973684210526315,0.8026315789473685,0.6973684210526315,0.4342105263157895,0.8289473684210527,0,0.6973684210526315,0.7763157894736842,0.5263157894736842,0.8157894736842105,0.8421052631578947,0.8026315789473685,0.8157894736842105,0.6578947368421053,0.7631578947368421,0.7763157894736842,0.7631578947368421,0.631578947368421,0.5394736842105263,0.6973684210526315,0.7763157894736842,0.5657894736842105,0.8157894736842105,0.7631578947368421,0.7763157894736842,0.8421052631578947,0.7894736842105263,0.8552631578947368,0.6578947368421053,0.0,0.7763157894736842,0.8421052631578947,0.618421052631579,0.7763157894736842,0.8421052631578947,0.8289473684210527,0.7763157894736842,0.5394736842105263,0.8289473684210527,0.8026315789473685,0.7763157894736842,0.7236842105263158,0.8289473684210527,0.8289473684210527,0.7894736842105263

40713,0.9840933191940615,0.9946977730646872,0.9840933191940615,0.9840933191940615,0.5980911983032874,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9904559915164369,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9946977730646872,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.985153764581124,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9946977730646872,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.7953340402969247,0.9840933191940615,0.9840933191940615,0,0.9819724284199364,0.0,0.9840933191940615,0.9840933191940615,0.9925768822905621,0.8610816542948038,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.0,0.9946977730646872,0.985153764581124,0.9830328738069989,0.9819724284199364,0.9840933191940615,0.985153764581124,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9862142099681867,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.440084835630965,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9830328738069989,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.985153764581124,0.985153764581124,0.9840933191940615,0.9840933191940615,0,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.0,0.6489925768822906,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9915164369034994,0.9745493107104984,0.985153764581124,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9904559915164369,0.22799575821845175,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.0,0.9946977730646872,0.9840933191940615,0.9840933191940615,0.9840933191940615,0,0.9893955461293743,0.6489925768822906,0.9840933191940615,0.9915164369034994,0.9840933191940615,0.9862142099681867,0.9840933191940615,0.9840933191940615,0.9946977730646872,0.9840933191940615,0.9724284199363733,0.9840933191940615,0.9840933191940615,0.9925768822905621,0.9946977730646872,0.9840933191940615,0.9840933191940615,0.528101802757158,0.9862142099681867,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.0,0.9840933191940615,0.985153764581124,0.9840933191940615,0.9883351007423118,0.9840933191940615,0.9840933191940615,0.9915164369034994,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9840933191940615,0.9904559915164369
40900,0.9945098039215686,0.9905882352941177,0.9898039215686274,0.9913725490196078,0.9898039215686274,0.9937254901960785,0.9913725490196078,0.9937254901960785,0.9945098039215686,0.9850980392156863,0.9850980392156863,0.9898039215686274,0.9929411764705882,0.0,0.9945098039215686,0.9850980392156863,0.9913725490196078,0.9913725490196078,0.9898039215686274,0.9905882352941177,0.9898039215686274,0.9905882352941177,0.9913725490196078,0.9850980392156863,0.9850980392156863,0.9882352941176471,0.9850980392156863,0.9913725490196078,0.9913725490196078,0.0,0.9850980392156863,0.9921568627450981,0.9945098039215686,0.9850980392156863,0.9921568627450981,0.9929411764705882,0.967843137254902,0.9850980392156863,0.9913725490196078,0,0.9850980392156863,0.9945098039215686,0.9819607843137255,0.9850980392156863,0.9937254901960785,0.03607843137254902,0.9882352941176471,0.9850980392156863,0.9874509803921568,0.0,0.0,0.9937254901960785,0.9905882352941177,0.9858823529411764,0.9850980392156863,0.9905882352941177,0.9929411764705882,0.9850980392156863,0.9898039215686274,0.9898039215686274,0.9921568627450981,0.9898039215686274,0.9905882352941177,0.9945098039215686,0.9905882352941177,0.9850980392156863,0.9921568627450981,0.9945098039215686,0.9850980392156863,0.9905882352941177,0.9937254901960785,0.9913725490196078,0.9850980392156863,0.9921568627450981,0.9850980392156863,0.9929411764705882,0.9905882352941177,0.9850980392156863,0.9945098039215686,0,0.9882352941176471,0.9913725490196078,0.9929411764705882,0.0,0.9905882352941177,0.9850980392156863,0.9905882352941177,0.9898039215686274,0.9905882352941177,0.9850980392156863,0.9850980392156863,0.9945098039215686,0.9921568627450981,0.9937254901960785,0.9890196078431372,0.9905882352941177,0.9921568627450981,0.9905882352941177,0.9850980392156863,0.9905882352941177,0.9905882352941177,0.9639215686274509,0.9921568627450981,0.9929411764705882,0.9850980392156863,0.9898039215686274,0.9945098039215686,0.9819607843137255,0.0,0.9921568627450981,0,0.9874509803921568,0.9905882352941177,0.984313725490196,0.0,0.9890196078431372,0.9937254901960785,0.9921568627450981,0.9905882352941177,0.9905882352941177,0.9890196078431372,0.6211764705882353,0.9850980392156863,0.9850980392156863,0.9866666666666667,0.9882352941176471,0.9850980392156863,0.9929411764705882,0.6988235294117647,0.9929411764705882,0.9882352941176471,0.9945098039215686,0.9905882352941177,0.9898039215686274,0.0,0.9850980392156863,0.9921568627450981,0.9898039215686274,0.9945098039215686,0.9929411764705882,0.9913725490196078,0.9913725490196078,0.9850980392156863,0.9921568627450981,0.9905882352941177,0.9905882352941177,0.9450980392156862,0.9921568627450981,0.9945098039215686,0.0
40945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
40966,0.7111111111111111,0.737037037037037,0.6444444444444445,0.9814814814814815,0.4888888888888889,0.9740740740740741,0.8296296296296296,1.0,0.9888888888888889,0.7333333333333333,0.18518518518518517,0.3037037037037037,0.9518518518518518,0.0,0.27037037037037037,0.7962962962962963,0.9814814814814815,0.9666666666666667,0.4074074074074074,0.8888888888888888,0.8148148148148148,0.9518518518518518,0.8666666666666667,0.13703703703703704,0.9,0.27037037037037037,0.1259259259259259,0.9222222222222223,0.9296296296296296,0.0,0.5518518518518518,0.6851851851851852,0.9703703703703703,0.4925925925925926,0.9925925925925926,0.4888888888888889,0.0,0.337037037037037,0.9037037037037037,0,0.13703703703703704,0.9851851851851852,0.2518518518518518,0.762962962962963,0.8925925925925926,0.0,0.2518518518518518,0.15185185185185185,0.4222222222222222,0.0,0.0,0.9888888888888889,0.31851851851851853,0.9037037037037037,0.6370370370370371,0.8666666666666667,0.9962962962962963,0.8555555555555555,0.9444444444444444,0.8777777777777778,0.6666666666666666,0.8888888888888888,0.8925925925925926,0.27037037037037037,0.2851851851851852,0.13703703703703704,0.9185185185185185,0.9148148148148149,0.16666666666666666,0.9259259259259259,0.9037037037037037,0.9740740740740741,0.837037037037037,0.6518518518518519,0.4185185185185185,1.0,0.9074074074074074,0.13703703703703704,0.27037037037037037,0,0.737037037037037,0.0,0.9925925925925926,0.8407407407407408,0.5888888888888889,0.8333333333333334,0.9037037037037037,0.40370370370370373,0.9259259259259259,0.674074074074074,0.13703703703703704,0.7185185185185186,0.8037037037037037,0.6592592592592592,0.7333333333333333,0.2777777777777778,0.8851851851851852,0.9592592592592593,0.3,0.8703703703703703,0.9814814814814815,0.9037037037037037,0.9962962962962963,0.9148148148148149,0.7296296296296296,0.8777777777777778,0.9555555555555556,0.2518518518518518,0.9185185185185185,0.9888888888888889,0,0.4074074074074074,0.5777777777777777,0.9777777777777777,0.0,0.937037037037037,0.9814814814814815,0.8777777777777778,0.9111111111111111,0.9259259259259259,0.8555555555555555,0.662962962962963,0.25925925925925924,0.0,0.8444444444444444,0.8111111111111111,0.0,0.9740740740740741,0.2074074074074074,0.9888888888888889,0.9481481481481482,0.9777777777777777,0.9666666666666667,0.34074074074074073,0.0,0.13703703703703704,0.9925925925925926,0.6555555555555556,0.9962962962962963,0.9777777777777777,0.7481481481481481,0.7925925925925926,0.8222222222222222,0.9703703703703703,0.9407407407407408,0.5814814814814815,0.34444444444444444,0.9851851851851852,0.9888888888888889,0.9296296296296296
40971,0.264,0.176,0.244,0.296,0.2,0.284,0.284,0.28,0.26,0.188,0.112,0.176,0.308,0.2,0.108,0.144,0.256,0.264,0.22,0.244,0.248,0.284,0.232,0.092,0.084,0.108,0.184,0.28,0.276,0.0,0.148,0.124,0.312,0.096,0.232,0.152,0.0,0.152,0.216,0,0.096,0.268,0.108,0.156,0.268,0.092,0.108,0.076,0.148,0.1,0.256,0.292,0.116,0.12,0.076,0.28,0.272,0.24,0.272,0.272,0.136,0.26,0.256,0.108,0.096,0.056,0.244,0.204,0.184,0.24,0.272,0.02,0.08,0.12,0.14,0.244,0.252,0.08,0.108,0,0.224,0.136,0.228,0.0,0.232,0.172,0.26,0.228,0.26,0.168,0.08,0.204,0.224,0.24,0.204,0.132,0.308,0.284,0.164,0.288,0.064,0.236,0.3,0.152,0.072,0.236,0.28,0.108,0.084,0.28,0,0.18,0.232,0.068,0.292,0.256,0.08,0.256,0.252,0.216,0.16,0.212,0.124,0.08,0.196,0.168,0.144,0.308,0.088,0.264,0.212,0.284,0.272,0.136,0.0,0.096,0.236,0.236,0.292,0.26,0.26,0.152,0.116,0.256,0.248,0.232,0.272,0.3,0.268,0.296
40975,0.7939814814814815,0.9143518518518519,0.7986111111111112,0.9282407407407407,0.8032407407407407,0.9120370370370371,0.8796296296296297,0.9166666666666666,0.9745370370370371,0.8796296296296297,0.8078703703703703,0.0,0.8796296296296297,0.9166666666666666,0.7013888888888888,0.9097222222222222,0.9120370370370371,0.9236111111111112,0.0,0.8935185185185185,0.8402777777777778,0.9004629629629629,0.8958333333333334,0.8171296296296297,0.7083333333333334,0.7013888888888888,0.7476851851851852,0.9097222222222222,0.8912037037037037,0.7013888888888888,0.7013888888888888,0.7592592592592593,0.9583333333333334,0.8449074074074074,0.9050925925925926,0.7662037037037037,0.7314814814814815,0.7013888888888888,0.8055555555555556,0,0.6504629629629629,0.9328703703703703,0.7013888888888888,0.9768518518518519,0.9189814814814815,0.5300925925925926,0.7013888888888888,0.7013888888888888,0.7546296296296297,0.8819444444444444,0.9236111111111112,0.9560185185185185,0.7013888888888888,0.8865740740740741,0.7013888888888888,0.9120370370370371,0.9606481481481481,0.7870370370370371,0.7013888888888888,0.8657407407407407,0.8356481481481481,0.9050925925925926,0.8958333333333334,0.7013888888888888,0.8726851851851852,0.8125,0.9004629629629629,0.8171296296296297,0.7013888888888888,0.8981481481481481,0.8194444444444444,0.8935185185185185,0.7314814814814815,0.7986111111111112,0.8009259259259259,0.9328703703703703,0.8888888888888888,0.7013888888888888,0.7013888888888888,0,0.7037037037037037,0.7013888888888888,0.8935185185185185,0.8333333333333334,0.8379629629629629,0.9004629629629629,0.8333333333333334,0.0,0.9097222222222222,0.7013888888888888,0.7013888888888888,0.8680555555555556,0.8726851851851852,0.0,0.8773148148148148,0.7222222222222222,0.9583333333333334,0.8472222222222222,0.7013888888888888,0.8703703703703703,1.0,0.7175925925925926,0.9560185185185185,0.7662037037037037,0.7175925925925926,0.8009259259259259,0.9537037037037037,0.7013888888888888,0.8263888888888888,0.9513888888888888,0,0.0,0.8356481481481481,0.8842592592592593,0.9143518518518519,0.8703703703703703,0.9490740740740741,0.8217592592592593,0.9328703703703703,0.9560185185185185,0.8287037037037037,0.6504629629629629,0.7013888888888888,0.7013888888888888,0.8865740740740741,0.9351851851851852,0.7013888888888888,0.8402777777777778,0.37962962962962965,0.9745370370370371,0.8865740740740741,0.9282407407407407,0.8796296296296297,0.7013888888888888,0.8032407407407407,0.8541666666666666,0.9629629629629629,0.8032407407407407,0.9675925925925926,0.8611111111111112,0.8356481481481481,0.8518518518518519,0.7013888888888888,0.9259259259259259,0.9050925925925926,0.8634259259259259,0.0,0.9490740740740741,0.9259259259259259,0.8842592592592593
40979,0.942,0.876,0.96,0.968,0.922,0.968,0.968,0.978,0.974,0.658,0.1,0.848,0.966,0.0,0.2,0.1,0.968,0.984,0.954,0.94,0.966,0.966,0.926,0.1,0.108,0.2,0.098,0.96,0.94,0.0,0.1,0.56,0.0,0.1,0.968,0.492,0.0,0.1,0.928,0,0.102,0.0,0.2,0.1,0.942,0.0,0.188,0.1,0.886,0.0,0.0,0.974,0.364,0.97,0.108,0.98,0.974,0.318,0.116,0.968,0.85,0.936,0.94,0.2,0.266,0.1,0.0,0.94,0.1,0.936,0.95,0.938,0.108,0.674,0.1,0.976,0.978,0.1,0.2,0,0.922,0.178,0.972,0.0,0.922,0.104,0.97,0.958,0.956,0.902,0.1,0.828,0.856,0.964,0.588,0.928,0.97,0.952,0.6,0.97,0.978,0.836,0.97,0.844,0.088,0.944,0.944,0.2,0.0,0.97,0,0.98,0.922,0.078,0.0,0.934,0.974,0.95,0.978,0.936,0.946,0.89,0.392,0.1,0.904,0.89,0.296,0.972,0.366,0.0,0.922,0.968,0.978,0.36,0.0,0.1,0.972,0.958,0.972,0.974,0.968,0.862,0.948,0.95,0.954,0.55,0.936,0.968,0.976,0.0
40981,0.8554913294797688,0.8554913294797688,0.7341040462427746,0.861271676300578,0.7167630057803468,0.861271676300578,0.8786127167630058,0.8728323699421965,0.8786127167630058,0.7398843930635838,0.6184971098265896,0.7630057803468208,0.861271676300578,0.8786127167630058,0.861271676300578,0.6473988439306358,0.8728323699421965,0.7630057803468208,0.7745664739884393,0.8728323699421965,0.7630057803468208,0.838150289017341,0.8728323699421965,0.6184971098265896,0.4797687861271676,0.861271676300578,0.7167630057803468,0.8497109826589595,0.8439306358381503,0.5549132947976878,0.5549132947976878,0.7341040462427746,0.8497109826589595,0.6184971098265896,0.8670520231213873,0.7803468208092486,0.8439306358381503,0.6184971098265896,0.8439306358381503,0,0.6358381502890174,0.8554913294797688,0.6994219653179191,0.6184971098265896,0.861271676300578,0.861271676300578,0.6994219653179191,0.5549132947976878,0.8208092485549133,0.6184971098265896,0.8670520231213873,0.8786127167630058,0.6763005780346821,0.8497109826589595,0.5606936416184971,0.7514450867052023,0.8554913294797688,0.7398843930635838,0.8323699421965318,0.8670520231213873,0.8034682080924855,0.861271676300578,0.8497109826589595,0.861271676300578,0.7109826589595376,0.6416184971098265,0.8786127167630058,0.8439306358381503,0.44508670520231214,0.8497109826589595,0.8497109826589595,0.861271676300578,0.5260115606936416,0.7514450867052023,0.6184971098265896,0.8728323699421965,0.7687861271676301,0.5491329479768786,0.861271676300578,0,0.8670520231213873,0.7167630057803468,0.8554913294797688,0.5202312138728323,0.7167630057803468,0.5086705202312138,0.8786127167630058,0.7341040462427746,0.8497109826589595,0.5549132947976878,0.5549132947976878,0.8728323699421965,0.7456647398843931,0.8092485549132948,0.7630057803468208,0.653179190751445,0.861271676300578,0.861271676300578,0.653179190751445,0.8439306358381503,0.884393063583815,0.6011560693641619,0.8554913294797688,0.8439306358381503,0.49710982658959535,0.7803468208092486,0.8728323699421965,0.6994219653179191,0.4682080924855491,0.861271676300578,0,0.8092485549132948,0.7167630057803468,0.5433526011560693,0.8554913294797688,0.8786127167630058,0.8670520231213873,0.8497109826589595,0.7283236994219653,0.8554913294797688,0.8497109826589595,0.7456647398843931,0.7976878612716763,0.5549132947976878,0.8439306358381503,0.7976878612716763,0.6705202312138728,0.884393063583815,0.0,0.861271676300578,0.861271676300578,0.861271676300578,0.8497109826589595,0.6820809248554913,0.0,0.6127167630057804,0.8323699421965318,0.7514450867052023,0.8670520231213873,0.8786127167630058,0.8265895953757225,0.861271676300578,0.5549132947976878,0.8439306358381503,0.8497109826589595,0.7283236994219653,0.7976878612716763,0.8554913294797688,0.8554913294797688,0.8439306358381503
40982,0.7695473251028807,0.7119341563786008,0.4835390946502058,0.7510288065843621,0.0,0.7716049382716049,0.46502057613168724,0.7839506172839507,0.808641975308642,0.6851851851851852,0.5020576131687243,0.5020576131687243,0.757201646090535,0.0,0.48559670781893005,0.5679012345679012,0.7119341563786008,0.44650205761316875,0.4732510288065844,0.7263374485596708,0.49382716049382713,0.7530864197530864,0.7119341563786008,0.48148148148148145,0.3436213991769547,0.48148148148148145,0.6604938271604939,0.44238683127572015,0.7242798353909465,0.0,0.345679012345679,0.6069958847736625,0.7736625514403292,0.5699588477366255,0.7592592592592593,0.5061728395061729,0.23868312757201646,0.5041152263374485,0.6193415637860082,0,0.43621399176954734,0.8065843621399177,0.4773662551440329,0.588477366255144,0.7530864197530864,0.2222222222222222,0.4794238683127572,0.345679012345679,0.6337448559670782,0.46296296296296297,0.0,0.7674897119341564,0.3950617283950617,0.6831275720164609,0.3065843621399177,0.4773662551440329,0.7695473251028807,0.7242798353909465,0.6934156378600823,0.6831275720164609,0.6707818930041153,0.7078189300411523,0.7242798353909465,0.48559670781893005,0.6481481481481481,0.1748971193415638,0.7242798353909465,0.6975308641975309,0.20781893004115226,0.720164609053498,0.742798353909465,0.6440329218106996,0.3374485596707819,0.5123456790123457,0.5596707818930041,0.7716049382716049,0.46502057613168724,0.3497942386831276,0.48559670781893005,0,0.6255144032921811,0.0,0.7078189300411523,0.0,0.0,0.3230452674897119,0.6728395061728395,0.4794238683127572,0.7181069958847737,0.5596707818930041,0.345679012345679,0.6872427983539094,0.588477366255144,0.7654320987654321,0.7242798353909465,0.0,0.757201646090535,0.7325102880658436,0.345679012345679,0.6954732510288066,0.13580246913580246,0.6008230452674898,0.7613168724279835,0.5802469135802469,0.31069958847736623,0.5020576131687243,0.7880658436213992,0.4773662551440329,0.0,0.7613168724279835,0,0.7613168724279835,0.0,0.24897119341563786,0.0,0.7139917695473251,0.8004115226337448,0.7057613168724279,0.46502057613168724,0.7983539094650206,0.6666666666666666,0.48559670781893005,0.4711934156378601,0.0,0.7222222222222222,0.757201646090535,0.0,0.7448559670781894,0.0,0.8148148148148148,0.720164609053498,0.7901234567901234,0.7283950617283951,0.5432098765432098,0.0,0.43209876543209874,0.7263374485596708,0.47530864197530864,0.8004115226337448,0.7489711934156379,0.44238683127572015,0.6707818930041153,0.345679012345679,0.7325102880658436,0.7242798353909465,0.6995884773662552,0.4588477366255144,0.757201646090535,0.8024691358024691,0.7469135802469136
40983,0.9768595041322314,0.9801652892561984,0.9520661157024793,0.9462809917355371,0.6264462809917355,0.9702479338842975,0.9652892561983472,0.9710743801652892,0.9785123966942149,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.9652892561983472,0.9702479338842975,0.9462809917355371,0.9462809917355371,0.9644628099173553,0.9760330578512396,0.9570247933884297,0.9462809917355371,0.9611570247933884,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.9760330578512396,0.9652892561983472,0.9537190082644628,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.9768595041322314,0.9462809917355371,0.9801652892561984,0.9743801652892562,0.6694214876033058,0.9462809917355371,0.9462809917355371,0,0.943801652892562,0.9446280991735537,0.9462809917355371,0.9462809917355371,0.9768595041322314,0.6181818181818182,0.9462809917355371,0.9462809917355371,0.9487603305785124,0.0,0.971900826446281,0.9776859504132231,0.9462809917355371,0.9454545454545454,0.9462809917355371,0.971900826446281,0.9785123966942149,0.9743801652892562,0.947107438016529,0.9479338842975207,0.9785123966942149,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.9677685950413223,0.9462809917355371,0.9818181818181818,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.9611570247933884,0.9603305785123967,0.9462809917355371,0.9545454545454546,0.9462809917355371,0.9760330578512396,0.9694214876033058,0.9462809917355371,0.9462809917355371,0,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.0,0.7,0.9462809917355371,0.9462809917355371,0.9553719008264463,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.9735537190082645,0.9644628099173553,0.9785123966942149,0.9768595041322314,0.8239669421487603,0.9603305785123967,0.9611570247933884,0.9462809917355371,0.9479338842975207,0.9801652892561984,0.9652892561983472,0.9636363636363636,0.9462809917355371,0.9462809917355371,0.9396694214876034,0.9809917355371901,0.9462809917355371,0.0,0.9462809917355371,0,0.9768595041322314,0.7,0.9462809917355371,0.9768595041322314,0.9785123966942149,0.9743801652892562,0.9652892561983472,0.9462809917355371,0.9801652892561984,0.9462809917355371,0.6917355371900826,0.9462809917355371,0.9462809917355371,0.9702479338842975,0.9727272727272728,0.9462809917355371,0.9677685950413223,0.775206611570248,0.9809917355371901,0.9809917355371901,0.9446280991735537,0.9570247933884297,0.947107438016529,0.0,0.9462809917355371,0.9760330578512396,0.9537190082644628,0.9793388429752066,0.9677685950413223,0.9652892561983472,0.9454545454545454,0.9462809917355371,0.9462809917355371,0.9462809917355371,0.968595041322314,0.8900826446280992,0.9462809917355371,0.9462809917355371,0.9735537190082645
40984,0.9083044982698962,0.8875432525951558,0.8079584775086506,0.9186851211072664,0.0,0.916955017301038,0.856401384083045,0.9290657439446367,0.9377162629757786,0.8754325259515571,0.4532871972318339,0.7474048442906575,0.9134948096885813,0.8806228373702422,0.28546712802768165,0.6211072664359861,0.8546712802768166,0.9273356401384083,0.8858131487889274,0.8996539792387543,0.8598615916955017,0.9204152249134948,0.8961937716262975,0.42560553633217996,0.4134948096885813,0.28719723183391005,0.7923875432525952,0.8685121107266436,0.9134948096885813,0.9186851211072664,0.6349480968858131,0.7249134948096886,0.9238754325259516,0.5484429065743944,0.9342560553633218,0.8217993079584776,0.43079584775086505,0.6003460207612457,0.8477508650519031,0,0.43944636678200694,0.9290657439446367,0.28719723183391005,0.6245674740484429,0.903114186851211,0.2093425605536332,0.28546712802768165,0.44982698961937717,0.7750865051903114,0.4359861591695502,0.8875432525951558,0.9273356401384083,0.7802768166089965,0.6626297577854672,0.2422145328719723,0.889273356401384,0.9307958477508651,0.8460207612456747,0.9065743944636678,0.8615916955017301,0.8788927335640139,0.8961937716262975,0.9013840830449827,0.28546712802768165,0.7837370242214533,0.43944636678200694,0.9013840830449827,0.9048442906574394,0.15051903114186851,0.9013840830449827,0.8875432525951558,0.9065743944636678,0.444636678200692,0.8269896193771626,0.43771626297577854,0.9325259515570934,0.8996539792387543,0.14186851211072665,0.28546712802768165,0,0.8685121107266436,0.0,0.9117647058823529,0.0,0.0,0.2889273356401384,0.8269896193771626,0.870242214532872,0.9117647058823529,0.8356401384083045,0.14186851211072665,0.8633217993079585,0.8754325259515571,0.9238754325259516,0.884083044982699,0.0,0.9186851211072664,0.9134948096885813,0.5,0.9013840830449827,0.9342560553633218,0.7283737024221453,0.9290657439446367,0.8754325259515571,0.3875432525951557,0.8512110726643599,0.9117647058823529,0.28719723183391005,0.0,0.9290657439446367,0,0.9204152249134948,0.0,0.3166089965397924,0.9048442906574394,0.9065743944636678,0.916955017301038,0.9065743944636678,0.8996539792387543,0.9152249134948097,0.8044982698961938,0.6418685121107266,0.7508650519031141,0.0,0.8806228373702422,0.903114186851211,0.0,0.9221453287197232,0.0,0.9342560553633218,0.9134948096885813,0.9256055363321799,0.8996539792387543,0.71280276816609,0.0,0.43944636678200694,0.9290657439446367,0.8131487889273357,0.9394463667820069,0.9186851211072664,0.8633217993079585,0.8823529411764706,0.870242214532872,0.9238754325259516,0.9083044982698962,0.8546712802768166,0.6747404844290658,0.9221453287197232,0.9307958477508651,0.9134948096885813
40994,0.0,0.9555555555555556,0.9111111111111111,0.9111111111111111,0.0,0.9555555555555556,0.9111111111111111,0.9111111111111111,0.9185185185185185,0.9111111111111111,0.9111111111111111,0.0,0.9111111111111111,0.9481481481481482,0.9111111111111111,0.9111111111111111,0.9555555555555556,0.9259259259259259,0.0,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9555555555555556,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9481481481481482,0.9111111111111111,0.9111111111111111,0.9037037037037037,0.7555555555555555,0.9111111111111111,0.9111111111111111,0,0.9111111111111111,0.9333333333333333,0.9111111111111111,0.9185185185185185,0.9481481481481482,0.9481481481481482,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.0,0.9555555555555556,0.9481481481481482,0.9111111111111111,0.9259259259259259,0.9111111111111111,0.9111111111111111,0.9185185185185185,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.8740740740740741,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9481481481481482,0.9111111111111111,0.9111111111111111,0.9333333333333333,0.9111111111111111,0.9111111111111111,0.9185185185185185,0.9333333333333333,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0,0.9111111111111111,0.9111111111111111,0.9185185185185185,0.9185185185185185,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.0,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9037037037037037,0.9259259259259259,0.0,0.9111111111111111,0.9111111111111111,0.0,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9407407407407408,0.9407407407407408,0.9333333333333333,0.9333333333333333,0.9111111111111111,0.9185185185185185,0.9629629629629629,0.9111111111111111,0.9185185185185185,0.9111111111111111,0,0.0,0.9111111111111111,0.9407407407407408,0.9703703703703703,0.9111111111111111,0.9037037037037037,0.9111111111111111,0.9407407407407408,0.9629629629629629,0.9111111111111111,0.7481481481481481,0.9111111111111111,0.9111111111111111,0.9037037037037037,0.9481481481481482,0.9111111111111111,0.9111111111111111,0.5777777777777777,0.9481481481481482,0.9111111111111111,0.9481481481481482,0.9111111111111111,0.9111111111111111,0.0,0.9111111111111111,0.9259259259259259,0.9111111111111111,0.9555555555555556,0.9111111111111111,0.9111111111111111,0.8962962962962963,0.9111111111111111,0.9259259259259259,0.9111111111111111,0.9111111111111111,0.0,0.9111111111111111,0.9555555555555556,0.9407407407407408
40997,0.9914965986394558,0.9957482993197279,0.9370748299319728,0.9957482993197279,0.0,0.9957482993197279,0.9770408163265306,1.0,1.0,0.9651360544217688,0.7678571428571429,0.810374149659864,0.9948979591836735,0.0,0.8835034013605442,0.7959183673469388,0.9906462585034014,0.9855442176870748,0.9532312925170068,0.9957482993197279,0.9685374149659864,0.9965986394557823,0.9914965986394558,0.7933673469387755,0.516156462585034,0.8835034013605442,0.8112244897959183,0.9744897959183674,0.9957482993197279,0.0,0.7482993197278912,0.8928571428571429,0.9991496598639455,0.7908163265306123,0.9957482993197279,0.8299319727891157,0.7874149659863946,0.7091836734693877,0.9710884353741497,0,0.7219387755102041,0.9982993197278912,0.7066326530612245,0.8001700680272109,0.9957482993197279,0.179421768707483,0.7066326530612245,0.7312925170068028,0.9387755102040817,0.7916666666666666,0.0,0.9991496598639455,0.548469387755102,0.9965986394557823,0.5008503401360545,0.9532312925170068,1.0,0.9685374149659864,0.9056122448979592,0.9914965986394558,0.9464285714285714,0.9957482993197279,0.9957482993197279,0.8835034013605442,0.9549319727891157,0.5918367346938775,0.9821428571428571,0.9719387755102041,0.6267006802721088,0.9957482993197279,0.9693877551020408,0.9727891156462585,0.5153061224489796,0.9668367346938775,0.7967687074829932,0.9991496598639455,0.9540816326530612,0.5365646258503401,0.8835034013605442,0,0.9540816326530612,0.0,0.9736394557823129,0.0,0.0,0.7159863945578231,0.9566326530612245,0.9251700680272109,0.9957482993197279,0.9294217687074829,0.5365646258503401,0.9914965986394558,0.9923469387755102,0.9727891156462585,0.9778911564625851,0.0,0.9957482993197279,0.9846938775510204,0.7440476190476191,0.9821428571428571,1.0,0.8137755102040817,0.9957482993197279,0.9736394557823129,0.516156462585034,0.9906462585034014,0.9957482993197279,0.7066326530612245,0.0,0.9974489795918368,0,0.9872448979591837,0.0,0.5212585034013606,0.9974489795918368,0.9821428571428571,0.9991496598639455,0.9897959183673469,0.9889455782312925,0.9957482993197279,0.983843537414966,0.8078231292517006,0.5935374149659864,0.0,1.0,0.9982993197278912,0.0,0.9906462585034014,0.5144557823129252,1.0,0.9872448979591837,1.0,0.9940476190476191,0.6011904761904762,0.0,0.7372448979591837,1.0,0.9379251700680272,0.9982993197278912,0.9923469387755102,0.9727891156462585,0.9914965986394558,0.6658163265306123,0.9974489795918368,0.9974489795918368,0.9685374149659864,0.8248299319727891,0.9974489795918368,1.0,0.9965986394557823
40998,0.9914965986394558,0.9957482993197279,0.9370748299319728,0.9957482993197279,0.0,0.9957482993197279,0.9770408163265306,1.0,1.0,0.9736394557823129,0.7712585034013606,0.8205782312925171,0.9948979591836735,0.0,0.8835034013605442,0.7959183673469388,0.9906462585034014,0.9855442176870748,0.9532312925170068,0.9914965986394558,0.9685374149659864,0.9974489795918368,0.9906462585034014,0.7933673469387755,0.5093537414965986,0.8835034013605442,0.7797619047619048,0.9744897959183674,0.9957482993197279,0.0,0.7321428571428571,0.9081632653061225,0.9991496598639455,0.7908163265306123,0.9931972789115646,0.8299319727891157,0.6130952380952381,0.6768707482993197,0.9710884353741497,0,0.7219387755102041,0.9982993197278912,0.7066326530612245,0.8027210884353742,0.9974489795918368,0.657312925170068,0.7066326530612245,0.7227891156462585,0.9421768707482994,0.7933673469387755,0.0,0.9991496598639455,0.548469387755102,0.9965986394557823,0.5085034013605442,0.9532312925170068,0.9982993197278912,0.9685374149659864,0.9149659863945578,0.9914965986394558,0.9464285714285714,0.9940476190476191,0.9940476190476191,0.8835034013605442,0.9285714285714286,0.5918367346938775,0.9804421768707483,0.9727891156462585,0.560374149659864,0.9974489795918368,0.9727891156462585,0.9744897959183674,0.5348639455782312,0.9668367346938775,0.7916666666666666,0.9991496598639455,0.9540816326530612,0.5365646258503401,0.8835034013605442,0,0.9574829931972789,0.0,0.9753401360544217,0.0,0.0,0.7219387755102041,0.9566326530612245,0.9251700680272109,0.9974489795918368,0.935374149659864,0.5365646258503401,0.9914965986394558,0.9923469387755102,0.9753401360544217,0.9787414965986394,0.0,0.9957482993197279,0.9855442176870748,0.7704081632653061,0.9821428571428571,1.0,0.7253401360544217,0.9957482993197279,0.9702380952380952,0.5068027210884354,0.9906462585034014,0.9974489795918368,0.7066326530612245,0.0,0.9957482993197279,0,0.9872448979591837,0.0,0.5637755102040817,0.9974489795918368,0.9855442176870748,1.0,0.9880952380952381,0.9889455782312925,0.9957482993197279,0.9829931972789115,0.8078231292517006,0.5901360544217688,0.0,1.0,0.9982993197278912,0.0,0.9914965986394558,0.5144557823129252,0.9991496598639455,0.9829931972789115,1.0,0.9940476190476191,0.6020408163265306,0.0,0.7372448979591837,1.0,0.9387755102040817,0.9982993197278912,0.9931972789115646,0.9727891156462585,0.9914965986394558,0.66921768707483,0.9974489795918368,0.9957482993197279,0.9608843537414966,0.8248299319727891,0.9957482993197279,1.0,0.9974489795918368
