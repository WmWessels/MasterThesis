0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
757,0.8939393939393939,0.8787878787878788,0.8939393939393939,0.8939393939393939,0.696969696969697,0.8939393939393939,0.6666666666666666,0.8636363636363636,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8257575757575758,0.8939393939393939,0.8939393939393939,0.8712121212121212,0.8712121212121212,0.8712121212121212,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8636363636363636,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8712121212121212,0.8787878787878788,0.8939393939393939,0.8787878787878788,0.8939393939393939,0.8560606060606061,0.8939393939393939,0.8939393939393939,0,0.8939393939393939,0.8484848484848485,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.4015151515151515,0.8636363636363636,0.8939393939393939,0.8712121212121212,0.8939393939393939,0.8712121212121212,0.8939393939393939,0.8712121212121212,0.8333333333333334,0.8939393939393939,0.8712121212121212,0.8712121212121212,0.8787878787878788,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8712121212121212,0.3787878787878788,0.8636363636363636,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8863636363636364,0.8712121212121212,0.8939393939393939,0.8939393939393939,0,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8863636363636364,0.696969696969697,0.8939393939393939,0.8939393939393939,0.8636363636363636,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8712121212121212,0.8863636363636364,0.8863636363636364,0.6439393939393939,0.8712121212121212,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.9015151515151515,0.6818181818181818,0.9015151515151515,0.8484848484848485,0.8939393939393939,0.8484848484848485,0.9090909090909091,0.8939393939393939,0.8939393939393939,0.8712121212121212,0,0.8939393939393939,0.696969696969697,0.8939393939393939,0.8939393939393939,0.8863636363636364,0.9015151515151515,0.8939393939393939,0.8484848484848485,0.9015151515151515,0.8939393939393939,0.5984848484848485,0.8712121212121212,0.8939393939393939,0.8257575757575758,0.9015151515151515,0.8939393939393939,0.8863636363636364,0.5681818181818182,0.9015151515151515,0.8787878787878788,0.8484848484848485,0.8712121212121212,0.8560606060606061,0,0.8939393939393939,0.8636363636363636,0.8939393939393939,0.8712121212121212,0.8939393939393939,0.8787878787878788,0.8863636363636364,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.8939393939393939,0.7424242424242424,0.8939393939393939,0.8484848484848485,0.8939393939393939
761,0.94384765625,0.91796875,0.8056640625,0.93896484375,0.79248046875,0.94091796875,0.873046875,0.94189453125,0.94287109375,0.91357421875,0.69775390625,0.828125,0.94287109375,0.0,0.86376953125,0.74853515625,0.94287109375,0.81201171875,0.82568359375,0.93505859375,0.81591796875,0.9404296875,0.9365234375,0.74169921875,0.69775390625,0.85009765625,0.8515625,0.91064453125,0.939453125,0.0,0.69775390625,0.857421875,0.0,0.7392578125,0.9345703125,0.83740234375,0.94775390625,0.69775390625,0.8974609375,0,0.7060546875,0.94775390625,0.794921875,0.75830078125,0.9404296875,0.931640625,0.794921875,0.69775390625,0.869140625,0.74609375,0.0,0.94873046875,0.8095703125,0.91748046875,0.69580078125,0.80859375,0.94580078125,0.861328125,0.94287109375,0.93603515625,0.90087890625,0.9345703125,0.9375,0.86376953125,0.87109375,0.70703125,0.0,0.93505859375,0.69775390625,0.9404296875,0.9111328125,0.9150390625,0.0,0.880859375,0.74560546875,0.94580078125,0.8115234375,0.77685546875,0.86376953125,0,0.90673828125,0.728515625,0.94189453125,0.0,0.79248046875,0.0,0.9306640625,0.8095703125,0.935546875,0.90380859375,0.69775390625,0.92529296875,0.90234375,0.93994140625,0.9228515625,0.79248046875,0.94580078125,0.92822265625,0.69775390625,0.93701171875,0.9443359375,0.8330078125,0.94482421875,0.86572265625,0.697265625,0.8154296875,0.94287109375,0.794921875,0.0,0.94384765625,0,0.94580078125,0.79248046875,0.6982421875,0.0,0.0,0.943359375,0.9375,0.8115234375,0.0,0.90234375,0.8251953125,0.78076171875,0.69775390625,0.92138671875,0.91455078125,0.7587890625,0.93505859375,0.7880859375,0.94384765625,0.0,0.94482421875,0.9375,0.8076171875,0,0.70947265625,0.9296875,0.80810546875,0.9501953125,0.93896484375,0.91064453125,0.91650390625,0.69775390625,0.94091796875,0.9384765625,0.91552734375,0.8935546875,0.94189453125,0.94873046875,0.0
766,0.824,0.792,0.592,0.8,0.0,0.856,0.56,0.776,0.808,0.6,0.712,0.672,0.8,0.0,0.72,0.616,0.552,0.624,0.664,0.784,0.728,0.872,0.792,0.68,0.592,0.72,0.536,0.552,0.848,0.728,0.536,0.576,0.872,0.672,0.608,0.624,0.872,0.56,0.832,0,0.752,0.784,0.64,0.664,0.816,0.776,0.64,0.592,0.648,0.752,0.0,0.72,0.584,0.616,0.552,0.6,0.84,0.568,0.568,0.608,0.584,0.8,0.792,0.72,0.536,0.752,0.664,0.832,0.528,0.808,0.808,0.768,0.528,0.784,0.728,0.704,0.592,0.528,0.72,0,0.528,0.0,0.808,0.512,0.0,0.512,0.568,0.6,0.8,0.528,0.528,0.76,0.736,0.816,0.488,0.0,0.872,0.688,0.528,0.696,0.816,0.52,0.88,0.888,0.456,0.816,0.856,0.64,0.464,0.84,0,0.784,0.0,0.496,0.0,0.672,0.8,0.768,0.824,0.832,0.704,0.768,0.8,0.0,0.816,0.824,0.0,0.768,0.0,0.832,0.656,0.864,0.672,0.528,0,0.76,0.848,0.6,0.896,0.744,0.56,0.816,0.528,0.832,0.776,0.496,0.632,0.824,0.832,0.864
770,0.9490445859872612,0.9426751592356688,0.7070063694267515,0.9235668789808917,0.0,0.8853503184713376,0.6878980891719745,0.9490445859872612,0.9681528662420382,0.7770700636942676,0.5031847133757962,0.7515923566878981,0.8598726114649682,0.8789808917197452,0.7006369426751592,0.47770700636942676,0.6878980891719745,0.8152866242038217,0.7197452229299363,0.8853503184713376,0.7133757961783439,0.7515923566878981,0.8343949044585988,0.5477707006369427,0.5414012738853503,0.7006369426751592,0.7388535031847133,0.6815286624203821,0.9554140127388535,0.9681528662420382,0.6687898089171974,0.5222929936305732,0.9808917197452229,0.5477707006369427,0.9299363057324841,0.7643312101910829,1.0,0.5031847133757962,0.7515923566878981,0,0.5668789808917197,0.7770700636942676,0.7006369426751592,0.5031847133757962,0.9363057324840764,1.0,0.7006369426751592,0.5477707006369427,0.7197452229299363,0.5031847133757962,0.8789808917197452,0.9554140127388535,0.7006369426751592,0.6305732484076433,0.535031847133758,0.732484076433121,0.9745222929936306,0.7388535031847133,0.89171974522293,0.7006369426751592,0.8598726114649682,0.8853503184713376,0.8980891719745223,0.7006369426751592,0.7707006369426752,0.5668789808917197,0.8789808917197452,0.8152866242038217,0.5031847133757962,0.8789808917197452,0.8726114649681529,0.9235668789808917,0.5605095541401274,0.7707006369426752,0.5414012738853503,0.8980891719745223,0.7388535031847133,0.5414012738853503,0.7006369426751592,0,0.7006369426751592,0.0,0.7579617834394905,0.5668789808917197,0.0,0.5286624203821656,0.6242038216560509,0.7197452229299363,0.9171974522292994,0.5031847133757962,0.5031847133757962,0.8535031847133758,0.8980891719745223,1.0,0.8535031847133758,0.643312101910828,0.9936305732484076,0.8726114649681529,0.7133757961783439,0.8853503184713376,0.9808917197452229,0.6178343949044586,0.9808917197452229,0.7388535031847133,0.5095541401273885,0.8980891719745223,0.9617834394904459,0.7006369426751592,0.5414012738853503,0.9681528662420382,0,0.9681528662420382,0.0,0.5605095541401274,0.9299363057324841,0.8407643312101911,0.9426751592356688,0.7707006369426752,0.7133757961783439,0.9745222929936306,0.7197452229299363,0.7133757961783439,0.7133757961783439,0.0,0.9426751592356688,0.9681528662420382,0.0,0.8853503184713376,0.6050955414012739,1.0,0.8598726114649682,0.7770700636942676,0.9171974522292994,0.7070063694267515,0,0.5668789808917197,0.9617834394904459,0.7070063694267515,1.0,0.8853503184713376,0.6878980891719745,0.9171974522292994,0.8407643312101911,0.9808917197452229,0.89171974522293,0.732484076433121,0.6687898089171974,0.9745222929936306,0.7770700636942676,0.9426751592356688
779,0.848,0.856,0.656,0.856,0.0,0.872,0.656,0.8,0.84,0.6,0.704,0.688,0.848,0.88,0.688,0.616,0.656,0.672,0.728,0.816,0.744,0.824,0.824,0.68,0.496,0.688,0.544,0.656,0.888,0.688,0.544,0.592,0.88,0.704,0.72,0.672,0.856,0.64,0.872,0,0.672,0.776,0.68,0.672,0.848,0.856,0.68,0.568,0.656,0.672,0.864,0.888,0.512,0.584,0.424,0.64,0.896,0.632,0.472,0.64,0.72,0.808,0.856,0.688,0.544,0.68,0.752,0.864,0.536,0.824,0.872,0.808,0.528,0.84,0.68,0.8,0.648,0.536,0.688,0,0.536,0.0,0.888,0.48,0.0,0.552,0.672,0.656,0.84,0.536,0.536,0.824,0.832,0.864,0.68,0.0,0.888,0.68,0.536,0.672,0.88,0.712,0.896,0.88,0.512,0.584,0.856,0.68,0.416,0.888,0,0.784,0.0,0.528,0.88,0.696,0.848,0.768,0.88,0.88,0.68,0.664,0.8,0.0,0.84,0.792,0.0,0.784,0.0,0.864,0.728,0.872,0.696,0.472,0,0.672,0.864,0.632,0.856,0.8,0.664,0.816,0.536,0.888,0.8,0.6,0.656,0.88,0.728,0.888
786,0.8289473684210527,0.7236842105263158,0.5921052631578947,0.8026315789473685,0.7631578947368421,0.8289473684210527,0.881578947368421,0.8157894736842105,0.8157894736842105,0.7105263157894737,0.8552631578947368,0.7236842105263158,0.8289473684210527,0.8026315789473685,0.7368421052631579,0.7894736842105263,0.868421052631579,0.7368421052631579,0.6842105263157895,0.7894736842105263,0.75,0.8026315789473685,0.7631578947368421,0.8157894736842105,0.4342105263157895,0.7368421052631579,0.618421052631579,0.868421052631579,0.8157894736842105,0.6973684210526315,0.5394736842105263,0.6842105263157895,0.8421052631578947,0.8289473684210527,0.8421052631578947,0.8026315789473685,0.8026315789473685,0.8552631578947368,0.7631578947368421,0,0.8289473684210527,0.8157894736842105,0.7236842105263158,0.8157894736842105,0.8289473684210527,0.7631578947368421,0.7236842105263158,0.6052631578947368,0.7894736842105263,0.8421052631578947,0.8026315789473685,0.8289473684210527,0.5657894736842105,0.7763157894736842,0.5394736842105263,0.6578947368421053,0.7894736842105263,0.6578947368421053,0.8157894736842105,0.8026315789473685,0.75,0.8157894736842105,0.7763157894736842,0.7368421052631579,0.5789473684210527,0.8157894736842105,0.8157894736842105,0.8157894736842105,0.5394736842105263,0.7894736842105263,0.8421052631578947,0.8026315789473685,0.5921052631578947,0.7763157894736842,0.8552631578947368,0.8552631578947368,0.6842105263157895,0.5394736842105263,0.7368421052631579,0,0.5394736842105263,0.75,0.7763157894736842,0.5526315789473685,0.7631578947368421,0.4868421052631579,0.8552631578947368,0.6578947368421053,0.7894736842105263,0.5394736842105263,0.5394736842105263,0.7631578947368421,0.7763157894736842,0.7631578947368421,0.7105263157894737,0.7105263157894737,0.7894736842105263,0.8421052631578947,0.5394736842105263,0.8157894736842105,0.8026315789473685,0.6578947368421053,0.7894736842105263,0.7368421052631579,0.5394736842105263,0.8157894736842105,0.8157894736842105,0.7236842105263158,0.5,0.8289473684210527,0,0.6973684210526315,0.7631578947368421,0.4868421052631579,0.8421052631578947,0.8157894736842105,0.8157894736842105,0.8289473684210527,0.7894736842105263,0.7894736842105263,0.8289473684210527,0.8289473684210527,0.6710526315789473,0.5394736842105263,0.8026315789473685,0.7631578947368421,0.6710526315789473,0.8421052631578947,0.5526315789473685,0.7894736842105263,0.8289473684210527,0.8157894736842105,0.8421052631578947,0.6578947368421053,0,0.8157894736842105,0.8157894736842105,0.6052631578947368,0.7894736842105263,0.8421052631578947,0.868421052631579,0.8026315789473685,0.5394736842105263,0.7763157894736842,0.8026315789473685,0.7631578947368421,0.7631578947368421,0.8026315789473685,0.7368421052631579,0.8157894736842105
792,0.88,0.864,0.808,0.896,0.0,0.88,0.664,0.92,0.936,0.792,0.768,0.696,0.896,0.848,0.768,0.76,0.664,0.936,0.872,0.872,0.864,0.88,0.856,0.768,0.904,0.768,0.832,0.664,0.912,0.6,0.6,0.72,0.944,0.752,0.896,0.76,0.936,0.6,0.904,0,0.8,0.904,0.672,0.784,0.88,0.936,0.672,0.6,0.68,0.776,0.856,0.944,0.696,0.744,0.808,0.904,0.928,0.76,0.896,0.88,0.808,0.88,0.856,0.768,0.936,0.8,0.832,0.896,0.6,0.88,0.88,0.832,0.944,0.824,0.768,0.952,0.88,0.6,0.768,0,0.6,0.0,0.888,0.864,0.0,0.824,0.648,0.84,0.896,0.6,0.6,0.872,0.768,0.912,0.776,0.0,0.928,0.784,0.6,0.888,0.936,0.68,0.912,0.768,0.84,0.768,0.896,0.672,0.904,0.912,0,0.936,0.0,0.928,0.872,0.808,0.92,0.856,0.904,0.888,0.6,0.792,0.712,0.0,0.888,0.84,0.0,0.888,0.0,0.968,0.808,0.904,0.912,0.688,0,0.8,0.912,0.824,0.952,0.912,0.664,0.832,0.6,0.92,0.88,0.808,0.784,0.912,0.88,0.928
797,0.84,0.82,0.624,0.844,0.0,0.844,0.588,0.828,0.868,0.588,0.66,0.672,0.832,0.0,0.68,0.62,0.596,0.66,0.704,0.84,0.672,0.9,0.852,0.672,0.544,0.68,0.492,0.596,0.884,0.0,0.56,0.556,0.884,0.628,0.74,0.692,0.84,0.54,0.864,0,0.696,0.872,0.54,0.616,0.84,0.844,0.556,0.56,0.652,0.692,0.0,0.82,0.548,0.552,0.54,0.62,0.88,0.564,0.56,0.604,0.696,0.864,0.844,0.68,0.552,0.696,0.744,0.852,0.56,0.864,0.844,0.804,0.556,0.788,0.684,0.784,0.644,0.56,0.68,0,0.7,0.0,0.856,0.0,0.0,0.54,0.592,0.624,0.868,0.692,0.56,0.808,0.8,0.86,0.6,0.0,0.88,0.736,0.56,0.68,0.852,0.604,0.9,0.904,0.508,0.552,0.852,0.54,0.0,0.856,0,0.844,0.0,0.472,0.0,0.724,0.848,0.756,0.888,0.844,0.7,0.68,0.62,0.0,0.796,0.832,0.0,0.8,0.0,0.836,0.732,0.852,0.652,0.516,0,0.684,0.868,0.624,0.888,0.796,0.584,0.832,0.56,0.888,0.828,0.588,0.66,0.856,0.868,0.872
798,0.5921052631578947,0.5921052631578947,0.5789473684210527,0.6052631578947368,0.5657894736842105,0.6052631578947368,0.5394736842105263,0.5657894736842105,0.5921052631578947,0.6447368421052632,0.6052631578947368,0.5657894736842105,0.5657894736842105,0.5657894736842105,0.5921052631578947,0.5789473684210527,0.5394736842105263,0.6052631578947368,0.6052631578947368,0.631578947368421,0.618421052631579,0.0,0.6052631578947368,0.6052631578947368,0.5657894736842105,0.5921052631578947,0.5657894736842105,0.5657894736842105,0.618421052631579,0.5526315789473685,0.5526315789473685,0.5657894736842105,0.6578947368421053,0.5921052631578947,0.5789473684210527,0.5394736842105263,0.5,0.5526315789473685,0.5657894736842105,0,0.618421052631579,0.0,0.5526315789473685,0.5921052631578947,0.6447368421052632,0.4868421052631579,0.5526315789473685,0.5526315789473685,0.5263157894736842,0.0,0.5394736842105263,0.5657894736842105,0.5131578947368421,0.5657894736842105,0.6052631578947368,0.631578947368421,0.6052631578947368,0.5394736842105263,0.618421052631579,0.5526315789473685,0.4342105263157895,0.618421052631579,0.618421052631579,0.5921052631578947,0.5526315789473685,0.6052631578947368,0.5526315789473685,0.631578947368421,0.5526315789473685,0.5921052631578947,0.5526315789473685,0.5263157894736842,0.5657894736842105,0.5526315789473685,0.5921052631578947,0.5263157894736842,0.5921052631578947,0.5526315789473685,0.5921052631578947,0,0.5526315789473685,0.5657894736842105,0.618421052631579,0.6052631578947368,0.5657894736842105,0.47368421052631576,0.6052631578947368,0.5657894736842105,0.6052631578947368,0.5526315789473685,0.5526315789473685,0.5921052631578947,0.5657894736842105,0.6052631578947368,0.47368421052631576,0.0,0.6052631578947368,0.5657894736842105,0.5526315789473685,0.5789473684210527,0.5789473684210527,0.4473684210526316,0.6052631578947368,0.5789473684210527,0.5394736842105263,0.0,0.6052631578947368,0.5526315789473685,0.5789473684210527,0.6052631578947368,0,0.6710526315789473,0.5789473684210527,0.5789473684210527,0.5394736842105263,0.5921052631578947,0.5131578947368421,0.5789473684210527,0.0,0.631578947368421,0.5921052631578947,0.5789473684210527,0.5263157894736842,0.5526315789473685,0.47368421052631576,0.5657894736842105,0.5526315789473685,0.5526315789473685,0.6052631578947368,0.6447368421052632,0.6052631578947368,0.0,0.5394736842105263,0.5921052631578947,0,0.6578947368421053,0.5263157894736842,0.5657894736842105,0.5789473684210527,0.5657894736842105,0.5657894736842105,0.5394736842105263,0.5526315789473685,0.6447368421052632,0.5921052631578947,0.5657894736842105,0.5657894736842105,0.6447368421052632,0.0,0.6052631578947368
799,0.872,0.804,0.908,0.88,0.0,0.868,0.868,0.876,0.876,0.856,0.76,0.808,0.868,0.852,0.684,0.776,0.864,0.876,0.884,0.856,0.884,0.86,0.852,0.736,0.888,0.684,0.884,0.864,0.852,0.856,0.668,0.708,0.88,0.764,0.896,0.764,0.868,0.724,0.772,0,0.736,0.86,0.76,0.808,0.864,0.864,0.76,0.76,0.744,0.736,0.848,0.888,0.772,0.76,0.86,0.876,0.876,0.892,0.876,0.88,0.84,0.868,0.84,0.684,0.792,0.736,0.884,0.768,0.524,0.856,0.84,0.896,0.904,0.792,0.672,0.892,0.888,0.504,0.684,0,0.84,0.0,0.832,0.856,0.0,0.9,0.872,0.9,0.864,0.784,0.504,0.792,0.868,0.88,0.868,0.0,0.868,0.88,0.72,0.884,0.872,0.88,0.868,0.66,0.832,0.76,0.88,0.76,0.896,0.876,0,0.864,0.0,0.816,0.86,0.88,0.876,0.864,0.852,0.824,0.88,0.728,0.792,0.0,0.82,0.8,0.0,0.884,0.0,0.88,0.88,0.816,0.884,0.812,0,0.736,0.896,0.904,0.888,0.872,0.868,0.808,0.908,0.852,0.88,0.844,0.9,0.868,0.84,0.868
802,0.7433264887063655,0.6694045174537988,0.6201232032854209,0.7268993839835729,0.5770020533880903,0.75564681724846,0.6817248459958932,0.8151950718685832,0.8028747433264887,0.6837782340862423,0.6386036960985626,0.6899383983572895,0.7474332648870636,0.0,0.6324435318275154,0.6406570841889117,0.7186858316221766,0.7741273100616016,0.7371663244353183,0.704312114989733,0.6714579055441479,0.6960985626283368,0.7063655030800822,0.6262833675564682,0.5277207392197125,0.6324435318275154,0.6550308008213552,0.6899383983572895,0.7145790554414785,0.757700205338809,0.5010266940451745,0.6468172484599589,0.7659137577002053,0.6386036960985626,0.7597535934291582,0.6386036960985626,0.8316221765913757,0.6406570841889117,0.6960985626283368,0,0.6386036960985626,0.7741273100616016,0.6303901437371663,0.6427104722792608,0.7494866529774127,0.7967145790554415,0.6303901437371663,0.6386036960985626,0.7125256673511293,0.6386036960985626,0.0,0.8008213552361396,0.7618069815195072,0.6919917864476386,0.47433264887063653,0.6878850102669405,0.7679671457905544,0.6981519507186859,0.7351129363449692,0.6796714579055442,0.648870636550308,0.6960985626283368,0.702258726899384,0.6324435318275154,0.6652977412731006,0.6386036960985626,0.7412731006160165,0.704312114989733,0.4989733059548255,0.6981519507186859,0.7125256673511293,0.7535934291581109,0.49075975359342916,0.6529774127310062,0.6386036960985626,0.7885010266940452,0.7248459958932238,0.5133470225872689,0.6324435318275154,0,0.7227926078028748,0.5811088295687885,0.7063655030800822,0.0,0.5749486652977412,0.5236139630390144,0.7145790554414785,0.6878850102669405,0.7125256673511293,0.702258726899384,0.4989733059548255,0.6694045174537988,0.6817248459958932,0.7679671457905544,0.7515400410677618,0.6344969199178645,0.7535934291581109,0.7494866529774127,0.5770020533880903,0.7227926078028748,0.8234086242299795,0.648870636550308,0.7453798767967146,0.6735112936344969,0.5195071868583162,0.6119096509240246,0.7679671457905544,0.6303901437371663,0.0,0.7494866529774127,0,0.7494866529774127,0.5749486652977412,0.48459958932238195,0.7659137577002053,0.7330595482546202,0.7597535934291582,0.7351129363449692,0.7392197125256673,0.7618069815195072,0.675564681724846,0.7125256673511293,0.6899383983572895,0.4989733059548255,0.7125256673511293,0.6919917864476386,0.4989733059548255,0.7782340862422998,0.6242299794661191,0.8213552361396304,0.7268993839835729,0.7515400410677618,0.7782340862422998,0.6981519507186859,0,0.6386036960985626,0.7720739219712526,0.6201232032854209,0.7926078028747433,0.7597535934291582,0.6878850102669405,0.6796714579055442,0.6837782340862423,0.7166324435318275,0.7145790554414785,0.7433264887063655,0.6632443531827515,0.7412731006160165,0.7392197125256673,0.7330595482546202
803,0.0,0.944475602916433,0.9495232753785754,0.9489624228827819,0.0,0.9484015703869882,0.5311273135165452,0.9495232753785754,0.9506449803701627,0.9461581604038138,0.5305664610207516,0.0,0.947279865395401,0.947279865395401,0.9411104879416713,0.46943353897924844,0.9467190128996074,0.9455973079080202,0.0,0.9467190128996074,0.9506449803701627,0.944475602916433,0.9467190128996074,0.9411104879416713,0.9478407178911946,0.9411104879416713,0.9461581604038138,0.9411104879416713,0.9467190128996074,0.9371845204711161,0.9293325855300056,0.9455973079080202,0.9484015703869882,0.5305664610207516,0.950084127874369,0.9399887829500841,0.9439147504206393,0.5305664610207516,0.9450364554122266,0,0.9411104879416713,0.9534492428491307,0.9248457655636567,0.5305664610207516,0.9489624228827819,0.9068984856982614,0.9248457655636567,0.5305664610207516,0.5305664610207516,0.9411104879416713,0.9478407178911946,0.9495232753785754,0.8070667414469994,0.823331463825014,0.9484015703869882,0.9489624228827819,0.9489624228827819,0.9484015703869882,0.9489624228827819,0.9489624228827819,0.9377453729669097,0.9455973079080202,0.9455973079080202,0.9411104879416713,0.9461581604038138,0.9411104879416713,0.9489624228827819,0.944475602916433,0.5305664610207516,0.9455973079080202,0.9439147504206393,0.9433538979248458,0.9478407178911946,0.9422321929332585,0.5305664610207516,0.9484015703869882,0.9489624228827819,0.5372966909702748,0.9411104879416713,0,0.9439147504206393,0.0,0.9399887829500841,0.0,0.0,0.947279865395401,0.9467190128996074,0.0,0.9467190128996074,0.9450364554122266,0.5305664610207516,0.9416713404374649,0.9416713404374649,0.0,0.9455973079080202,0.0,0.0,0.9489624228827819,0.9029725182277061,0.9484015703869882,0.9489624228827819,0.944475602916433,0.947279865395401,0.9416713404374649,0.950084127874369,0.9270891755468312,0.9517666853617499,0.9248457655636567,0.0,0.9478407178911946,0,0.0,0.0,0.9355019629837352,0.9495232753785754,0.9484015703869882,0.9484015703869882,0.9467190128996074,0.9484015703869882,0.9528883903533371,0.9332585530005608,0.9214806505888952,0.8177229388670779,0.0,0.9388670779584969,0.9377453729669097,0.0,0.9484015703869882,0.0,0.9484015703869882,0.9489624228827819,0.9484015703869882,0.9461581604038138,0.8199663488502524,0,0.9411104879416713,0.9506449803701627,0.9484015703869882,0.9489624228827819,0.9461581604038138,0.5305664610207516,0.9489624228827819,0.9158721256309591,0.9467190128996074,0.9467190128996074,0.9450364554122266,0.0,0.9467190128996074,0.950084127874369,0.9461581604038138
805,0.88,0.768,0.584,0.816,0.0,0.856,0.672,0.824,0.848,0.6,0.688,0.656,0.856,0.0,0.624,0.64,0.68,0.616,0.688,0.832,0.656,0.68,0.832,0.616,0.568,0.624,0.576,0.68,0.872,0.712,0.536,0.592,0.92,0.656,0.648,0.552,0.832,0.52,0.872,0,0.64,0.56,0.528,0.64,0.888,0.848,0.56,0.56,0.64,0.64,0.0,0.776,0.552,0.584,0.528,0.56,0.896,0.624,0.536,0.6,0.552,0.808,0.808,0.624,0.6,0.64,0.672,0.88,0.528,0.824,0.88,0.832,0.536,0.76,0.664,0.8,0.576,0.528,0.624,0,0.528,0.0,0.848,0.544,0.0,0.392,0.664,0.616,0.808,0.528,0.528,0.76,0.832,0.896,0.6,0.0,0.912,0.64,0.528,0.648,0.888,0.584,0.904,0.824,0.48,0.0,0.864,0.528,0.44,0.856,0,0.84,0.0,0.488,0.904,0.64,0.864,0.736,0.56,0.872,0.68,0.632,0.64,0.0,0.8,0.84,0.0,0.808,0.0,0.856,0.608,0.536,0.648,0.416,0,0.632,0.824,0.6,0.904,0.832,0.672,0.84,0.528,0.888,0.808,0.576,0.672,0.832,0.568,0.92
806,0.852,0.824,0.584,0.84,0.0,0.86,0.652,0.828,0.884,0.592,0.708,0.644,0.832,0.0,0.676,0.668,0.652,0.664,0.7,0.84,0.708,0.88,0.836,0.652,0.568,0.676,0.504,0.652,0.884,0.556,0.556,0.588,0.88,0.688,0.772,0.724,0.88,0.564,0.876,0,0.696,0.864,0.608,0.672,0.852,0.856,0.608,0.556,0.62,0.704,0.0,0.828,0.496,0.6,0.54,0.608,0.872,0.588,0.572,0.576,0.68,0.836,0.836,0.676,0.528,0.696,0.768,0.864,0.556,0.844,0.852,0.844,0.532,0.8,0.712,0.82,0.64,0.556,0.676,0,0.704,0.0,0.856,0.528,0.0,0.52,0.628,0.64,0.852,0.7,0.556,0.848,0.812,0.876,0.628,0.0,0.892,0.736,0.556,0.664,0.864,0.672,0.908,0.888,0.54,0.58,0.872,0.608,0.524,0.876,0,0.82,0.0,0.532,0.0,0.764,0.864,0.784,0.868,0.856,0.712,0.684,0.612,0.0,0.804,0.808,0.0,0.784,0.0,0.892,0.776,0.86,0.684,0.536,0,0.696,0.864,0.608,0.896,0.792,0.64,0.828,0.556,0.868,0.836,0.596,0.664,0.88,0.872,0.88
807,0.82861328125,0.76708984375,0.857421875,0.80078125,0.0,0.8232421875,0.7353515625,0.83837890625,0.79833984375,0.81640625,0.6904296875,0.72412109375,0.81591796875,0.0,0.6982421875,0.7109375,0.7353515625,0.84326171875,0.8662109375,0.79296875,0.85791015625,0.771484375,0.78955078125,0.73046875,0.7119140625,0.6982421875,0.8515625,0.7353515625,0.8046875,0.82568359375,0.65234375,0.69580078125,0.8603515625,0.73583984375,0.83349609375,0.6962890625,0.86328125,0.6689453125,0.7373046875,0,0.68359375,0.79248046875,0.6279296875,0.7275390625,0.82861328125,0.841796875,0.6279296875,0.716796875,0.693359375,0.7021484375,0.0,0.81640625,0.64208984375,0.68798828125,0.77685546875,0.8505859375,0.83154296875,0.86083984375,0.8271484375,0.85888671875,0.73876953125,0.791015625,0.7919921875,0.6982421875,0.7490234375,0.68359375,0.830078125,0.72900390625,0.5087890625,0.7998046875,0.75146484375,0.76171875,0.79931640625,0.7177734375,0.6923828125,0.82470703125,0.86083984375,0.5087890625,0.6982421875,0,0.75927734375,0.0,0.74365234375,0.0,0.0,0.84033203125,0.73583984375,0.85498046875,0.79638671875,0.76220703125,0.5087890625,0.7529296875,0.751953125,0.7841796875,0.82470703125,0.0,0.83544921875,0.80810546875,0.68017578125,0.84375,0.80126953125,0.76171875,0.828125,0.6884765625,0.77587890625,0.74462890625,0.837890625,0.6279296875,0.0,0.83447265625,0,0.77099609375,0.0,0.73779296875,0.0,0.82568359375,0.7705078125,0.798828125,0.86083984375,0.82666015625,0.78466796875,0.68994140625,0.59326171875,0.0,0.7890625,0.7578125,0.0,0.8115234375,0.0,0.86474609375,0.81689453125,0.837890625,0.85107421875,0.56494140625,0,0.68359375,0.8408203125,0.8603515625,0.8427734375,0.830078125,0.7353515625,0.73681640625,0.7783203125,0.79150390625,0.80517578125,0.80029296875,0.72900390625,0.8251953125,0.80224609375,0.849609375
810,0.6761904761904762,0.6476190476190476,0.6,0.7047619047619048,0.6095238095238096,0.6952380952380952,0.6476190476190476,0.7238095238095238,0.7333333333333333,0.6761904761904762,0.5904761904761905,0.5904761904761905,0.6952380952380952,0.7238095238095238,0.6285714285714286,0.6190476190476191,0.7047619047619048,0.5619047619047619,0.638095238095238,0.7142857142857143,0.580952380952381,0.6952380952380952,0.7142857142857143,0.6476190476190476,0.5523809523809524,0.6285714285714286,0.6476190476190476,0.6952380952380952,0.6761904761904762,0.5523809523809524,0.5523809523809524,0.6761904761904762,0.6761904761904762,0.6285714285714286,0.7333333333333333,0.5714285714285714,0.7142857142857143,0.6095238095238096,0.6761904761904762,0,0.6476190476190476,0.6095238095238096,0.5142857142857142,0.6571428571428571,0.6952380952380952,0.7047619047619048,0.5142857142857142,0.5523809523809524,0.6761904761904762,0.5523809523809524,0.7047619047619048,0.7142857142857143,0.5333333333333333,0.6476190476190476,0.49523809523809526,0.5523809523809524,0.6952380952380952,0.7047619047619048,0.7047619047619048,0.7047619047619048,0.5904761904761905,0.7142857142857143,0.7047619047619048,0.6285714285714286,0.6190476190476191,0.6571428571428571,0.7238095238095238,0.6857142857142857,0.44761904761904764,0.7047619047619048,0.6952380952380952,0.6476190476190476,0.5238095238095238,0.7047619047619048,0.6,0.7142857142857143,0.5142857142857142,0.5523809523809524,0.6285714285714286,0,0.5523809523809524,0.6190476190476191,0.6857142857142857,0.42857142857142855,0.6095238095238096,0.5428571428571428,0.7047619047619048,0.5619047619047619,0.7333333333333333,0.5523809523809524,0.5523809523809524,0.6952380952380952,0.6571428571428571,0.6761904761904762,0.638095238095238,0.7238095238095238,0.6952380952380952,0.7523809523809524,0.5523809523809524,0.7142857142857143,0.6761904761904762,0.6571428571428571,0.6571428571428571,0.6666666666666666,0.5904761904761905,0.6190476190476191,0.6857142857142857,0.5142857142857142,0.41904761904761906,0.7142857142857143,0,0.6761904761904762,0.6095238095238096,0.45714285714285713,0.6761904761904762,0.7238095238095238,0.7142857142857143,0.6857142857142857,0.5904761904761905,0.6952380952380952,0.7047619047619048,0.7047619047619048,0.6,0.5523809523809524,0.6190476190476191,0.6666666666666666,0.5523809523809524,0.7047619047619048,0.6190476190476191,0.7047619047619048,0.6571428571428571,0.6761904761904762,0.7523809523809524,0.5619047619047619,0,0.6571428571428571,0.6571428571428571,0.6095238095238096,0.6571428571428571,0.7142857142857143,0.6857142857142857,0.6857142857142857,0.5523809523809524,0.6857142857142857,0.6761904761904762,0.6666666666666666,0.6761904761904762,0.7238095238095238,0.6190476190476191,0.6761904761904762
813,0.872,0.84,0.86,0.892,0.0,0.884,0.64,0.908,0.904,0.764,0.664,0.696,0.876,0.892,0.708,0.62,0.648,0.888,0.88,0.884,0.884,0.896,0.86,0.728,0.936,0.708,0.848,0.648,0.884,0.564,0.564,0.616,0.904,0.688,0.9,0.732,0.916,0.588,0.78,0,0.696,0.904,0.58,0.688,0.872,0.908,0.58,0.564,0.688,0.728,0.896,0.896,0.808,0.712,0.86,0.896,0.896,0.836,0.924,0.872,0.784,0.856,0.876,0.708,0.844,0.696,0.892,0.804,0.564,0.876,0.868,0.756,0.92,0.716,0.708,0.896,0.9,0.564,0.708,0,0.68,0.0,0.904,0.9,0.0,0.88,0.612,0.88,0.896,0.692,0.564,0.844,0.816,0.892,0.848,0.0,0.876,0.844,0.564,0.896,0.908,0.724,0.888,0.608,0.86,0.616,0.888,0.58,0.96,0.892,0,0.904,0.0,0.912,0.892,0.876,0.892,0.876,0.904,0.896,0.728,0.708,0.876,0.0,0.876,0.872,0.0,0.884,0.0,0.92,0.876,0.9,0.892,0.788,0,0.696,0.864,0.864,0.908,0.9,0.64,0.868,0.564,0.9,0.868,0.78,0.652,0.896,0.888,0.888
816,0.82080078125,0.80908203125,0.8125,0.81494140625,0.0,0.81298828125,0.81005859375,0.8154296875,0.802734375,0.79736328125,0.68994140625,0.76220703125,0.8076171875,0.0,0.68212890625,0.70849609375,0.81005859375,0.796875,0.81494140625,0.81689453125,0.8134765625,0.8173828125,0.81640625,0.6708984375,0.75927734375,0.68212890625,0.7958984375,0.81005859375,0.8154296875,0.81689453125,0.7509765625,0.72900390625,0.822265625,0.697265625,0.8095703125,0.73779296875,0.8037109375,0.71142578125,0.8173828125,0,0.69384765625,0.81884765625,0.6298828125,0.71826171875,0.8212890625,0.7783203125,0.6298828125,0.6865234375,0.7216796875,0.69384765625,0.0,0.8095703125,0.701171875,0.68798828125,0.78662109375,0.80224609375,0.81787109375,0.80810546875,0.78857421875,0.79541015625,0.78466796875,0.81591796875,0.81298828125,0.68212890625,0.796875,0.69384765625,0.806640625,0.81982421875,0.5498046875,0.81787109375,0.81201171875,0.8017578125,0.783203125,0.7919921875,0.68701171875,0.80859375,0.80859375,0.501953125,0.68212890625,0,0.8037109375,0.0,0.818359375,0.0,0.0,0.79443359375,0.81005859375,0.81787109375,0.81640625,0.81103515625,0.501953125,0.818359375,0.796875,0.81396484375,0.81005859375,0.0,0.81884765625,0.80712890625,0.72607421875,0.80322265625,0.79443359375,0.8095703125,0.8212890625,0.689453125,0.7763671875,0.650390625,0.8203125,0.6298828125,0.0,0.81884765625,0,0.806640625,0.0,0.654296875,0.0,0.8046875,0.79931640625,0.802734375,0.814453125,0.8203125,0.80615234375,0.69189453125,0.7099609375,0.0,0.78515625,0.814453125,0.0,0.8056640625,0.0,0.81494140625,0.8037109375,0.8193359375,0.7998046875,0.70458984375,0,0.69384765625,0.81787109375,0.81201171875,0.82421875,0.8095703125,0.8095703125,0.81103515625,0.7890625,0.81591796875,0.814453125,0.80126953125,0.806640625,0.8203125,0.82080078125,0.82373046875
818,0.9487179487179487,1.0,0.9230769230769231,0.9743589743589743,0.8461538461538461,1.0,1.0,0.9871794871794872,1.0,0.8717948717948718,0.6538461538461539,0.8974358974358975,1.0,1.0,1.0,0.8974358974358975,1.0,0.9871794871794872,0.9743589743589743,0.9743589743589743,0.9487179487179487,0.9743589743589743,0.9615384615384616,0.8974358974358975,0.5,1.0,0.9358974358974359,0.9871794871794872,0.9743589743589743,0.9871794871794872,0.8205128205128205,0.8333333333333334,1.0,0.8974358974358975,1.0,0.9487179487179487,1.0,0.5384615384615384,0.9871794871794872,0,0.8974358974358975,1.0,0.9102564102564102,0.8974358974358975,1.0,1.0,0.9102564102564102,0.5384615384615384,0.9487179487179487,0.8205128205128205,1.0,0.9871794871794872,0.9487179487179487,0.9358974358974359,0.48717948717948717,0.9487179487179487,1.0,0.9358974358974359,0.9615384615384616,0.9102564102564102,0.9743589743589743,0.9743589743589743,0.9871794871794872,1.0,0.8974358974358975,0.8974358974358975,0.9871794871794872,1.0,0.5384615384615384,0.9871794871794872,1.0,0.9871794871794872,0.6538461538461539,0.9615384615384616,0.8205128205128205,0.9871794871794872,0.9871794871794872,0.5384615384615384,1.0,0,0.5384615384615384,0.8974358974358975,0.9871794871794872,0.48717948717948717,0.8589743589743589,0.6025641025641025,0.9102564102564102,0.9743589743589743,0.9871794871794872,0.5384615384615384,0.5384615384615384,1.0,0.8846153846153846,0.9871794871794872,0.9230769230769231,0.8205128205128205,0.9743589743589743,0.9871794871794872,0.9102564102564102,0.9487179487179487,1.0,0.7948717948717948,1.0,0.9871794871794872,0.5256410256410257,0.9743589743589743,1.0,0.9102564102564102,0.5384615384615384,1.0,0,0.9871794871794872,0.8589743589743589,0.5256410256410257,1.0,1.0,0.9871794871794872,0.9871794871794872,0.9743589743589743,1.0,0.9102564102564102,0.9230769230769231,0.8846153846153846,0.5384615384615384,1.0,1.0,0.8717948717948718,1.0,0.7435897435897436,1.0,0.9871794871794872,1.0,0.9871794871794872,0.9487179487179487,0,0.8974358974358975,1.0,0.9230769230769231,1.0,1.0,1.0,1.0,0.9358974358974359,0.9871794871794872,0.9871794871794872,0.9102564102564102,0.8717948717948718,0.9871794871794872,1.0,0.9871794871794872
819,0.8302521008403362,0.8676470588235294,0.8319327731092437,0.8815126050420168,0.0,0.8836134453781512,0.8735294117647059,0.8777310924369748,0.8810924369747899,0.8794117647058823,0.8411764705882353,0.8336134453781513,0.8819327731092437,0.8752100840336134,0.8323529411764706,0.8252100840336134,0.880672268907563,0.8357142857142857,0.8050420168067227,0.8810924369747899,0.8373949579831933,0.876890756302521,0.8798319327731092,0.8525210084033613,0.861764705882353,0.8294117647058824,0.880672268907563,0.8735294117647059,0.8815126050420168,0.8819327731092437,0.8436974789915966,0.8638655462184874,0.8831932773109243,0.8340336134453782,0.8781512605042017,0.8357142857142857,0.8676470588235294,0.8163865546218487,0.8743697478991597,0,0.8394957983193277,0.8836134453781512,0.8306722689075631,0.8273109243697478,0.8802521008403361,0.8554621848739495,0.8306722689075631,0.8411764705882353,0.8327731092436975,0.8546218487394958,0.8747899159663866,0.880672268907563,0.8092436974789916,0.8277310924369747,0.826890756302521,0.8470588235294118,0.8823529411764706,0.8836134453781512,0.8869747899159663,0.880672268907563,0.8789915966386554,0.880672268907563,0.8794117647058823,0.8323529411764706,0.8638655462184874,0.8394957983193277,0.8823529411764706,0.8802521008403361,0.48361344537815126,0.8827731092436975,0.8747899159663866,0.8785714285714286,0.8550420168067226,0.8592436974789915,0.8411764705882353,0.8789915966386554,0.8394957983193277,0.5373949579831933,0.8323529411764706,0,0.8634453781512605,0.0,0.8785714285714286,0.0,0.0,0.8676470588235294,0.8815126050420168,0.8046218487394958,0.8802521008403361,0.8689075630252101,0.5029411764705882,0.8794117647058823,0.8697478991596639,0.8315126050420169,0.880672268907563,0.0,0.8298319327731093,0.8789915966386554,0.75,0.8815126050420168,0.8705882352941177,0.8739495798319328,0.8802521008403361,0.8344537815126051,0.8302521008403362,0.8504201680672269,0.8785714285714286,0.8306722689075631,0.0,0.8810924369747899,0,0.8331932773109244,0.0,0.8718487394957983,0.8840336134453781,0.8815126050420168,0.8819327731092437,0.880672268907563,0.8394957983193277,0.8773109243697479,0.8747899159663866,0.8470588235294118,0.8340336134453782,0.0,0.8630252100840337,0.8714285714285714,0.0,0.8810924369747899,0.0,0.880672268907563,0.8827731092436975,0.8823529411764706,0.8823529411764706,0.8302521008403362,0,0.8394957983193277,0.8735294117647059,0.8315126050420169,0.8823529411764706,0.8815126050420168,0.8647058823529412,0.876890756302521,0.8621848739495799,0.8823529411764706,0.8789915966386554,0.8810924369747899,0.8315126050420169,0.8815126050420168,0.8836134453781512,0.8810924369747899
