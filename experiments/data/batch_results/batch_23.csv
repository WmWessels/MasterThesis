0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
44098,0.764,0.732,0.712,0.752,0.624,0.776,0.776,0.768,0.772,0.736,0.712,0.7,0.776,0.72,0.7,0.716,0.764,0.704,0.704,0.76,0.716,0.744,0.76,0.712,0.7,0.7,0.696,0.796,0.772,0.7,0.7,0.724,0.764,0.732,0.752,0.788,0.772,0.7,0.764,0,0.736,0.732,0.7,0.728,0.748,0.748,0.7,0.7,0.76,0.724,0.724,0.772,0.652,0.732,0.696,0.708,0.756,0.712,0.7,0.752,0.764,0.76,0.752,0.7,0.7,0.696,0.784,0.776,0.3,0.76,0.72,0.768,0.7,0.732,0.736,0.764,0.688,0.7,0.7,0,0.7,0.7,0.76,0.636,0.628,0.692,0.76,0.7,0.752,0.7,0.7,0.688,0.72,0.712,0.752,0.704,0.756,0.748,0.7,0.74,0.768,0.656,0.768,0.768,0.704,0.712,0.764,0.7,0.672,0.76,0,0.696,0.628,0.604,0.78,0.768,0.764,0.736,0.696,0.764,0.72,0.756,0.708,0.7,0.684,0.724,0.7,0.748,0.604,0.76,0.788,0.76,0.744,0.7,0,0.736,0.752,0.708,0.744,0.748,0.792,0.736,0.7,0.768,0.752,0.748,0.712,0.752,0.764,0.76
44115,0.8851195065535852,0.8812644564379337,0.8558211256746338,0.8843484965304549,0.0,0.889745566692367,0.8681572860447185,0.887432536622976,0.889745566692367,0.8504240555127217,0.8905165767154973,0.851195065535852,0.8858905165767155,0.0,0.848882035466461,0.8882035466461063,0.8357748650732459,0.8535080956052429,0.8650732459521974,0.887432536622976,0.8604471858134156,0.8843484965304549,0.8851195065535852,0.8889745566692367,0.5235158057054742,0.848882035466461,0.8203546646106399,0.8704703161141095,0.8858905165767155,0.8905165767154973,0.49961449498843485,0.8350038550501157,0.8882035466461063,0.8889745566692367,0.8835774865073246,0.8627602158828065,0.8789514263685428,0.848882035466461,0.8581341557440246,0,0.8542791056283732,0.8835774865073246,0.8334618350038551,0.889745566692367,0.887432536622976,0.8504240555127217,0.8334618350038551,0.8905165767154973,0.8558211256746338,0.8882035466461063,0.8781804163454124,0.8920585967617579,0.756360832690825,0.7447956823438705,0.5158057054741712,0.8542791056283732,0.8928296067848882,0.843484965304549,0.8527370855821126,0.8442559753276793,0.856592135697764,0.8851195065535852,0.8843484965304549,0.848882035466461,0.8380878951426368,0.8535080956052429,0.8828064764841943,0.8851195065535852,0.5003855050115652,0.8866615265998458,0.8866615265998458,0.889745566692367,0.5034695451040864,0.8720123361603701,0.8596761757902853,0.889745566692367,0.856592135697764,0.5319969159599075,0.848882035466461,0,0.882035466461064,0.0,0.8889745566692367,0.0,0.0,0.49884348496530456,0.8326908249807248,0.8604471858134156,0.8851195065535852,0.8774094063222821,0.49961449498843485,0.8835774865073246,0.887432536622976,0.8882035466461063,0.8689282960678488,0.0,0.8835774865073246,0.8828064764841943,0.7116422513492675,0.8473400154202004,0.8812644564379337,0.7856592135697764,0.8889745566692367,0.851195065535852,0.5003855050115652,0.8681572860447185,0.8889745566692367,0.8334618350038551,0.0,0.8912875867386276,0,0.8889745566692367,0.0,0.525828835774865,0.8882035466461063,0.8843484965304549,0.8851195065535852,0.8843484965304549,0.8781804163454124,0.8828064764841943,0.8650732459521974,0.7702390131071704,0.8234387047031612,0.0,0.8766383962991519,0.8828064764841943,0.0,0.8882035466461063,0.0,0.8851195065535852,0.882035466461064,0.8781804163454124,0.8550501156515035,0.779491133384734,0,0.8535080956052429,0.889745566692367,0.8558211256746338,0.889745566692367,0.887432536622976,0.8712413261372398,0.8905165767154973,0.812644564379337,0.8843484965304549,0.8851195065535852,0.8689282960678488,0.7139552814186585,0.8851195065535852,0.8905165767154973,0.887432536622976
44118,0.8675914249684742,0.7894073139974779,0.8335435056746532,0.8398486759142497,0.0,0.8688524590163934,0.7742749054224464,0.8776796973518285,0.8751576292559899,0.8436317780580076,0.8032786885245902,0.8007566204287516,0.8638083228247163,0.8184110970996217,0.7629255989911727,0.8058007566204287,0.7742749054224464,0.8562421185372006,0.8600252206809584,0.8385876418663304,0.8360655737704918,0.8310214375788146,0.8360655737704918,0.8020176544766708,0.8650693568726355,0.7629255989911727,0.8474148802017655,0.7742749054224464,0.8474148802017655,0.8675914249684742,0.8020176544766708,0.7679697351828499,0.8751576292559899,0.8108448928121059,0.8587641866330391,0.7919293820933165,0.8663303909205549,0.7414880201765448,0.7868852459016393,0,0.776796973518285,0.8663303909205549,0.7931904161412359,0.8209331651954602,0.8575031525851198,0.8385876418663304,0.7931904161412359,0.7906683480453972,0.78562421185372,0.8032786885245902,0.8612862547288777,0.8688524590163934,0.7540983606557377,0.7313997477931904,0.8348045397225725,0.8360655737704918,0.8713745271122321,0.8511979823455234,0.8638083228247163,0.832282471626734,0.807061790668348,0.8284993694829761,0.8284993694829761,0.7629255989911727,0.8272383354350568,0.776796973518285,0.8524590163934426,0.8221941992433796,0.6645649432534678,0.8398486759142497,0.8221941992433796,0.8234552332912989,0.8713745271122321,0.7831021437578815,0.7528373266078184,0.8688524590163934,0.8511979823455234,0.5081967213114754,0.7629255989911727,0,0.8045397225725095,0.0,0.8058007566204287,0.0,0.0,0.8423707440100883,0.7780580075662042,0.8511979823455234,0.8335435056746532,0.8020176544766708,0.49936948297604034,0.8146279949558638,0.8272383354350568,0.8436317780580076,0.862547288776797,0.0,0.8638083228247163,0.8297604035308953,0.725094577553594,0.8385876418663304,0.8511979823455234,0.7604035308953342,0.8638083228247163,0.7641866330390921,0.8587641866330391,0.8247162673392182,0.862547288776797,0.7931904161412359,0.0,0.8511979823455234,0,0.8146279949558638,0.0,0.8171500630517023,0.8675914249684742,0.8612862547288777,0.8474148802017655,0.8423707440100883,0.8511979823455234,0.862547288776797,0.8058007566204287,0.7692307692307693,0.7831021437578815,0.0,0.8335435056746532,0.8133669609079445,0.0,0.8726355611601513,0.0,0.8751576292559899,0.8537200504413619,0.8751576292559899,0.8638083228247163,0.755359394703657,0,0.776796973518285,0.8776796973518285,0.8373266078184111,0.8827238335435057,0.8738965952080706,0.7755359394703657,0.8209331651954602,0.8486759142496847,0.862547288776797,0.8335435056746532,0.8423707440100883,0.7667087011349306,0.8486759142496847,0.8726355611601513,0.8474148802017655
44124,0.8851195065535852,0.8804934464148034,0.8558211256746338,0.8866615265998458,0.0,0.889745566692367,0.8681572860447185,0.8882035466461063,0.8882035466461063,0.8612181958365459,0.8905165767154973,0.851195065535852,0.8835774865073246,0.0,0.848882035466461,0.8882035466461063,0.8357748650732459,0.8535080956052429,0.8650732459521974,0.887432536622976,0.8604471858134156,0.8851195065535852,0.8843484965304549,0.8889745566692367,0.49575944487278334,0.848882035466461,0.8242097147262915,0.8704703161141095,0.8835774865073246,0.8905165767154973,0.49961449498843485,0.8095605242868157,0.8889745566692367,0.8889745566692367,0.8882035466461063,0.8627602158828065,0.882035466461064,0.848882035466461,0.8596761757902853,0,0.8542791056283732,0.887432536622976,0.8334618350038551,0.8882035466461063,0.8866615265998458,0.7895142636854279,0.8334618350038551,0.8905165767154973,0.8519660755589823,0.8905165767154973,0.0,0.8866615265998458,0.756360832690825,0.7447956823438705,0.5065535851966075,0.8542791056283732,0.8912875867386276,0.843484965304549,0.8496530454895914,0.8442559753276793,0.856592135697764,0.8851195065535852,0.8828064764841943,0.848882035466461,0.8018504240555128,0.8535080956052429,0.8804934464148034,0.8866615265998458,0.5003855050115652,0.8835774865073246,0.8912875867386276,0.8928296067848882,0.49036237471087124,0.8720123361603701,0.8612181958365459,0.8905165767154973,0.856592135697764,0.5319969159599075,0.848882035466461,0,0.8835774865073246,0.0,0.8866615265998458,0.0,0.0,0.48033924441017734,0.8326908249807248,0.8604471858134156,0.8843484965304549,0.8804934464148034,0.49961449498843485,0.8835774865073246,0.887432536622976,0.8866615265998458,0.874325366229761,0.0,0.887432536622976,0.8804934464148034,0.7062451811873555,0.8473400154202004,0.882035466461064,0.7972243639167309,0.8912875867386276,0.8519660755589823,0.5065535851966075,0.8681572860447185,0.8905165767154973,0.8334618350038551,0.0,0.8882035466461063,0,0.887432536622976,0.0,0.5080956052428681,0.8828064764841943,0.8851195065535852,0.8866615265998458,0.8843484965304549,0.8781804163454124,0.8843484965304549,0.8643022359290671,0.7702390131071704,0.8188126445643793,0.0,0.8789514263685428,0.8835774865073246,0.0,0.8882035466461063,0.0,0.8851195065535852,0.8812644564379337,0.8843484965304549,0.8550501156515035,0.7825751734772552,0,0.8535080956052429,0.889745566692367,0.8558211256746338,0.8835774865073246,0.882035466461064,0.8712413261372398,0.8905165767154973,0.7478797224363917,0.8828064764841943,0.8912875867386276,0.8589051657671549,0.7139552814186585,0.8858905165767155,0.889745566692367,0.8828064764841943
44127,0.8587641866330391,0.78562421185372,0.8335435056746532,0.8398486759142497,0.0,0.8663303909205549,0.7742749054224464,0.8738965952080706,0.8713745271122321,0.8524590163934426,0.8032786885245902,0.7957124842370744,0.8688524590163934,0.8209331651954602,0.7629255989911727,0.8058007566204287,0.7742749054224464,0.8562421185372006,0.8600252206809584,0.8385876418663304,0.8360655737704918,0.8335435056746532,0.8284993694829761,0.8020176544766708,0.8612862547288777,0.7629255989911727,0.8385876418663304,0.7742749054224464,0.8373266078184111,0.8738965952080706,0.8461538461538461,0.6935687263556116,0.8751576292559899,0.8108448928121059,0.8675914249684742,0.7919293820933165,0.8650693568726355,0.7414880201765448,0.7793190416141236,0,0.776796973518285,0.8688524590163934,0.7931904161412359,0.8020176544766708,0.8600252206809584,0.8511979823455234,0.7931904161412359,0.7906683480453972,0.78562421185372,0.7994955863808323,0.8587641866330391,0.8701134930643127,0.7540983606557377,0.7313997477931904,0.8284993694829761,0.8360655737704918,0.8776796973518285,0.8511979823455234,0.8688524590163934,0.832282471626734,0.807061790668348,0.8310214375788146,0.8423707440100883,0.7629255989911727,0.8474148802017655,0.776796973518285,0.8524590163934426,0.8284993694829761,0.6506935687263556,0.849936948297604,0.8284993694829761,0.8247162673392182,0.8600252206809584,0.7831021437578815,0.7528373266078184,0.862547288776797,0.8511979823455234,0.5081967213114754,0.7629255989911727,0,0.8095838587641866,0.0,0.7843631778058008,0.0,0.0,0.8448928121059268,0.7780580075662042,0.8511979823455234,0.8461538461538461,0.8058007566204287,0.49936948297604034,0.8146279949558638,0.8272383354350568,0.8448928121059268,0.8726355611601513,0.0,0.8587641866330391,0.8335435056746532,0.7503152585119798,0.8385876418663304,0.8537200504413619,0.7540983606557377,0.8675914249684742,0.7604035308953342,0.862547288776797,0.8247162673392182,0.8638083228247163,0.7931904161412359,0.8663303909205549,0.8600252206809584,0,0.8032786885245902,0.0,0.8146279949558638,0.8650693568726355,0.8537200504413619,0.849936948297604,0.8562421185372006,0.8511979823455234,0.8663303909205549,0.8007566204287516,0.7692307692307693,0.7868852459016393,0.0,0.832282471626734,0.8133669609079445,0.0,0.8701134930643127,0.0,0.8600252206809584,0.8511979823455234,0.8764186633039092,0.8638083228247163,0.7503152585119798,0,0.776796973518285,0.8764186633039092,0.8373266078184111,0.8764186633039092,0.8776796973518285,0.7755359394703657,0.8209331651954602,0.8486759142496847,0.8575031525851198,0.8398486759142497,0.849936948297604,0.7667087011349306,0.8461538461538461,0.8688524590163934,0.8562421185372006
44130,0.6093585699263933,0.5757097791798107,0.535751840168244,0.6151419558359621,0.0,0.6130389064143007,0.562565720294427,0.6377497371188223,0.6219768664563617,0.6004206098843323,0.5315457413249212,0.5651945320715037,0.620925341745531,0.0,0.5494216614090431,0.5110410094637224,0.5457413249211357,0.594111461619348,0.5683491062039958,0.6004206098843323,0.5499474237644585,0.594111461619348,0.6182965299684543,0.5236593059936908,0.4810725552050473,0.5494216614090431,0.5630914826498423,0.5499474237644585,0.620925341745531,0.6083070452155626,0.5,0.5525762355415352,0.6466876971608833,0.5247108307045215,0.6098843322818086,0.5688748685594112,0.6035751840168244,0.5325972660357519,0.601472134595163,0,0.535751840168244,0.5983175604626709,0.5404837013669821,0.5325972660357519,0.6093585699263933,0.5657202944269191,0.5404837013669821,0.5257623554153522,0.5431125131440588,0.5304942166140905,0.0,0.61198738170347,0.610410094637224,0.5378548895899053,0.5105152471083071,0.5488958990536278,0.6414300736067298,0.573080967402734,0.5967402733964248,0.5699263932702419,0.546267087276551,0.601472134595163,0.6030494216614091,0.5494216614090431,0.5778128286014721,0.535751840168244,0.5888538380651945,0.5909568874868559,0.5,0.6041009463722398,0.5883280757097792,0.5830704521556257,0.501577287066246,0.5599369085173501,0.5331230283911672,0.5872765509989485,0.57465825446898,0.5021030494216614,0.5494216614090431,0,0.592534174553102,0.0,0.6214511041009464,0.0,0.0,0.5005257623554153,0.5536277602523659,0.556782334384858,0.6098843322818086,0.5830704521556257,0.5,0.583596214511041,0.5620399579390115,0.5909568874868559,0.6041009463722398,0.5210304942166141,0.6498422712933754,0.6156677181913774,0.5304942166140905,0.6009463722397477,0.6072555205047319,0.5168243953732913,0.6529968454258676,0.610410094637224,0.4978969505783386,0.5289169295478444,0.6219768664563617,0.5404837013669821,0.0,0.6377497371188223,0,0.5741324921135647,0.0,0.4921135646687697,0.0,0.5956887486855941,0.594111461619348,0.6083070452155626,0.5467928496319664,0.613564668769716,0.5830704521556257,0.544689800210305,0.5473186119873817,0.0,0.5394321766561514,0.5856992639327024,0.0,0.599894847528917,0.5131440588853838,0.6251314405888538,0.5977917981072555,0.5930599369085173,0.5935856992639327,0.5467928496319664,0,0.535751840168244,0.6198738170347003,0.544689800210305,0.6766561514195584,0.6046267087276551,0.5594111461619348,0.5630914826498423,0.5767613038906414,0.6288117770767613,0.6072555205047319,0.5799158780231335,0.5063091482649842,0.6272344900105152,0.5883280757097792,0.6293375394321766
44153,0.6886792452830188,0.6698113207547169,0.5566037735849056,0.7264150943396226,0.41037735849056606,0.7075471698113207,0.7924528301886793,0.7547169811320755,0.7830188679245284,0.7264150943396226,0.25471698113207547,0.5518867924528302,0.7028301886792453,0.6462264150943396,0.3867924528301887,0.2688679245283019,0.8443396226415094,0.6886792452830188,0.6415094339622641,0.6745283018867925,0.6698113207547169,0.6792452830188679,0.6886792452830188,0.27358490566037735,0.27358490566037735,0.3867924528301887,0.7216981132075472,0.7075471698113207,0.7075471698113207,0.7735849056603774,0.30660377358490565,0.5471698113207547,0.7405660377358491,0.27358490566037735,0.7877358490566038,0.6037735849056604,0.7688679245283019,0.25471698113207547,0.6320754716981132,0,0.25943396226415094,0.7594339622641509,0.3867924528301887,0.24056603773584906,0.6745283018867925,0.2971698113207547,0.37735849056603776,0.25,0.6745283018867925,0.0,0.7075471698113207,0.7830188679245284,0.5613207547169812,0.5801886792452831,0.2641509433962264,0.6698113207547169,0.75,0.7169811320754716,0.6320754716981132,0.6556603773584906,0.7358490566037735,0.6886792452830188,0.6792452830188679,0.3867924528301887,0.6462264150943396,0.25943396226415094,0.7547169811320755,0.6745283018867925,0.25,0.6886792452830188,0.6839622641509434,0.6886792452830188,0.2358490566037736,0.6462264150943396,0.25943396226415094,0.7971698113207547,0.6415094339622641,0.25943396226415094,0.3867924528301887,0,0.6132075471698113,0.3867924528301887,0.6981132075471698,0.24056603773584906,0.41037735849056606,0.25943396226415094,0.6556603773584906,0.5943396226415094,0.6839622641509434,0.25,0.25943396226415094,0.6320754716981132,0.7122641509433962,0.75,0.8160377358490566,0.3867924528301887,0.75,0.7641509433962265,0.5094339622641509,0.660377358490566,0.7783018867924528,0.6556603773584906,0.7311320754716981,0.5943396226415094,0.25,0.5849056603773585,0.7075471698113207,0.3867924528301887,0.27358490566037735,0.7547169811320755,0,0.7830188679245284,0.41037735849056606,0.2830188679245283,0.7122641509433962,0.7735849056603774,0.7971698113207547,0.6886792452830188,0.6415094339622641,0.6745283018867925,0.6320754716981132,0.4386792452830189,0.5377358490566038,0.25943396226415094,0.7075471698113207,0.6886792452830188,0.3867924528301887,0.7028301886792453,0.2169811320754717,0.7735849056603774,0.75,0.6886792452830188,0.7594339622641509,0.5424528301886793,0,0.25943396226415094,0.7688679245283019,0.5801886792452831,0.7594339622641509,0.7311320754716981,0.7028301886792453,0.6320754716981132,0.7264150943396226,0.6981132075471698,0.7075471698113207,0.7216981132075472,0.41509433962264153,0.7452830188679245,0.7452830188679245,0.6981132075471698
44155,0.861271676300578,0.8554913294797688,0.6473988439306358,0.8901734104046243,0.6242774566473989,0.8728323699421965,0.861271676300578,0.8901734104046243,0.8959537572254336,0.861271676300578,0.7572254335260116,0.7861271676300579,0.9132947976878613,0.8554913294797688,0.8554913294797688,0.7687861271676301,0.8786127167630058,0.6994219653179191,0.6936416184971098,0.8554913294797688,0.6820809248554913,0.8728323699421965,0.8554913294797688,0.7341040462427746,0.5491329479768786,0.8554913294797688,0.791907514450867,0.8092485549132948,0.8670520231213873,0.5549132947976878,0.5549132947976878,0.8497109826589595,0.8959537572254336,0.7687861271676301,0.8728323699421965,0.815028901734104,0.8554913294797688,0.7456647398843931,0.8728323699421965,0,0.7341040462427746,0.8439306358381503,0.7456647398843931,0.8034682080924855,0.8786127167630058,0.838150289017341,0.7456647398843931,0.5549132947976878,0.7745664739884393,0.7572254335260116,0.8728323699421965,0.8786127167630058,0.630057803468208,0.8497109826589595,0.5260115606936416,0.653179190751445,0.9017341040462428,0.8670520231213873,0.8554913294797688,0.8670520231213873,0.8497109826589595,0.8554913294797688,0.8554913294797688,0.8554913294797688,0.8439306358381503,0.6878612716763006,0.838150289017341,0.8728323699421965,0.5549132947976878,0.8554913294797688,0.8728323699421965,0.8265895953757225,0.5549132947976878,0.7976878612716763,0.7283236994219653,0.8959537572254336,0.6416184971098265,0.6242774566473989,0.8554913294797688,0,0.8901734104046243,0.6589595375722543,0.8728323699421965,0.5028901734104047,0.630057803468208,0.5317919075144508,0.8670520231213873,0.6589595375722543,0.861271676300578,0.5549132947976878,0.5549132947976878,0.8670520231213873,0.8092485549132948,0.838150289017341,0.8439306358381503,0.630057803468208,0.8901734104046243,0.8439306358381503,0.5549132947976878,0.8439306358381503,0.8959537572254336,0.7341040462427746,0.9017341040462428,0.8670520231213873,0.5664739884393064,0.884393063583815,0.8670520231213873,0.7456647398843931,0.5433526011560693,0.8959537572254336,0,0.815028901734104,0.630057803468208,0.5317919075144508,0.8959537572254336,0.8728323699421965,0.8901734104046243,0.9075144508670521,0.7283236994219653,0.8554913294797688,0.8728323699421965,0.8786127167630058,0.5549132947976878,0.5549132947976878,0.7976878612716763,0.838150289017341,0.5549132947976878,0.9132947976878613,0.6184971098265896,0.8670520231213873,0.9075144508670521,0.8901734104046243,0.8670520231213873,0.6473988439306358,0,0.7167630057803468,0.8497109826589595,0.6647398843930635,0.8901734104046243,0.9132947976878613,0.8092485549132948,0.815028901734104,0.5549132947976878,0.8728323699421965,0.861271676300578,0.8554913294797688,0.7167630057803468,0.8901734104046243,0.8786127167630058,0.8901734104046243
44157,0.599894847528917,0.5578338590956887,0.535751840168244,0.6167192429022083,0.0,0.620925341745531,0.5599369085173501,0.6377497371188223,0.6093585699263933,0.5962145110410094,0.5278654048370137,0.5751840168243953,0.6219768664563617,0.0,0.5494216614090431,0.5110410094637224,0.5541535226077813,0.5930599369085173,0.5683491062039958,0.6062039957939012,0.5483701366982124,0.592534174553102,0.6025236593059937,0.5236593059936908,0.49842271293375395,0.5494216614090431,0.5667718191377498,0.5478443743427971,0.6230283911671924,0.6172450052576236,0.5,0.5972660357518401,0.6692954784437434,0.5247108307045215,0.6256572029442692,0.5667718191377498,0.6188222923238696,0.5262881177707676,0.5851735015772871,0,0.535751840168244,0.6198738170347003,0.5415352260778128,0.5278654048370137,0.6161934805467929,0.5888538380651945,0.5415352260778128,0.5236593059936908,0.5599369085173501,0.5304942166140905,0.0,0.6019978969505784,0.6172450052576236,0.5620399579390115,0.5031545741324921,0.5488958990536278,0.6572029442691903,0.5825446898002103,0.5914826498422713,0.5536277602523659,0.5841219768664564,0.5983175604626709,0.6004206098843323,0.5494216614090431,0.5615141955835962,0.535751840168244,0.6235541535226078,0.5878023133543638,0.5,0.6077812828601472,0.5872765509989485,0.5725552050473186,0.49158780231335436,0.5630914826498423,0.5347003154574133,0.5993690851735016,0.57465825446898,0.5026288117770767,0.5494216614090431,0,0.576235541535226,0.0,0.613564668769716,0.0,0.0,0.5115667718191378,0.5636172450052577,0.556782334384858,0.6093585699263933,0.582018927444795,0.5,0.5809674027339643,0.5657202944269191,0.5909568874868559,0.610410094637224,0.5262881177707676,0.6440588853838065,0.6230283911671924,0.5368033648790747,0.5651945320715037,0.6161934805467929,0.535751840168244,0.6514195583596214,0.5814931650893796,0.5115667718191378,0.5294426919032598,0.6277602523659306,0.5415352260778128,0.0,0.6419558359621451,0,0.5867507886435331,0.0,0.4900105152471083,0.0,0.6072555205047319,0.6046267087276551,0.5962145110410094,0.6345951629863302,0.6230283911671924,0.580441640378549,0.5531019978969506,0.538906414300736,0.0,0.5683491062039958,0.5841219768664564,0.0,0.6125131440588854,0.5131440588853838,0.6167192429022083,0.6067297581493165,0.6098843322818086,0.6041009463722398,0.5531019978969506,0,0.535751840168244,0.6083070452155626,0.544689800210305,0.6771819137749737,0.6251314405888538,0.5415352260778128,0.5609884332281808,0.57465825446898,0.6161934805467929,0.6077812828601472,0.599894847528917,0.5063091482649842,0.6309148264984227,0.5872765509989485,0.6366982124079916
44158,0.8108108108108109,0.7845786963434023,0.6303656597774245,0.8108108108108109,0.0,0.8243243243243243,0.6351351351351351,0.814785373608903,0.8187599364069952,0.7790143084260731,0.6430842607313195,0.7813990461049285,0.8243243243243243,0.0,0.8100158982511924,0.5937996820349761,0.7583465818759937,0.5850556438791733,0.6303656597774245,0.8124006359300477,0.6232114467408585,0.7965023847376789,0.8195548489666137,0.6128775834658188,0.48569157392686807,0.8100158982511924,0.5802861685214626,0.6065182829888712,0.8306836248012719,0.0,0.5,0.7146263910969793,0.0,0.6033386327503975,0.7893481717011129,0.7615262321144675,0.800476947535771,0.6311605723370429,0.8203497615262321,0,0.6160572337042926,0.8020667726550079,0.7639109697933227,0.6351351351351351,0.8139904610492846,0.7702702702702703,0.7639109697933227,0.6430842607313195,0.7130365659777425,0.6414944356120826,0.0,0.8068362480127186,0.5620031796502385,0.6454689984101749,0.49920508744038156,0.5922098569157392,0.8203497615262321,0.7066772655007949,0.6796502384737679,0.6939586645468998,0.7639109697933227,0.8116057233704292,0.8211446740858506,0.8100158982511924,0.760731319554849,0.6112877583465819,0.0,0.8124006359300477,0.5,0.8251192368839427,0.8100158982511924,0.6915739268680445,0.4872813990461049,0.6629570747217806,0.6462639109697933,0.809220985691574,0.6192368839427663,0.49920508744038156,0.8100158982511924,0,0.814785373608903,0.0,0.8020667726550079,0.0,0.0,0.5015898251192369,0.7615262321144675,0.6335453100158982,0.8187599364069952,0.8116057233704292,0.5,0.7941176470588235,0.6891891891891891,0.8108108108108109,0.7774244833068362,0.0,0.8267090620031796,0.7853736089030207,0.6216216216216216,0.7146263910969793,0.8100158982511924,0.6287758346581876,0.8259141494435612,0.8044515103338633,0.4944356120826709,0.5993640699523053,0.8076311605723371,0.7639109697933227,0.0,0.8116057233704292,0,0.809220985691574,0.0,0.5047694753577107,0.0,0.7933227344992051,0.8267090620031796,0.8203497615262321,0.5850556438791733,0.7980922098569158,0.7710651828298887,0.6732909379968204,0.6391096979332274,0.0,0.7885532591414944,0.7694753577106518,0.0,0.8139904610492846,0.0,0.8020667726550079,0.7845786963434023,0.8163751987281399,0.7106518282988871,0.589825119236884,0,0.6112877583465819,0.7639109697933227,0.624006359300477,0.814785373608903,0.8227344992050875,0.6136724960254372,0.7933227344992051,0.6128775834658188,0.8259141494435612,0.8052464228934817,0.7813990461049285,0.6351351351351351,0.8163751987281399,0.8068362480127186,0.0
44160,0.7465808527755431,0.7248592115848753,0.6194690265486725,0.6822204344328238,0.5728077232502011,0.7417538213998391,0.6162510056315366,0.7152051488334674,0.7224456958970233,0.6556717618664522,0.5140788415124699,0.5937248592115849,0.7103781174577635,0.0,0.6146419951729686,0.5205148833467418,0.6138374899436846,0.6419951729686243,0.6355591311343524,0.6902654867256637,0.6556717618664522,0.6323411102172164,0.6999195494770716,0.5132743362831859,0.5197103781174578,0.6146419951729686,0.6307320997586484,0.6242960579243765,0.7240547063555913,0.7369267900241352,0.5148833467417538,0.6202735317779565,0.8020917135961384,0.5164923572003218,0.7329042638777152,0.6114239742558326,0.7658889782783588,0.5092518101367659,0.667739340305712,0,0.5092518101367659,0.6854384553499597,0.5929203539823009,0.5172968624296058,0.7522123893805309,0.7272727272727273,0.5929203539823009,0.5172968624296058,0.6202735317779565,0.5092518101367659,0.7900241351568785,0.7127916331456154,0.5374094931617055,0.5720032180209171,0.5172968624296058,0.6323411102172164,0.7546259050683829,0.6275140788415124,0.6572807723250201,0.6226870474658085,0.6854384553499597,0.6830249396621078,0.6999195494770716,0.6146419951729686,0.5993563958165729,0.5100563153660499,0.7240547063555913,0.7497988736926791,0.500402252614642,0.7176186645213194,0.6629123089300081,0.6379726468222043,0.49316170555108607,0.6323411102172164,0.5124698310539019,0.6934835076427996,0.6267095736122285,0.5615446500402252,0.6146419951729686,0,0.6411906677393403,0.5913113435237329,0.7192276749798874,0.0,0.5736122284794851,0.5084473049074819,0.6114239742558326,0.6267095736122285,0.7071600965406275,0.6436041834271923,0.499597747385358,0.7127916331456154,0.670152855993564,0.6918744971842317,0.6540627514078842,0.5711987127916331,0.7256637168141593,0.7224456958970233,0.585679806918745,0.6540627514078842,0.7489943684633951,0.580852775543041,0.7377312952534192,0.66934835076428,0.501206757843926,0.6540627514078842,0.7779565567176187,0.5929203539823009,0.0,0.7232502011263073,0,0.6958970233306516,0.5736122284794851,0.502815768302494,0.7771520514883347,0.7127916331456154,0.6934835076427996,0.6854384553499597,0.6259050683829445,0.7755430410297667,0.6379726468222043,0.5953338696701529,0.5953338696701529,0.499597747385358,0.6580852775543041,0.7224456958970233,0.583266291230893,0.7023330651649236,0.588093322606597,0.7755430410297667,0.7288817377312953,0.7361222847948512,0.66532582461786,0.5607401448109413,0,0.5100563153660499,0.7144006436041834,0.6138374899436846,0.7811745776347546,0.6958970233306516,0.6194690265486725,0.6967015285599356,0.674979887369268,0.7296862429605793,0.6798069187449718,0.6765888978278359,0.5768302493966211,0.7288817377312953,0.7216411906677394,0.7642799678197908
44185,0.8203497615262321,0.7821939586645469,0.6303656597774245,0.8171701112877583,0.0,0.8259141494435612,0.6351351351351351,0.821939586645469,0.8179650238473768,0.7718600953895072,0.6399046104928457,0.7774244833068362,0.8155802861685215,0.0,0.8100158982511924,0.5937996820349761,0.7583465818759937,0.5850556438791733,0.6303656597774245,0.8124006359300477,0.6232114467408585,0.7917329093799682,0.8195548489666137,0.6128775834658188,0.5095389507154213,0.8100158982511924,0.5675675675675675,0.6065182829888712,0.8267090620031796,0.0,0.5,0.685214626391097,0.0,0.6033386327503975,0.787758346581876,0.7615262321144675,0.8084260731319555,0.6311605723370429,0.8235294117647058,0,0.6160572337042926,0.8052464228934817,0.7639109697933227,0.6065182829888712,0.8203497615262321,0.7988871224165341,0.7639109697933227,0.6399046104928457,0.7082670906200318,0.6414944356120826,0.0,0.7980922098569158,0.5620031796502385,0.6454689984101749,0.5095389507154213,0.5922098569157392,0.8187599364069952,0.7042925278219396,0.699523052464229,0.6939586645468998,0.7575516693163752,0.8179650238473768,0.814785373608903,0.8100158982511924,0.760731319554849,0.6112877583465819,0.0,0.814785373608903,0.5,0.8243243243243243,0.8100158982511924,0.6820349761526232,0.4825119236883943,0.6629570747217806,0.6518282988871225,0.8060413354531002,0.6192368839427663,0.49920508744038156,0.8100158982511924,0,0.8282988871224165,0.0,0.8116057233704292,0.0,0.0,0.5039745627980922,0.7615262321144675,0.6335453100158982,0.814785373608903,0.8298887122416534,0.5,0.7941176470588235,0.690779014308426,0.8100158982511924,0.7742448330683624,0.0,0.8227344992050875,0.787758346581876,0.6248012718600954,0.7146263910969793,0.7957074721780604,0.6224165341812401,0.8203497615262321,0.8068362480127186,0.5310015898251192,0.5993640699523053,0.8131955484896661,0.7639109697933227,0.0,0.8163751987281399,0,0.8139904610492846,0.0,0.49205087440381556,0.0,0.787758346581876,0.8259141494435612,0.8306836248012719,0.5850556438791733,0.8044515103338633,0.7837837837837838,0.6732909379968204,0.6422893481717011,0.0,0.7861685214626392,0.7686804451510334,0.0,0.8275039745627981,0.0,0.7933227344992051,0.7853736089030207,0.8171701112877583,0.7106518282988871,0.5969793322734499,0,0.6112877583465819,0.766295707472178,0.624006359300477,0.8227344992050875,0.8259141494435612,0.6136724960254372,0.794912559618442,0.5850556438791733,0.8275039745627981,0.8052464228934817,0.7241653418124007,0.6351351351351351,0.8211446740858506,0.8203497615262321,0.0
44186,0.8003120124804992,0.7636505460218409,0.608424336973479,0.7753510140405616,0.0,0.8042121684867395,0.625585023400936,0.7940717628705148,0.7948517940717629,0.7371294851794071,0.6708268330733229,0.7363494539781591,0.7979719188767551,0.0,0.7987519500780031,0.6006240249609984,0.749609984399376,0.5858034321372855,0.609204368174727,0.7831513260530422,0.5951638065522621,0.781591263650546,0.7925117004680188,0.6318252730109204,0.5054602184087363,0.7987519500780031,0.5647425897035881,0.5795631825273011,0.7862714508580343,0.0,0.5,0.7410296411856474,0.0,0.6177847113884556,0.7683307332293292,0.7566302652106084,0.7769110764430577,0.6552262090483619,0.781591263650546,0,0.6146645865834633,0.7995319812792512,0.7535101404056163,0.6497659906396256,0.7964118564742589,0.7558502340093604,0.7597503900156006,0.656786271450858,0.702808112324493,0.6739469578783152,0.0,0.7784711388455539,0.5842433697347894,0.6131045241809673,0.4960998439937597,0.5873634945397815,0.7886115444617785,0.6957878315132605,0.624804992199688,0.6708268330733229,0.7589703588143526,0.7878315132605305,0.7909516380655226,0.7987519500780031,0.7379095163806553,0.6146645865834633,0.0,0.7956318252730109,0.49765990639625585,0.7893915756630265,0.7987519500780031,0.6879875195007801,0.5023400936037441,0.6762870514820593,0.6645865834633385,0.7909516380655226,0.6060842433697348,0.5,0.7987519500780031,0,0.8065522620904836,0.0,0.782371294851794,0.0,0.0,0.5023400936037441,0.7425897035881436,0.6006240249609984,0.7839313572542902,0.7995319812792512,0.5,0.782371294851794,0.6856474258970359,0.7979719188767551,0.7706708268330733,0.0,0.7847113884555382,0.7761310452418096,0.5967238689547582,0.6887675507020281,0.7893915756630265,0.6045241809672387,0.7909516380655226,0.7847113884555382,0.5039001560062403,0.578003120124805,0.7956318252730109,0.7535101404056163,0.0,0.7862714508580343,0,0.7964118564742589,0.0,0.5078003120124805,0.0,0.7737909516380655,0.7995319812792512,0.797191887675507,0.5709828393135725,0.7862714508580343,0.751170046801872,0.6333853354134166,0.6138845553822153,0.0,0.7605304212168487,0.7901716068642746,0.0,0.7995319812792512,0.0,0.7948517940717629,0.782371294851794,0.7948517940717629,0.6981279251170047,0.5904836193447738,0,0.6146645865834633,0.7402496099843994,0.6045241809672387,0.797191887675507,0.7870514820592823,0.578003120124805,0.8003120124804992,0.5897035881435257,0.7948517940717629,0.7761310452418096,0.7246489859594384,0.5967238689547582,0.7847113884555382,0.782371294851794,0.0
44227,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
44232,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
44257,0.9955555555555555,0.9955555555555555,0.96,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9911111111111112,1.0,1.0,0.9022222222222223,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9822222222222222,0.9688888888888889,0.9911111111111112,0.96,0.9955555555555555,0.9733333333333334,0.8888888888888888,0.6666666666666666,0.9955555555555555,0.5733333333333334,1.0,0.9911111111111112,0.9911111111111112,0.8311111111111111,0.8622222222222222,0.9911111111111112,0.8666666666666667,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9911111111111112,0,0.9422222222222222,1.0,0.9911111111111112,1.0,0.9955555555555555,0.9955555555555555,0.9911111111111112,0.9955555555555555,0.8088888888888889,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.8355555555555556,0.5466666666666666,0.9733333333333334,1.0,0.8666666666666667,0.8,0.8044444444444444,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9155555555555556,0.9777777777777777,0.9911111111111112,0.9955555555555555,0.5422222222222223,0.9911111111111112,0.9955555555555555,1.0,0.7111111111111111,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9777777777777777,0.9288888888888889,0.9955555555555555,0,0.9911111111111112,0.96,0.9955555555555555,0.7377777777777778,0.9911111111111112,0.6444444444444445,0.8666666666666667,0.9688888888888889,0.9911111111111112,0.9911111111111112,0.5422222222222223,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9466666666666667,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.8177777777777778,0.8,1.0,0.7955555555555556,1.0,0.9955555555555555,0.68,1.0,0.9955555555555555,0.9911111111111112,0.64,0.9955555555555555,0,0.9911111111111112,0.9911111111111112,0.5688888888888889,0.9955555555555555,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9422222222222222,0.8577777777777778,0.9911111111111112,0.5422222222222223,1.0,1.0,0.9111111111111111,0.9955555555555555,0.0,1.0,0.9911111111111112,1.0,0.8622222222222222,0.9955555555555555,0,0.9733333333333334,1.0,0.96,1.0,0.9955555555555555,0.9911111111111112,1.0,0.5422222222222223,0.9911111111111112,0.9777777777777777,0.9333333333333333,0.9955555555555555,0.9955555555555555,1.0,0.9911111111111112
44258,0.9955555555555555,0.9955555555555555,0.96,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9866666666666667,1.0,1.0,0.9022222222222223,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9822222222222222,0.9688888888888889,0.9911111111111112,0.96,0.9955555555555555,0.9911111111111112,0.8888888888888888,0.6755555555555556,0.9955555555555555,0.6622222222222223,1.0,0.9866666666666667,0.9911111111111112,0.5422222222222223,0.9111111111111111,0.9911111111111112,0.8666666666666667,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9911111111111112,0,0.9422222222222222,1.0,0.9911111111111112,1.0,0.9955555555555555,0.9955555555555555,0.9911111111111112,0.9955555555555555,0.8,0.9955555555555555,0.9955555555555555,1.0,0.9955555555555555,0.8355555555555556,0.6355555555555555,0.9733333333333334,1.0,0.8844444444444445,0.7688888888888888,0.8044444444444444,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9066666666666666,0.9777777777777777,0.9911111111111112,0.9955555555555555,0.5422222222222223,0.9911111111111112,0.9955555555555555,1.0,0.7377777777777778,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9777777777777777,0.9288888888888889,0.9955555555555555,0,0.9866666666666667,0.9777777777777777,0.9955555555555555,0.7111111111111111,0.9911111111111112,0.8133333333333334,0.8666666666666667,0.9688888888888889,0.9911111111111112,0.9688888888888889,0.5422222222222223,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9288888888888889,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.9155555555555556,0.8,1.0,0.8088888888888889,0.9955555555555555,0.9955555555555555,0.6222222222222222,1.0,0.9955555555555555,0.9911111111111112,0.68,0.9911111111111112,0,0.9911111111111112,0.9911111111111112,0.6177777777777778,0.9955555555555555,0.9911111111111112,1.0,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9422222222222222,0.8577777777777778,0.9866666666666667,0.5422222222222223,1.0,1.0,0.9777777777777777,0.9955555555555555,0.0,1.0,0.9911111111111112,1.0,0.8622222222222222,0.9955555555555555,0,0.9733333333333334,1.0,0.96,1.0,0.9955555555555555,0.9911111111111112,1.0,0.5422222222222223,0.9911111111111112,0.9866666666666667,0.9511111111111111,0.9955555555555555,0.9911111111111112,1.0,0.9911111111111112
44259,0.9955555555555555,0.9955555555555555,0.96,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9911111111111112,1.0,1.0,0.8666666666666667,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9822222222222222,0.9688888888888889,0.9911111111111112,0.96,0.9955555555555555,0.9822222222222222,0.8888888888888888,0.6977777777777778,0.9955555555555555,0.6533333333333333,1.0,0.9911111111111112,0.9911111111111112,0.6711111111111111,0.9111111111111111,0.9911111111111112,0.8666666666666667,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9866666666666667,0,0.9422222222222222,1.0,0.9911111111111112,1.0,0.9955555555555555,0.9955555555555555,0.9911111111111112,0.9955555555555555,0.8088888888888889,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.8355555555555556,0.5911111111111111,0.9733333333333334,1.0,0.8755555555555555,0.8444444444444444,0.8044444444444444,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9333333333333333,0.9777777777777777,0.9911111111111112,0.9955555555555555,0.5422222222222223,0.9911111111111112,0.9955555555555555,1.0,0.7911111111111111,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9777777777777777,0.9288888888888889,0.9955555555555555,0,0.9911111111111112,0.9866666666666667,0.9911111111111112,0.6933333333333334,0.9911111111111112,0.7466666666666667,0.8666666666666667,0.9688888888888889,0.9911111111111112,0.9688888888888889,0.5422222222222223,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9333333333333333,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.8311111111111111,0.8,1.0,0.7866666666666666,0.9955555555555555,0.9955555555555555,0.6311111111111111,1.0,0.9955555555555555,0.9911111111111112,0.7155555555555555,0.9955555555555555,0,0.9911111111111112,0.9911111111111112,0.6,0.9955555555555555,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9155555555555556,0.8577777777777778,0.9911111111111112,0.5422222222222223,1.0,1.0,0.9511111111111111,1.0,0.0,1.0,0.9911111111111112,1.0,0.8622222222222222,0.9955555555555555,0,0.9733333333333334,1.0,0.96,1.0,0.9955555555555555,0.9911111111111112,1.0,0.5422222222222223,0.9911111111111112,0.9911111111111112,0.8711111111111111,0.9955555555555555,0.9955555555555555,1.0,0.9911111111111112
44260,0.9955555555555555,0.9955555555555555,0.96,0.9866666666666667,0.9911111111111112,0.9955555555555555,0.9866666666666667,1.0,1.0,0.9111111111111111,0.9955555555555555,0.7777777777777778,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9822222222222222,0.9688888888888889,0.9866666666666667,0.96,0.9911111111111112,0.9911111111111112,0.8888888888888888,0.68,0.9955555555555555,0.6577777777777778,1.0,0.9911111111111112,0.9911111111111112,0.5911111111111111,0.9022222222222223,0.9911111111111112,0.8666666666666667,0.9911111111111112,0.9911111111111112,1.0,0.9955555555555555,0.9911111111111112,0,0.9422222222222222,1.0,0.9911111111111112,1.0,0.9955555555555555,0.6222222222222222,0.9911111111111112,0.9955555555555555,0.8044444444444444,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.8355555555555556,0.5288888888888889,0.9733333333333334,1.0,0.8844444444444445,0.8177777777777778,0.8044444444444444,0.9911111111111112,0.9733333333333334,0.9911111111111112,0.9955555555555555,0.9377777777777778,0.9777777777777777,0.9911111111111112,0.9955555555555555,0.5422222222222223,0.9866666666666667,0.9955555555555555,1.0,0.7422222222222222,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9777777777777777,0.9288888888888889,0.9955555555555555,0,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.7422222222222222,0.9911111111111112,0.7111111111111111,0.8666666666666667,0.9688888888888889,0.9911111111111112,0.9688888888888889,0.5422222222222223,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9422222222222222,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.9244444444444444,0.8,1.0,0.8177777777777778,0.9955555555555555,0.9955555555555555,0.5822222222222222,1.0,0.9955555555555555,0.9911111111111112,0.72,0.9955555555555555,0,0.9911111111111112,0.9911111111111112,0.5911111111111111,0.9955555555555555,0.9911111111111112,1.0,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.8933333333333333,0.8577777777777778,0.9866666666666667,0.5422222222222223,1.0,1.0,0.96,1.0,0.0,1.0,0.9911111111111112,1.0,0.8622222222222222,0.9955555555555555,0,0.9733333333333334,1.0,0.96,1.0,1.0,0.9911111111111112,1.0,0.5422222222222223,0.9911111111111112,0.9911111111111112,0.8977777777777778,0.9955555555555555,0.9911111111111112,1.0,0.9911111111111112
44261,0.9955555555555555,0.9955555555555555,0.96,0.9866666666666667,0.9911111111111112,0.9955555555555555,0.9911111111111112,1.0,1.0,0.8977777777777778,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9822222222222222,0.9688888888888889,0.9777777777777777,0.96,0.9955555555555555,0.9866666666666667,0.8888888888888888,0.7066666666666667,0.9955555555555555,0.6088888888888889,1.0,0.9911111111111112,0.9955555555555555,0.6577777777777778,0.8888888888888888,0.9911111111111112,0.8666666666666667,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9911111111111112,0,0.9422222222222222,1.0,0.9911111111111112,1.0,0.9955555555555555,0.9111111111111111,0.9911111111111112,0.9955555555555555,0.8088888888888889,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.8355555555555556,0.6088888888888889,0.9733333333333334,1.0,0.88,0.7911111111111111,0.8044444444444444,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9244444444444444,0.9777777777777777,0.9911111111111112,0.9955555555555555,0.5422222222222223,0.9911111111111112,0.9955555555555555,1.0,0.7422222222222222,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9777777777777777,0.9288888888888889,0.9955555555555555,0,0.9911111111111112,0.9777777777777777,0.9955555555555555,0.76,0.9911111111111112,0.7422222222222222,0.8666666666666667,0.9688888888888889,0.9911111111111112,0.9822222222222222,0.5422222222222223,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9422222222222222,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.8311111111111111,0.8,1.0,0.8,1.0,0.9955555555555555,0.6488888888888888,1.0,0.9955555555555555,0.9911111111111112,0.6755555555555556,0.9955555555555555,0,0.9911111111111112,0.9911111111111112,0.5955555555555555,0.9955555555555555,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9022222222222223,0.8577777777777778,0.9911111111111112,0.5422222222222223,1.0,1.0,0.9422222222222222,1.0,0.0,1.0,0.9911111111111112,1.0,0.8622222222222222,0.9955555555555555,0,0.9733333333333334,1.0,0.96,1.0,0.9955555555555555,0.9911111111111112,1.0,0.5422222222222223,0.9911111111111112,0.9911111111111112,0.9422222222222222,0.9955555555555555,0.9955555555555555,1.0,0.9911111111111112
