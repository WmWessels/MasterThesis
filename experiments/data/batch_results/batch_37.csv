0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
44609,0.8958904109589041,0.8931506849315068,0.8767123287671232,0.8931506849315068,0.8164383561643835,0.9068493150684932,0.7863013698630137,0.9068493150684932,0.8986301369863013,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8904109589041096,0.9205479452054794,0.8767123287671232,0.8849315068493151,0.9041095890410958,0.873972602739726,0.8794520547945206,0.8794520547945206,0.8767123287671232,0.8849315068493151,0.8876712328767123,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.873972602739726,0.8958904109589041,0.8767123287671232,0.8767123287671232,0.8849315068493151,0.9068493150684932,0.8767123287671232,0.9013698630136986,0.8876712328767123,0.8986301369863013,0.8767123287671232,0.8876712328767123,0,0.7452054794520548,0.8931506849315068,0.8767123287671232,0.8794520547945206,0.8904109589041096,0.3835616438356164,0.8767123287671232,0.8767123287671232,0.8958904109589041,0.8767123287671232,0.9095890410958904,0.8986301369863013,0.8684931506849315,0.8794520547945206,0.8767123287671232,0.8767123287671232,0.8958904109589041,0.8821917808219178,0.8794520547945206,0.8794520547945206,0.8657534246575342,0.8849315068493151,0.8904109589041096,0.8767123287671232,0.9013698630136986,0.7479452054794521,0.8904109589041096,0.8986301369863013,0.8767123287671232,0.8876712328767123,0.8931506849315068,0.8904109589041096,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8931506849315068,0.8794520547945206,0.8767123287671232,0.8767123287671232,0,0.8767123287671232,0.8767123287671232,0.8958904109589041,0.8684931506849315,0.810958904109589,0.8767123287671232,0.8876712328767123,0.8712328767123287,0.8931506849315068,0.8767123287671232,0.8767123287671232,0.8821917808219178,0.8657534246575342,0.8904109589041096,0.9013698630136986,0.8136986301369863,0.8958904109589041,0.8931506849315068,0.8767123287671232,0.8794520547945206,0.9068493150684932,0.810958904109589,0.8876712328767123,0.8849315068493151,0.8767123287671232,0.8794520547945206,0.8986301369863013,0.8767123287671232,0.8684931506849315,0.8931506849315068,0,0.9041095890410958,0.810958904109589,0.8657534246575342,0.8931506849315068,0.8931506849315068,0.9013698630136986,0.8904109589041096,0.8794520547945206,0.9013698630136986,0.8767123287671232,0.7452054794520548,0.8767123287671232,0.8767123287671232,0.9013698630136986,0.8904109589041096,0.8767123287671232,0.8849315068493151,0.8602739726027397,0.9123287671232877,0.8931506849315068,0.915068493150685,0.8904109589041096,0.8712328767123287,0.0,0.7808219178082192,0.8904109589041096,0.8767123287671232,0.9123287671232877,0.8931506849315068,0.8767123287671232,0.8794520547945206,0.8767123287671232,0.8958904109589041,0.8849315068493151,0.9013698630136986,0.8465753424657534,0.8931506849315068,0.8986301369863013,0.8904109589041096
44610,0.8958904109589041,0.8931506849315068,0.8767123287671232,0.8931506849315068,0.8164383561643835,0.9013698630136986,0.7726027397260274,0.9013698630136986,0.9041095890410958,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8849315068493151,0.9205479452054794,0.8767123287671232,0.8849315068493151,0.9041095890410958,0.873972602739726,0.8794520547945206,0.8849315068493151,0.8767123287671232,0.8876712328767123,0.8876712328767123,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.873972602739726,0.8904109589041096,0.8767123287671232,0.8767123287671232,0.8958904109589041,0.9095890410958904,0.8767123287671232,0.8986301369863013,0.8876712328767123,0.8986301369863013,0.8767123287671232,0.8876712328767123,0,0.7452054794520548,0.9068493150684932,0.8767123287671232,0.8794520547945206,0.8986301369863013,0.7890410958904109,0.8767123287671232,0.8767123287671232,0.8986301369863013,0.8767123287671232,0.9013698630136986,0.8876712328767123,0.8684931506849315,0.8794520547945206,0.8767123287671232,0.8767123287671232,0.8958904109589041,0.8821917808219178,0.8821917808219178,0.8794520547945206,0.8657534246575342,0.8849315068493151,0.8849315068493151,0.8767123287671232,0.8958904109589041,0.7479452054794521,0.8876712328767123,0.8986301369863013,0.8767123287671232,0.8931506849315068,0.8958904109589041,0.8904109589041096,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8958904109589041,0.8794520547945206,0.8767123287671232,0.8767123287671232,0,0.8767123287671232,0.8767123287671232,0.8958904109589041,0.8493150684931506,0.810958904109589,0.8767123287671232,0.8876712328767123,0.8712328767123287,0.8904109589041096,0.8767123287671232,0.8767123287671232,0.8821917808219178,0.8657534246575342,0.8958904109589041,0.9013698630136986,0.8136986301369863,0.9013698630136986,0.8849315068493151,0.8767123287671232,0.8794520547945206,0.9068493150684932,0.8849315068493151,0.8958904109589041,0.8849315068493151,0.8767123287671232,0.8794520547945206,0.9041095890410958,0.8767123287671232,0.8821917808219178,0.9013698630136986,0,0.9068493150684932,0.810958904109589,0.863013698630137,0.8931506849315068,0.8904109589041096,0.8849315068493151,0.8876712328767123,0.8794520547945206,0.9041095890410958,0.8767123287671232,0.7452054794520548,0.8767123287671232,0.8767123287671232,0.8904109589041096,0.8904109589041096,0.8767123287671232,0.8904109589041096,0.8602739726027397,0.9041095890410958,0.8931506849315068,0.915068493150685,0.8904109589041096,0.8712328767123287,0.0,0.7808219178082192,0.8986301369863013,0.8767123287671232,0.9123287671232877,0.8931506849315068,0.8767123287671232,0.8794520547945206,0.8767123287671232,0.8986301369863013,0.8849315068493151,0.8931506849315068,0.8465753424657534,0.8958904109589041,0.9041095890410958,0.9013698630136986
44611,0.8931506849315068,0.8931506849315068,0.8767123287671232,0.8931506849315068,0.8164383561643835,0.9041095890410958,0.7753424657534247,0.9041095890410958,0.9013698630136986,0.8794520547945206,0.8767123287671232,0.8767123287671232,0.8849315068493151,0.9178082191780822,0.8767123287671232,0.8849315068493151,0.9041095890410958,0.873972602739726,0.8794520547945206,0.8821917808219178,0.8767123287671232,0.8876712328767123,0.8849315068493151,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.873972602739726,0.8931506849315068,0.8767123287671232,0.8767123287671232,0.8986301369863013,0.9041095890410958,0.8767123287671232,0.8958904109589041,0.8876712328767123,0.5123287671232877,0.8767123287671232,0.8904109589041096,0,0.7452054794520548,0.9095890410958904,0.8767123287671232,0.8684931506849315,0.8849315068493151,0.4301369863013699,0.8767123287671232,0.8767123287671232,0.8931506849315068,0.8767123287671232,0.9013698630136986,0.8986301369863013,0.8684931506849315,0.8794520547945206,0.8767123287671232,0.8767123287671232,0.8958904109589041,0.8821917808219178,0.8767123287671232,0.8794520547945206,0.8657534246575342,0.8821917808219178,0.8849315068493151,0.8767123287671232,0.9013698630136986,0.7479452054794521,0.8931506849315068,0.8986301369863013,0.8767123287671232,0.8931506849315068,0.8931506849315068,0.9013698630136986,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8849315068493151,0.8794520547945206,0.8767123287671232,0.8767123287671232,0,0.8767123287671232,0.8767123287671232,0.8931506849315068,0.8602739726027397,0.810958904109589,0.8767123287671232,0.8876712328767123,0.8712328767123287,0.8876712328767123,0.8767123287671232,0.8767123287671232,0.8821917808219178,0.8657534246575342,0.9013698630136986,0.9068493150684932,0.8136986301369863,0.9013698630136986,0.8904109589041096,0.8767123287671232,0.8794520547945206,0.9095890410958904,0.873972602739726,0.8986301369863013,0.8849315068493151,0.8767123287671232,0.8794520547945206,0.9068493150684932,0.8767123287671232,0.8767123287671232,0.9013698630136986,0,0.8986301369863013,0.810958904109589,0.8575342465753425,0.8931506849315068,0.8931506849315068,0.8958904109589041,0.8876712328767123,0.8794520547945206,0.8986301369863013,0.8767123287671232,0.7452054794520548,0.8767123287671232,0.8767123287671232,0.8931506849315068,0.8904109589041096,0.8767123287671232,0.8876712328767123,0.8602739726027397,0.9068493150684932,0.8931506849315068,0.915068493150685,0.8904109589041096,0.8712328767123287,0.0,0.7808219178082192,0.8958904109589041,0.8767123287671232,0.9123287671232877,0.8904109589041096,0.8767123287671232,0.8794520547945206,0.8767123287671232,0.8931506849315068,0.8821917808219178,0.8931506849315068,0.8465753424657534,0.8958904109589041,0.9013698630136986,0.8931506849315068
44612,0.8958904109589041,0.8931506849315068,0.8767123287671232,0.8958904109589041,0.8164383561643835,0.9013698630136986,0.7589041095890411,0.9041095890410958,0.8986301369863013,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8904109589041096,0.9178082191780822,0.8767123287671232,0.8849315068493151,0.9041095890410958,0.873972602739726,0.8794520547945206,0.8849315068493151,0.8767123287671232,0.8904109589041096,0.8849315068493151,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.873972602739726,0.8931506849315068,0.8767123287671232,0.8767123287671232,0.8986301369863013,0.9095890410958904,0.8767123287671232,0.8904109589041096,0.8876712328767123,0.8191780821917808,0.8767123287671232,0.8876712328767123,0,0.7452054794520548,0.9095890410958904,0.8767123287671232,0.8821917808219178,0.8931506849315068,0.6904109589041096,0.8767123287671232,0.8767123287671232,0.9041095890410958,0.8767123287671232,0.9041095890410958,0.8986301369863013,0.8684931506849315,0.8794520547945206,0.8767123287671232,0.8767123287671232,0.9013698630136986,0.8821917808219178,0.8767123287671232,0.8794520547945206,0.8657534246575342,0.8849315068493151,0.8849315068493151,0.8767123287671232,0.8821917808219178,0.7479452054794521,0.8931506849315068,0.9041095890410958,0.8767123287671232,0.8904109589041096,0.8958904109589041,0.8904109589041096,0.8767123287671232,0.8767123287671232,0.8767123287671232,0.8904109589041096,0.8794520547945206,0.8767123287671232,0.8767123287671232,0,0.8767123287671232,0.8767123287671232,0.8958904109589041,0.852054794520548,0.810958904109589,0.8767123287671232,0.8876712328767123,0.8712328767123287,0.8876712328767123,0.8767123287671232,0.8767123287671232,0.8821917808219178,0.8657534246575342,0.8931506849315068,0.9013698630136986,0.8136986301369863,0.9013698630136986,0.8931506849315068,0.8767123287671232,0.8794520547945206,0.9041095890410958,0.8438356164383561,0.8958904109589041,0.8876712328767123,0.8767123287671232,0.8794520547945206,0.9041095890410958,0.8767123287671232,0.8767123287671232,0.8931506849315068,0,0.8958904109589041,0.810958904109589,0.8602739726027397,0.8986301369863013,0.9013698630136986,0.8986301369863013,0.8876712328767123,0.8794520547945206,0.8986301369863013,0.8767123287671232,0.7452054794520548,0.8767123287671232,0.8767123287671232,0.8931506849315068,0.8904109589041096,0.8767123287671232,0.8849315068493151,0.8602739726027397,0.9095890410958904,0.8958904109589041,0.9095890410958904,0.8904109589041096,0.8712328767123287,0.0,0.7808219178082192,0.8931506849315068,0.8767123287671232,0.9123287671232877,0.8876712328767123,0.8767123287671232,0.8794520547945206,0.8767123287671232,0.8958904109589041,0.8849315068493151,0.8958904109589041,0.8465753424657534,0.8986301369863013,0.8986301369863013,0.8931506849315068
44613,0.5636856368563685,0.5501355013550135,0.5230352303523035,0.5311653116531165,0.46070460704607047,0.5609756097560976,0.4796747967479675,0.5284552845528455,0.5528455284552846,0.4986449864498645,0.48509485094850946,0.4281842818428184,0.5392953929539296,0.5284552845528455,0.4281842818428184,0.45528455284552843,0.47696476964769646,0.5149051490514905,0.4959349593495935,0.5311653116531165,0.5474254742547425,0.5420054200542005,0.5528455284552846,0.4986449864498645,0.45528455284552843,0.4281842818428184,0.4878048780487805,0.4986449864498645,0.5528455284552846,0.4281842818428184,0.4281842818428184,0.4878048780487805,0.5528455284552846,0.47696476964769646,0.5582655826558266,0.5257452574525745,0.5203252032520326,0.4281842818428184,0.5528455284552846,0,0.46070460704607047,0.5474254742547425,0.46883468834688347,0.47696476964769646,0.5582655826558266,0.5257452574525745,0.46883468834688347,0.4281842818428184,0.46070460704607047,0.45528455284552843,0.5392953929539296,0.5338753387533876,0.45257452574525747,0.4173441734417344,0.3956639566395664,0.5609756097560976,0.5447154471544715,0.5067750677506775,0.4932249322493225,0.46883468834688347,0.5365853658536586,0.5392953929539296,0.5392953929539296,0.4281842818428184,0.47696476964769646,0.4878048780487805,0.5474254742547425,0.5691056910569106,0.43902439024390244,0.5447154471544715,0.5474254742547425,0.5691056910569106,0.44715447154471544,0.5447154471544715,0.4796747967479675,0.5582655826558266,0.5365853658536586,0.43089430894308944,0.4281842818428184,0,0.5284552845528455,0.45528455284552843,0.5392953929539296,0.4932249322493225,0.46612466124661245,0.42276422764227645,0.4905149051490515,0.4959349593495935,0.5176151761517616,0.46883468834688347,0.4281842818428184,0.4959349593495935,0.5392953929539296,0.5257452574525745,0.4905149051490515,0.4173441734417344,0.5392953929539296,0.5338753387533876,0.47696476964769646,0.4634146341463415,0.5338753387533876,0.4905149051490515,0.5555555555555556,0.45799457994579945,0.4173441734417344,0.4796747967479675,0.5636856368563685,0.46883468834688347,0.4065040650406504,0.5230352303523035,0,0.5094850948509485,0.4634146341463415,0.42276422764227645,0.5609756097560976,0.5609756097560976,0.5555555555555556,0.5257452574525745,0.5474254742547425,0.5663956639566395,0.5040650406504065,0.4796747967479675,0.4932249322493225,0.4281842818428184,0.5311653116531165,0.5230352303523035,0.5040650406504065,0.5365853658536586,0.36314363143631434,0.5392953929539296,0.5447154471544715,0.5799457994579946,0.4878048780487805,0.5040650406504065,0.0,0.46883468834688347,0.5257452574525745,0.5176151761517616,0.5257452574525745,0.5420054200542005,0.4932249322493225,0.5555555555555556,0.4281842818428184,0.5663956639566395,0.5338753387533876,0.4959349593495935,0.5094850948509485,0.5311653116531165,0.5582655826558266,0.5691056910569106
44614,0.5501355013550135,0.5501355013550135,0.5230352303523035,0.5420054200542005,0.46070460704607047,0.5582655826558266,0.4796747967479675,0.5176151761517616,0.5474254742547425,0.5094850948509485,0.48509485094850946,0.4281842818428184,0.5447154471544715,0.5311653116531165,0.4281842818428184,0.45528455284552843,0.47696476964769646,0.5149051490514905,0.4959349593495935,0.5447154471544715,0.5474254742547425,0.5447154471544715,0.5230352303523035,0.4986449864498645,0.39295392953929537,0.4281842818428184,0.4932249322493225,0.4986449864498645,0.5528455284552846,0.4281842818428184,0.4281842818428184,0.4905149051490515,0.5447154471544715,0.47696476964769646,0.5365853658536586,0.5257452574525745,0.3821138211382114,0.4281842818428184,0.5636856368563685,0,0.46070460704607047,0.5447154471544715,0.46883468834688347,0.4932249322493225,0.5555555555555556,0.5176151761517616,0.46883468834688347,0.4281842818428184,0.45528455284552843,0.4823848238482385,0.5338753387533876,0.5528455284552846,0.45257452574525747,0.4173441734417344,0.39295392953929537,0.5609756097560976,0.5311653116531165,0.5149051490514905,0.4823848238482385,0.46883468834688347,0.5338753387533876,0.5365853658536586,0.5392953929539296,0.4281842818428184,0.48509485094850946,0.4878048780487805,0.5528455284552846,0.5691056910569106,0.4363143631436314,0.5338753387533876,0.5501355013550135,0.5636856368563685,0.4444444444444444,0.5447154471544715,0.4796747967479675,0.5338753387533876,0.5365853658536586,0.43089430894308944,0.4281842818428184,0,0.5067750677506775,0.4092140921409214,0.5447154471544715,0.46612466124661245,0.46612466124661245,0.4444444444444444,0.4905149051490515,0.4959349593495935,0.5338753387533876,0.4932249322493225,0.4281842818428184,0.4959349593495935,0.5392953929539296,0.5284552845528455,0.5149051490514905,0.4173441734417344,0.5284552845528455,0.5338753387533876,0.4715447154471545,0.4634146341463415,0.5284552845528455,0.5121951219512195,0.5392953929539296,0.4634146341463415,0.42005420054200543,0.4796747967479675,0.5555555555555556,0.46883468834688347,0.37669376693766937,0.5365853658536586,0,0.5121951219512195,0.4634146341463415,0.3902439024390244,0.5501355013550135,0.5555555555555556,0.5528455284552846,0.5447154471544715,0.5474254742547425,0.5636856368563685,0.48509485094850946,0.4796747967479675,0.4986449864498645,0.4281842818428184,0.5392953929539296,0.5230352303523035,0.4715447154471545,0.5176151761517616,0.36314363143631434,0.5284552845528455,0.5636856368563685,0.5745257452574526,0.4878048780487805,0.5013550135501355,0.0,0.46883468834688347,0.5149051490514905,0.5094850948509485,0.5230352303523035,0.5203252032520326,0.4932249322493225,0.5555555555555556,0.4281842818428184,0.5555555555555556,0.5365853658536586,0.47696476964769646,0.5094850948509485,0.5311653116531165,0.5474254742547425,0.5501355013550135
44615,0.5582655826558266,0.5501355013550135,0.5230352303523035,0.5203252032520326,0.46070460704607047,0.5447154471544715,0.4796747967479675,0.5176151761517616,0.5447154471544715,0.5013550135501355,0.4742547425474255,0.4281842818428184,0.5501355013550135,0.5257452574525745,0.4281842818428184,0.45528455284552843,0.47696476964769646,0.5149051490514905,0.4959349593495935,0.5338753387533876,0.5474254742547425,0.5284552845528455,0.5392953929539296,0.4986449864498645,0.42005420054200543,0.4281842818428184,0.46883468834688347,0.4986449864498645,0.5582655826558266,0.4281842818428184,0.4363143631436314,0.4959349593495935,0.5528455284552846,0.47696476964769646,0.5447154471544715,0.5257452574525745,0.5094850948509485,0.4281842818428184,0.5582655826558266,0,0.46070460704607047,0.5609756097560976,0.46883468834688347,0.45528455284552843,0.5745257452574526,0.5338753387533876,0.46883468834688347,0.4281842818428184,0.4715447154471545,0.46883468834688347,0.5338753387533876,0.5420054200542005,0.45257452574525747,0.4173441734417344,0.42005420054200543,0.5609756097560976,0.5203252032520326,0.4959349593495935,0.4715447154471545,0.46883468834688347,0.5338753387533876,0.5257452574525745,0.5311653116531165,0.4281842818428184,0.4932249322493225,0.4878048780487805,0.5474254742547425,0.5691056910569106,0.4363143631436314,0.5338753387533876,0.5528455284552846,0.5826558265582655,0.44715447154471544,0.5447154471544715,0.4715447154471545,0.5447154471544715,0.5365853658536586,0.43089430894308944,0.4281842818428184,0,0.5176151761517616,0.46070460704607047,0.5582655826558266,0.4796747967479675,0.46612466124661245,0.44986449864498645,0.4905149051490515,0.4959349593495935,0.5284552845528455,0.4742547425474255,0.4281842818428184,0.4959349593495935,0.5392953929539296,0.5203252032520326,0.5094850948509485,0.4173441734417344,0.5392953929539296,0.5338753387533876,0.45799457994579945,0.4634146341463415,0.5230352303523035,0.4932249322493225,0.5447154471544715,0.44986449864498645,0.3983739837398374,0.4796747967479675,0.5609756097560976,0.46883468834688347,0.37669376693766937,0.5365853658536586,0,0.5094850948509485,0.4634146341463415,0.43902439024390244,0.5636856368563685,0.5555555555555556,0.5447154471544715,0.5392953929539296,0.5474254742547425,0.5745257452574526,0.5067750677506775,0.4796747967479675,0.5013550135501355,0.4281842818428184,0.5311653116531165,0.5230352303523035,0.43902439024390244,0.5365853658536586,0.36314363143631434,0.5230352303523035,0.5420054200542005,0.5691056910569106,0.4878048780487805,0.5067750677506775,0.0,0.46883468834688347,0.5284552845528455,0.5094850948509485,0.5338753387533876,0.5311653116531165,0.4932249322493225,0.5555555555555556,0.4281842818428184,0.5528455284552846,0.5230352303523035,0.5311653116531165,0.5094850948509485,0.5365853658536586,0.5609756097560976,0.5501355013550135
44616,0.5528455284552846,0.5501355013550135,0.5230352303523035,0.5365853658536586,0.46070460704607047,0.5663956639566395,0.4796747967479675,0.5230352303523035,0.5447154471544715,0.5013550135501355,0.4796747967479675,0.4281842818428184,0.5420054200542005,0.5311653116531165,0.4281842818428184,0.45528455284552843,0.47696476964769646,0.5149051490514905,0.4959349593495935,0.5338753387533876,0.5474254742547425,0.5257452574525745,0.5474254742547425,0.4986449864498645,0.42005420054200543,0.4281842818428184,0.4878048780487805,0.4986449864498645,0.5501355013550135,0.4281842818428184,0.4281842818428184,0.4932249322493225,0.5447154471544715,0.47696476964769646,0.5338753387533876,0.5257452574525745,0.5013550135501355,0.4281842818428184,0.5528455284552846,0,0.46070460704607047,0.5501355013550135,0.46883468834688347,0.4715447154471545,0.5555555555555556,0.5284552845528455,0.46883468834688347,0.4281842818428184,0.46070460704607047,0.47696476964769646,0.5392953929539296,0.5338753387533876,0.45257452574525747,0.4173441734417344,0.4281842818428184,0.5609756097560976,0.5311653116531165,0.5176151761517616,0.4932249322493225,0.46883468834688347,0.5338753387533876,0.5311653116531165,0.5284552845528455,0.4281842818428184,0.44986449864498645,0.4878048780487805,0.5501355013550135,0.5609756097560976,0.4363143631436314,0.5338753387533876,0.5501355013550135,0.5663956639566395,0.45799457994579945,0.5447154471544715,0.4796747967479675,0.5447154471544715,0.5365853658536586,0.43089430894308944,0.4281842818428184,0,0.5447154471544715,0.5230352303523035,0.5636856368563685,0.4444444444444444,0.46612466124661245,0.4444444444444444,0.4905149051490515,0.4959349593495935,0.5311653116531165,0.47696476964769646,0.4281842818428184,0.4959349593495935,0.5392953929539296,0.5203252032520326,0.5176151761517616,0.4173441734417344,0.5501355013550135,0.5420054200542005,0.44173441734417346,0.4634146341463415,0.5257452574525745,0.4742547425474255,0.5311653116531165,0.45799457994579945,0.44173441734417346,0.4796747967479675,0.5609756097560976,0.46883468834688347,0.4065040650406504,0.5392953929539296,0,0.5094850948509485,0.4634146341463415,0.38482384823848237,0.5555555555555556,0.5474254742547425,0.5528455284552846,0.5447154471544715,0.5474254742547425,0.5636856368563685,0.4932249322493225,0.4796747967479675,0.4959349593495935,0.4281842818428184,0.5365853658536586,0.5203252032520326,0.43360433604336046,0.5365853658536586,0.36314363143631434,0.5528455284552846,0.5501355013550135,0.5853658536585366,0.4878048780487805,0.5013550135501355,0.0,0.46883468834688347,0.5284552845528455,0.5121951219512195,0.5338753387533876,0.5176151761517616,0.4932249322493225,0.5555555555555556,0.4281842818428184,0.5474254742547425,0.5284552845528455,0.5311653116531165,0.5094850948509485,0.5365853658536586,0.5718157181571816,0.5501355013550135
44617,0.5691056910569106,0.5501355013550135,0.5230352303523035,0.5338753387533876,0.46070460704607047,0.5609756097560976,0.4796747967479675,0.5257452574525745,0.5555555555555556,0.5040650406504065,0.48509485094850946,0.4281842818428184,0.5420054200542005,0.5176151761517616,0.4281842818428184,0.45528455284552843,0.47696476964769646,0.5149051490514905,0.4959349593495935,0.5420054200542005,0.5474254742547425,0.5365853658536586,0.5338753387533876,0.4986449864498645,0.4254742547425474,0.4281842818428184,0.4742547425474255,0.4986449864498645,0.5555555555555556,0.4281842818428184,0.4281842818428184,0.4878048780487805,0.5528455284552846,0.47696476964769646,0.5528455284552846,0.5257452574525745,0.5176151761517616,0.4281842818428184,0.5528455284552846,0,0.46070460704607047,0.5691056910569106,0.46883468834688347,0.4742547425474255,0.5772357723577236,0.4742547425474255,0.46883468834688347,0.4281842818428184,0.46883468834688347,0.4742547425474255,0.5392953929539296,0.5501355013550135,0.45257452574525747,0.4173441734417344,0.4146341463414634,0.5609756097560976,0.5420054200542005,0.5013550135501355,0.46883468834688347,0.46883468834688347,0.5365853658536586,0.5365853658536586,0.5474254742547425,0.4281842818428184,0.4959349593495935,0.4878048780487805,0.5636856368563685,0.5663956639566395,0.43902439024390244,0.5420054200542005,0.5528455284552846,0.5691056910569106,0.4065040650406504,0.5447154471544715,0.4715447154471545,0.5528455284552846,0.5365853658536586,0.43089430894308944,0.4281842818428184,0,0.5176151761517616,0.45257452574525747,0.5528455284552846,0.4986449864498645,0.46612466124661245,0.4715447154471545,0.4905149051490515,0.4959349593495935,0.5311653116531165,0.5067750677506775,0.4281842818428184,0.4959349593495935,0.5392953929539296,0.5203252032520326,0.4715447154471545,0.4173441734417344,0.5365853658536586,0.5474254742547425,0.44715447154471544,0.4634146341463415,0.5257452574525745,0.5149051490514905,0.5474254742547425,0.4634146341463415,0.3712737127371274,0.4796747967479675,0.5528455284552846,0.46883468834688347,0.37669376693766937,0.5203252032520326,0,0.5094850948509485,0.4634146341463415,0.46612466124661245,0.5609756097560976,0.5420054200542005,0.5609756097560976,0.5392953929539296,0.5474254742547425,0.5772357723577236,0.4823848238482385,0.4796747967479675,0.5203252032520326,0.4281842818428184,0.5284552845528455,0.5203252032520326,0.46070460704607047,0.5311653116531165,0.36314363143631434,0.5420054200542005,0.5474254742547425,0.5772357723577236,0.4878048780487805,0.4959349593495935,0.0,0.46883468834688347,0.5365853658536586,0.5040650406504065,0.5284552845528455,0.5338753387533876,0.4932249322493225,0.5555555555555556,0.4281842818428184,0.5636856368563685,0.5365853658536586,0.5149051490514905,0.5094850948509485,0.5338753387533876,0.5691056910569106,0.5582655826558266
44618,0.7939814814814815,0.9143518518518519,0.7986111111111112,0.9189814814814815,0.8032407407407407,0.9166666666666666,0.8796296296296297,0.9074074074074074,0.9791666666666666,0.8726851851851852,0.8217592592592593,0.0,0.8819444444444444,0.9166666666666666,0.7013888888888888,0.9097222222222222,0.9120370370370371,0.9236111111111112,0.0,0.8958333333333334,0.8402777777777778,0.8935185185185185,0.9074074074074074,0.8171296296296297,0.7430555555555556,0.7013888888888888,0.7662037037037037,0.9097222222222222,0.9027777777777778,0.7013888888888888,0.7013888888888888,0.7870370370370371,0.9560185185185185,0.8449074074074074,0.9074074074074074,0.7662037037037037,0.5949074074074074,0.7013888888888888,0.8055555555555556,0,0.6504629629629629,0.9236111111111112,0.7013888888888888,0.9745370370370371,0.9189814814814815,0.41435185185185186,0.7013888888888888,0.7013888888888888,0.7407407407407407,0.875,0.9305555555555556,0.9606481481481481,0.7013888888888888,0.8865740740740741,0.6990740740740741,0.9120370370370371,0.9583333333333334,0.7546296296296297,0.7013888888888888,0.8657407407407407,0.8356481481481481,0.8935185185185185,0.8958333333333334,0.7013888888888888,0.8634259259259259,0.8125,0.9074074074074074,0.8171296296296297,0.7013888888888888,0.9027777777777778,0.8101851851851852,0.8888888888888888,0.7685185185185185,0.7986111111111112,0.8055555555555556,0.9490740740740741,0.8888888888888888,0.7013888888888888,0.7013888888888888,0,0.7060185185185185,0.6990740740740741,0.8888888888888888,0.8402777777777778,0.8379629629629629,0.8726851851851852,0.8333333333333334,0.0,0.8981481481481481,0.7013888888888888,0.7013888888888888,0.8680555555555556,0.8726851851851852,0.0,0.9050925925925926,0.7222222222222222,0.9490740740740741,0.8541666666666666,0.7013888888888888,0.8703703703703703,0.9907407407407407,0.7777777777777778,0.9560185185185185,0.7662037037037037,0.7037037037037037,0.8009259259259259,0.9537037037037037,0.7013888888888888,0.7523148148148148,0.9490740740740741,0,0.0,0.8356481481481481,0.8726851851851852,0.9120370370370371,0.8865740740740741,0.9236111111111112,0.8263888888888888,0.9328703703703703,0.9560185185185185,0.8148148148148148,0.6504629629629629,0.7013888888888888,0.7013888888888888,0.8865740740740741,0.9351851851851852,0.7013888888888888,0.8449074074074074,0.37962962962962965,0.9629629629629629,0.8958333333333334,0.9259259259259259,0.8796296296296297,0.7013888888888888,0.8032407407407407,0.8541666666666666,0.9675925925925926,0.8564814814814815,0.9675925925925926,0.8634259259259259,0.8356481481481481,0.8518518518518519,0.7013888888888888,0.9259259259259259,0.8981481481481481,0.8587962962962963,0.0,0.9467592592592593,0.9328703703703703,0.8842592592592593
44619,0.7939814814814815,0.9143518518518519,0.7986111111111112,0.9120370370370371,0.8032407407407407,0.9166666666666666,0.8796296296296297,0.9189814814814815,0.9583333333333334,0.8935185185185185,0.8240740740740741,0.0,0.8726851851851852,0.9166666666666666,0.7013888888888888,0.9097222222222222,0.9120370370370371,0.9236111111111112,0.0,0.8865740740740741,0.8402777777777778,0.8935185185185185,0.8888888888888888,0.8171296296296297,0.7314814814814815,0.7013888888888888,0.7430555555555556,0.9097222222222222,0.8888888888888888,0.7013888888888888,0.7013888888888888,0.8541666666666666,0.9583333333333334,0.8449074074074074,0.9004629629629629,0.7638888888888888,0.7152777777777778,0.7013888888888888,0.8055555555555556,0,0.6504629629629629,0.9328703703703703,0.7013888888888888,0.9837962962962963,0.9120370370370371,0.5231481481481481,0.7013888888888888,0.7013888888888888,0.7407407407407407,0.8703703703703703,0.9305555555555556,0.9629629629629629,0.7013888888888888,0.8865740740740741,0.7083333333333334,0.9120370370370371,0.9513888888888888,0.7453703703703703,0.7013888888888888,0.8657407407407407,0.8356481481481481,0.8912037037037037,0.8981481481481481,0.7013888888888888,0.8634259259259259,0.8125,0.9004629629629629,0.8171296296296297,0.7013888888888888,0.9027777777777778,0.8125,0.8958333333333334,0.7962962962962963,0.7986111111111112,0.8055555555555556,0.9513888888888888,0.8888888888888888,0.7013888888888888,0.7013888888888888,0,0.7060185185185185,0.7013888888888888,0.8958333333333334,0.8310185185185185,0.8379629629629629,0.8912037037037037,0.8333333333333334,0.0,0.8958333333333334,0.7013888888888888,0.7013888888888888,0.8680555555555556,0.8726851851851852,0.0,0.8935185185185185,0.7222222222222222,0.9583333333333334,0.8425925925925926,0.7013888888888888,0.8703703703703703,0.9953703703703703,0.7615740740740741,0.9583333333333334,0.7662037037037037,0.7060185185185185,0.8009259259259259,0.9490740740740741,0.7013888888888888,0.7430555555555556,0.9537037037037037,0,0.0,0.8356481481481481,0.8865740740740741,0.9143518518518519,0.8796296296296297,0.9328703703703703,0.8194444444444444,0.9328703703703703,0.9560185185185185,0.8217592592592593,0.6504629629629629,0.7060185185185185,0.7013888888888888,0.8865740740740741,0.9351851851851852,0.7013888888888888,0.8402777777777778,0.37962962962962965,0.9861111111111112,0.8935185185185185,0.9189814814814815,0.8796296296296297,0.7013888888888888,0.8032407407407407,0.8541666666666666,0.9652777777777778,0.8611111111111112,0.9652777777777778,0.8703703703703703,0.8356481481481481,0.8518518518518519,0.7013888888888888,0.9259259259259259,0.8935185185185185,0.8495370370370371,0.0,0.9537037037037037,0.9305555555555556,0.8842592592592593
44620,0.7939814814814815,0.9143518518518519,0.7986111111111112,0.9166666666666666,0.8032407407407407,0.9166666666666666,0.8796296296296297,0.9074074074074074,0.9791666666666666,0.8935185185185185,0.8194444444444444,0.0,0.8773148148148148,0.9236111111111112,0.7013888888888888,0.9097222222222222,0.9120370370370371,0.9236111111111112,0.0,0.8958333333333334,0.8402777777777778,0.9074074074074074,0.8912037037037037,0.8171296296296297,0.7523148148148148,0.7013888888888888,0.7847222222222222,0.9097222222222222,0.8912037037037037,0.7013888888888888,0.7013888888888888,0.7986111111111112,0.9583333333333334,0.8449074074074074,0.9120370370370371,0.7638888888888888,0.6921296296296297,0.7013888888888888,0.8055555555555556,0,0.6504629629629629,0.9236111111111112,0.7013888888888888,0.9583333333333334,0.9236111111111112,0.5486111111111112,0.7013888888888888,0.7013888888888888,0.7523148148148148,0.8773148148148148,0.9305555555555556,0.9513888888888888,0.7013888888888888,0.8865740740740741,0.7013888888888888,0.9120370370370371,0.9560185185185185,0.7708333333333334,0.7013888888888888,0.8657407407407407,0.8356481481481481,0.8912037037037037,0.8981481481481481,0.7013888888888888,0.8773148148148148,0.8125,0.9004629629629629,0.8171296296296297,0.7013888888888888,0.9074074074074074,0.8171296296296297,0.8958333333333334,0.7407407407407407,0.7986111111111112,0.8009259259259259,0.9282407407407407,0.8888888888888888,0.7013888888888888,0.7013888888888888,0,0.7199074074074074,0.7013888888888888,0.8935185185185185,0.8425925925925926,0.8379629629629629,0.8935185185185185,0.8333333333333334,0.0,0.9050925925925926,0.7013888888888888,0.7013888888888888,0.8680555555555556,0.8726851851851852,0.0,0.875,0.7222222222222222,0.9560185185185185,0.8564814814814815,0.7013888888888888,0.8703703703703703,0.9930555555555556,0.7060185185185185,0.9537037037037037,0.7662037037037037,0.7060185185185185,0.8009259259259259,0.9490740740740741,0.7013888888888888,0.7708333333333334,0.9583333333333334,0,0.0,0.8356481481481481,0.8865740740740741,0.9212962962962963,0.8888888888888888,0.9398148148148148,0.8240740740740741,0.9328703703703703,0.9560185185185185,0.8333333333333334,0.6504629629629629,0.7013888888888888,0.7013888888888888,0.8865740740740741,0.9351851851851852,0.7013888888888888,0.8449074074074074,0.37962962962962965,0.9745370370370371,0.8912037037037037,0.9282407407407407,0.8796296296296297,0.7013888888888888,0.8032407407407407,0.8541666666666666,0.9699074074074074,0.8217592592592593,0.9652777777777778,0.8796296296296297,0.8356481481481481,0.8518518518518519,0.7013888888888888,0.9212962962962963,0.8935185185185185,0.8541666666666666,0.0,0.9467592592592593,0.9305555555555556,0.8842592592592593
44621,0.7939814814814815,0.9143518518518519,0.7986111111111112,0.9189814814814815,0.8032407407407407,0.9143518518518519,0.8796296296296297,0.9236111111111112,0.9768518518518519,0.875,0.8148148148148148,0.0,0.8726851851851852,0.9166666666666666,0.7013888888888888,0.9097222222222222,0.9120370370370371,0.9236111111111112,0.0,0.8935185185185185,0.8402777777777778,0.9027777777777778,0.8935185185185185,0.8171296296296297,0.7037037037037037,0.7013888888888888,0.7430555555555556,0.9097222222222222,0.8865740740740741,0.7013888888888888,0.7013888888888888,0.8009259259259259,0.9583333333333334,0.8449074074074074,0.9074074074074074,0.7662037037037037,0.7106481481481481,0.7013888888888888,0.8055555555555556,0,0.6504629629629629,0.9375,0.7013888888888888,0.9745370370370371,0.9120370370370371,0.5879629629629629,0.7013888888888888,0.7013888888888888,0.7453703703703703,0.8842592592592593,0.9259259259259259,0.9328703703703703,0.7013888888888888,0.8865740740740741,0.7060185185185185,0.9120370370370371,0.9583333333333334,0.7939814814814815,0.7013888888888888,0.8657407407407407,0.8356481481481481,0.9027777777777778,0.8958333333333334,0.7013888888888888,0.8703703703703703,0.8125,0.9050925925925926,0.8125,0.7013888888888888,0.9097222222222222,0.8194444444444444,0.8981481481481481,0.7824074074074074,0.7986111111111112,0.8009259259259259,0.9421296296296297,0.8888888888888888,0.7013888888888888,0.7013888888888888,0,0.7037037037037037,0.7152777777777778,0.8958333333333334,0.7800925925925926,0.8379629629629629,0.8865740740740741,0.8333333333333334,0.0,0.8958333333333334,0.7013888888888888,0.7013888888888888,0.8680555555555556,0.8726851851851852,0.0,0.8935185185185185,0.7222222222222222,0.9560185185185185,0.8587962962962963,0.7013888888888888,0.8703703703703703,0.9930555555555556,0.7361111111111112,0.9560185185185185,0.7662037037037037,0.7060185185185185,0.8009259259259259,0.9490740740740741,0.7013888888888888,0.7870370370370371,0.9560185185185185,0,0.0,0.8356481481481481,0.8865740740740741,0.9143518518518519,0.8796296296296297,0.9328703703703703,0.8217592592592593,0.9328703703703703,0.9560185185185185,0.8171296296296297,0.6504629629629629,0.7013888888888888,0.7013888888888888,0.8865740740740741,0.9351851851851852,0.7013888888888888,0.8379629629629629,0.37962962962962965,0.9791666666666666,0.8958333333333334,0.9236111111111112,0.8796296296296297,0.7013888888888888,0.8032407407407407,0.8541666666666666,0.9606481481481481,0.8310185185185185,0.9699074074074074,0.8611111111111112,0.8356481481481481,0.8518518518518519,0.7013888888888888,0.9259259259259259,0.9027777777777778,0.8263888888888888,0.0,0.9444444444444444,0.9351851851851852,0.8842592592592593
44622,0.7939814814814815,0.9143518518518519,0.7986111111111112,0.9120370370370371,0.8032407407407407,0.9166666666666666,0.8796296296296297,0.9120370370370371,0.9699074074074074,0.8495370370370371,0.8240740740740741,0.0,0.8726851851851852,0.9166666666666666,0.7013888888888888,0.9097222222222222,0.9120370370370371,0.9236111111111112,0.0,0.8958333333333334,0.8402777777777778,0.8981481481481481,0.9027777777777778,0.8171296296296297,0.7129629629629629,0.7013888888888888,0.7546296296296297,0.9097222222222222,0.8912037037037037,0.7013888888888888,0.7013888888888888,0.7268518518518519,0.9583333333333334,0.8449074074074074,0.9120370370370371,0.7662037037037037,0.7245370370370371,0.7013888888888888,0.8055555555555556,0,0.6504629629629629,0.9189814814814815,0.7013888888888888,0.9814814814814815,0.9259259259259259,0.5092592592592593,0.7013888888888888,0.7013888888888888,0.7453703703703703,0.875,0.9282407407407407,0.9606481481481481,0.7013888888888888,0.8865740740740741,0.7013888888888888,0.9120370370370371,0.9606481481481481,0.7569444444444444,0.7013888888888888,0.8657407407407407,0.8356481481481481,0.8935185185185185,0.8981481481481481,0.7013888888888888,0.8726851851851852,0.8125,0.9004629629629629,0.8125,0.7013888888888888,0.9097222222222222,0.8217592592592593,0.8842592592592593,0.7337962962962963,0.7986111111111112,0.8055555555555556,0.9328703703703703,0.8888888888888888,0.7013888888888888,0.7013888888888888,0,0.7129629629629629,0.7013888888888888,0.8958333333333334,0.8101851851851852,0.8379629629629629,0.8958333333333334,0.8333333333333334,0.0,0.8981481481481481,0.7013888888888888,0.7013888888888888,0.8680555555555556,0.8726851851851852,0.0,0.8981481481481481,0.7222222222222222,0.9537037037037037,0.8472222222222222,0.7013888888888888,0.8703703703703703,0.9907407407407407,0.7962962962962963,0.9583333333333334,0.7662037037037037,0.7060185185185185,0.8009259259259259,0.9513888888888888,0.7013888888888888,0.75,0.9490740740740741,0,0.0,0.8356481481481481,0.8865740740740741,0.9143518518518519,0.8842592592592593,0.9351851851851852,0.8287037037037037,0.9328703703703703,0.9560185185185185,0.8078703703703703,0.6504629629629629,0.7013888888888888,0.7013888888888888,0.8865740740740741,0.9351851851851852,0.7013888888888888,0.8587962962962963,0.37962962962962965,0.9652777777777778,0.8935185185185185,0.9282407407407407,0.8796296296296297,0.7013888888888888,0.8032407407407407,0.8541666666666666,0.9675925925925926,0.8055555555555556,0.9675925925925926,0.8611111111111112,0.8356481481481481,0.8518518518518519,0.7013888888888888,0.9328703703703703,0.8958333333333334,0.8240740740740741,0.0,0.9444444444444444,0.9259259259259259,0.8842592592592593
44623,0.926,0.874,0.904,0.962,0.832,0.938,0.954,0.972,0.972,0.87,0.22,0.864,0.956,0.0,0.192,0.21,0.964,0.964,0.934,0.95,0.934,0.962,0.946,0.192,0.14,0.2,0.094,0.954,0.954,0.0,0.1,0.732,0.0,0.192,0.944,0.514,0.0,0.194,0.922,0,0.27,0.0,0.2,0.254,0.924,0.0,0.2,0.226,0.866,0.218,0.0,0.966,0.344,0.95,0.084,0.946,0.972,0.842,0.84,0.946,0.786,0.948,0.95,0.192,0.358,0.292,0.902,0.93,0.1,0.96,0.942,0.936,0.108,0.628,0.236,0.976,0.944,0.1,0.192,0,0.914,0.198,0.96,0.0,0.832,0.106,0.952,0.904,0.952,0.918,0.1,0.864,0.866,0.948,0.83,0.832,0.976,0.948,0.656,0.95,0.972,0.936,0.968,0.926,0.102,0.898,0.944,0.2,0.0,0.97,0,0.968,0.832,0.096,0.0,0.918,0.96,0.944,0.944,0.922,0.944,0.87,0.348,0.1,0.868,0.876,0.32,0.964,0.29,0.0,0.902,0.954,0.962,0.318,0.0,0.292,0.97,0.908,0.97,0.962,0.958,0.704,0.952,0.962,0.958,0.81,0.932,0.964,0.96,0.0
44624,0.936,0.862,0.868,0.948,0.814,0.952,0.958,0.968,0.962,0.856,0.244,0.86,0.936,0.0,0.192,0.248,0.97,0.948,0.898,0.932,0.906,0.95,0.934,0.226,0.116,0.196,0.084,0.934,0.942,0.0,0.1,0.696,0.0,0.23,0.938,0.54,0.0,0.188,0.902,0,0.28,0.0,0.2,0.278,0.916,0.0,0.2,0.268,0.844,0.248,0.0,0.962,0.426,0.936,0.114,0.92,0.964,0.814,0.842,0.948,0.752,0.93,0.944,0.192,0.358,0.298,0.87,0.908,0.1,0.938,0.92,0.946,0.106,0.638,0.268,0.958,0.926,0.1,0.192,0,0.908,0.196,0.958,0.0,0.814,0.106,0.954,0.886,0.938,0.904,0.1,0.86,0.856,0.95,0.844,0.814,0.96,0.942,0.686,0.946,0.964,0.926,0.948,0.84,0.1,0.868,0.942,0.2,0.0,0.962,0,0.512,0.814,0.118,0.0,0.904,0.95,0.928,0.926,0.942,0.922,0.834,0.408,0.1,0.86,0.862,0.372,0.95,0.336,0.0,0.894,0.948,0.966,0.414,0.0,0.298,0.96,0.872,0.962,0.95,0.934,0.71,0.944,0.944,0.944,0.77,0.914,0.954,0.948,0.0
44625,0.934,0.848,0.884,0.962,0.83,0.954,0.952,0.966,0.974,0.868,0.224,0.85,0.948,0.0,0.188,0.26,0.952,0.954,0.92,0.944,0.932,0.964,0.932,0.232,0.108,0.19,0.1,0.948,0.954,0.0,0.1,0.72,0.0,0.244,0.944,0.564,0.0,0.148,0.92,0,0.262,0.0,0.192,0.256,0.93,0.0,0.182,0.212,0.886,0.23,0.0,0.968,0.412,0.958,0.092,0.942,0.962,0.858,0.84,0.948,0.756,0.942,0.95,0.188,0.314,0.272,0.0,0.918,0.1,0.944,0.94,0.108,0.088,0.682,0.232,0.964,0.932,0.1,0.188,0,0.906,0.194,0.956,0.0,0.83,0.09,0.946,0.906,0.954,0.888,0.1,0.842,0.856,0.0,0.796,0.828,0.964,0.93,0.722,0.942,0.966,0.926,0.96,0.914,0.106,0.902,0.936,0.192,0.0,0.958,0,0.952,0.83,0.116,0.0,0.906,0.962,0.944,0.932,0.922,0.938,0.864,0.448,0.1,0.85,0.87,0.32,0.96,0.284,0.0,0.91,0.946,0.956,0.428,0.0,0.272,0.962,0.896,0.964,0.958,0.952,0.764,0.94,0.956,0.954,0.774,0.928,0.966,0.96,0.0
44626,0.946,0.84,0.894,0.956,0.864,0.958,0.96,0.97,0.972,0.862,0.18,0.85,0.95,0.0,0.192,0.208,0.97,0.96,0.92,0.952,0.924,0.958,0.95,0.202,0.094,0.2,0.076,0.952,0.958,0.0,0.1,0.712,0.0,0.206,0.95,0.55,0.0,0.146,0.924,0,0.232,0.0,0.2,0.222,0.934,0.0,0.196,0.178,0.834,0.182,0.0,0.972,0.392,0.924,0.104,0.95,0.972,0.808,0.868,0.944,0.758,0.952,0.956,0.192,0.314,0.238,0.884,0.932,0.1,0.958,0.944,0.946,0.124,0.668,0.214,0.968,0.936,0.1,0.192,0,0.906,0.196,0.954,0.0,0.864,0.078,0.952,0.894,0.954,0.892,0.1,0.848,0.854,0.962,0.856,0.864,0.974,0.936,0.686,0.942,0.972,0.94,0.966,0.892,0.116,0.876,0.95,0.2,0.0,0.968,0,0.964,0.864,0.082,0.0,0.9,0.96,0.954,0.936,0.926,0.934,0.87,0.42,0.1,0.86,0.846,0.32,0.958,0.314,0.0,0.88,0.964,0.964,0.4,0.0,0.238,0.968,0.892,0.972,0.972,0.946,0.782,0.946,0.962,0.962,0.824,0.922,0.966,0.966,0.0
44627,0.936,0.846,0.89,0.954,0.842,0.94,0.966,0.962,0.97,0.838,0.212,0.852,0.946,0.0,0.194,0.258,0.96,0.958,0.93,0.946,0.918,0.944,0.94,0.21,0.112,0.19,0.082,0.942,0.948,0.0,0.1,0.762,0.0,0.22,0.954,0.538,0.0,0.186,0.918,0,0.27,0.0,0.2,0.246,0.92,0.0,0.19,0.202,0.858,0.212,0.0,0.972,0.374,0.918,0.102,0.944,0.958,0.842,0.854,0.942,0.746,0.942,0.946,0.194,0.378,0.286,0.0,0.914,0.1,0.932,0.91,0.942,0.086,0.658,0.234,0.964,0.946,0.1,0.194,0,0.898,0.186,0.948,0.0,0.842,0.108,0.954,0.9,0.95,0.91,0.1,0.836,0.834,0.946,0.808,0.844,0.962,0.942,0.732,0.946,0.96,0.946,0.96,0.892,0.11,0.886,0.932,0.2,0.0,0.966,0,0.968,0.842,0.09,0.0,0.896,0.954,0.948,0.946,0.898,0.924,0.854,0.414,0.1,0.864,0.86,0.33,0.96,0.336,0.0,0.888,0.942,0.962,0.4,0.0,0.286,0.962,0.888,0.964,0.954,0.946,0.704,0.946,0.948,0.95,0.788,0.918,0.962,0.946,0.0
44628,0.846,0.84,0.84,0.848,0.834,0.854,0.812,0.858,0.844,0.846,0.846,0.846,0.85,0.836,0.846,0.856,0.846,0.806,0.83,0.844,0.836,0.85,0.844,0.846,0.848,0.846,0.84,0.834,0.846,0.846,0.846,0.848,0.858,0.828,0.858,0.832,0.834,0.846,0.84,0,0.616,0.84,0.846,0.858,0.846,0.756,0.846,0.846,0.848,0.846,0.842,0.862,0.808,0.838,0.846,0.832,0.85,0.844,0.85,0.846,0.816,0.842,0.846,0.846,0.83,0.47,0.852,0.852,0.846,0.844,0.848,0.834,0.846,0.84,0.846,0.844,0.818,0.846,0.846,0,0.846,0.846,0.852,0.836,0.834,0.846,0.85,0.832,0.848,0.846,0.846,0.832,0.844,0.864,0.858,0.834,0.858,0.862,0.846,0.85,0.842,0.81,0.856,0.85,0.842,0.85,0.856,0.846,0.844,0.856,0,0.848,0.834,0.836,0.866,0.848,0.848,0.844,0.818,0.84,0.846,0.606,0.846,0.846,0.802,0.832,0.846,0.852,0.712,0.856,0.852,0.858,0.84,0.806,0.0,0.632,0.834,0.84,0.856,0.856,0.836,0.838,0.846,0.85,0.846,0.844,0.796,0.85,0.854,0.854
