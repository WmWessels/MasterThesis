0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
936,0.904,0.88,0.744,0.864,0.0,0.864,0.648,0.872,0.84,0.728,0.752,0.696,0.88,0.904,0.776,0.656,0.656,0.832,0.8,0.848,0.8,0.672,0.848,0.72,0.552,0.776,0.672,0.656,0.912,0.624,0.544,0.64,0.936,0.736,0.832,0.64,0.888,0.504,0.824,0,0.736,0.632,0.544,0.688,0.896,0.864,0.616,0.544,0.696,0.784,0.912,0.872,0.592,0.64,0.536,0.808,0.928,0.72,0.712,0.744,0.72,0.84,0.872,0.776,0.8,0.736,0.824,0.816,0.544,0.864,0.92,0.832,0.792,0.816,0.728,0.856,0.768,0.544,0.776,0,0.544,0.0,0.92,0.656,0.0,0.76,0.632,0.728,0.832,0.544,0.544,0.888,0.816,0.904,0.712,0.0,0.928,0.816,0.544,0.776,0.872,0.712,0.928,0.848,0.568,0.0,0.904,0.544,0.512,0.912,0,0.864,0.0,0.872,0.92,0.84,0.848,0.808,0.64,0.88,0.568,0.736,0.584,0.0,0.888,0.88,0.0,0.84,0.0,0.896,0.8,0.568,0.824,0.568,0,0.744,0.88,0.744,0.928,0.824,0.648,0.88,0.544,0.92,0.816,0.704,0.664,0.928,0.616,0.928
937,0.864,0.792,0.584,0.792,0.0,0.848,0.688,0.8,0.832,0.608,0.688,0.592,0.84,0.0,0.68,0.64,0.712,0.624,0.656,0.792,0.656,0.68,0.8,0.552,0.6,0.68,0.472,0.712,0.84,0.568,0.568,0.624,0.856,0.64,0.672,0.648,0.864,0.576,0.672,0,0.64,0.632,0.592,0.704,0.864,0.832,0.6,0.568,0.688,0.68,0.8,0.784,0.52,0.576,0.536,0.56,0.888,0.608,0.568,0.616,0.544,0.808,0.808,0.68,0.64,0.632,0.68,0.624,0.568,0.816,0.848,0.808,0.52,0.744,0.64,0.736,0.608,0.568,0.68,0,0.568,0.0,0.656,0.472,0.0,0.496,0.672,0.576,0.84,0.568,0.568,0.792,0.728,0.848,0.656,0.0,0.872,0.64,0.568,0.64,0.84,0.672,0.88,0.656,0.584,0.0,0.856,0.592,0.488,0.848,0,0.776,0.0,0.488,0.864,0.688,0.832,0.792,0.664,0.832,0.584,0.608,0.592,0.0,0.816,0.816,0.0,0.8,0.0,0.824,0.64,0.648,0.64,0.552,0,0.632,0.896,0.584,0.864,0.84,0.68,0.728,0.568,0.808,0.824,0.608,0.688,0.856,0.608,0.848
940,0.8787878787878788,0.9924242424242424,0.8484848484848485,0.8484848484848485,0.5378787878787878,0.9772727272727273,0.8636363636363636,0.9242424242424242,0.9621212121212122,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.9696969696969697,0.9621212121212122,0.9696969696969697,0.8560606060606061,0.9545454545454546,0.8333333333333334,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.9696969696969697,0.8484848484848485,0.8560606060606061,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.9924242424242424,0.8484848484848485,0.8712121212121212,0.8560606060606061,0.9848484848484849,0.8484848484848485,0.8484848484848485,0,0.8484848484848485,0.9393939393939394,0.8484848484848485,0.8484848484848485,0.9772727272727273,0.9924242424242424,0.8484848484848485,0.8484848484848485,0.8636363636363636,0.8484848484848485,0.9848484848484849,0.9393939393939394,0.8409090909090909,0.8484848484848485,0.8484848484848485,0.8409090909090909,0.9393939393939394,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.8712121212121212,0.8484848484848485,0.8484848484848485,0.9696969696969697,0.9393939393939394,0.4621212121212121,0.8787878787878788,0.9772727272727273,0.8484848484848485,0.8484848484848485,0.9772727272727273,0.9621212121212122,0.8484848484848485,0.9621212121212122,0.8484848484848485,0.9393939393939394,0.8484848484848485,0.8484848484848485,0.9696969696969697,0,0.8484848484848485,0.8484848484848485,0.8863636363636364,0.7803030303030303,0.5454545454545454,0.8484848484848485,0.8712121212121212,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.9772727272727273,0.9545454545454546,0.8787878787878788,0.8712121212121212,0.8333333333333334,0.8560606060606061,0.8484848484848485,0.8484848484848485,0.8560606060606061,0.9621212121212122,0.8787878787878788,0.8939393939393939,0.946969696969697,0.8484848484848485,0.8484848484848485,1.0,0.8484848484848485,0.8409090909090909,0.8863636363636364,0,0.8333333333333334,0.5454545454545454,0.8409090909090909,0.9772727272727273,0.8636363636363636,0.9772727272727273,0.8939393939393939,0.8787878787878788,1.0,0.8484848484848485,0.6742424242424242,0.8484848484848485,0.8484848484848485,0.9772727272727273,1.0,0.8484848484848485,0.8863636363636364,0.8712121212121212,0.9848484848484849,0.8712121212121212,0.9545454545454546,0.8484848484848485,0.8484848484848485,0,0.8484848484848485,0.9621212121212122,0.8484848484848485,0.9621212121212122,0.8863636363636364,0.8560606060606061,1.0,0.8484848484848485,0.8484848484848485,0.8484848484848485,0.9015151515151515,0.8863636363636364,0.8939393939393939,0.9318181818181818,0.9772727272727273
943,0.856,0.816,0.816,0.84,0.0,0.84,0.832,0.84,0.864,0.8,0.776,0.664,0.848,0.856,0.712,0.672,0.84,0.784,0.832,0.84,0.816,0.808,0.824,0.712,0.416,0.712,0.816,0.84,0.832,0.752,0.68,0.736,0.824,0.728,0.776,0.704,0.88,0.672,0.816,0,0.768,0.816,0.656,0.712,0.84,0.88,0.656,0.64,0.768,0.784,0.848,0.88,0.664,0.656,0.56,0.816,0.84,0.832,0.64,0.808,0.768,0.832,0.84,0.712,0.8,0.768,0.792,0.856,0.52,0.824,0.84,0.896,0.512,0.8,0.792,0.896,0.848,0.52,0.712,0,0.52,0.0,0.832,0.632,0.0,0.728,0.816,0.808,0.8,0.52,0.52,0.848,0.824,0.912,0.864,0.0,0.832,0.816,0.52,0.84,0.888,0.832,0.84,0.752,0.52,0.744,0.864,0.656,0.48,0.872,0,0.888,0.0,0.656,0.824,0.792,0.864,0.816,0.832,0.832,0.808,0.76,0.736,0.0,0.792,0.8,0.0,0.832,0.0,0.896,0.8,0.848,0.864,0.68,0,0.752,0.848,0.816,0.832,0.832,0.824,0.816,0.64,0.816,0.824,0.808,0.848,0.848,0.856,0.8
953,0.956140350877193,0.9649122807017544,0.8107769423558897,0.9649122807017544,0.8784461152882206,0.9711779448621554,0.9461152882205514,0.9774436090225563,0.9761904761904762,0.0,0.9448621553884712,0.0,0.9724310776942355,0.0,0.8370927318295739,0.8258145363408521,0.9285714285714286,0.8195488721804511,0.0,0.9611528822055138,0.8157894736842105,0.9736842105263158,0.9611528822055138,0.8095238095238095,0.5852130325814536,0.8370927318295739,0.0,0.931077694235589,0.9624060150375939,0.0,0.5463659147869674,0.0,0.0,0.8208020050125313,0.9611528822055138,0.8884711779448622,0.956140350877193,0.8796992481203008,0.9674185463659147,0,0.9373433583959899,0.974937343358396,0.7882205513784462,0.9699248120300752,0.9661654135338346,0.6215538847117794,0.7882205513784462,0.9636591478696742,0.8220551378446115,0.956140350877193,0.0,0.9699248120300752,0.8145363408521303,0.8045112781954887,0.5288220551378446,0.8157894736842105,0.9674185463659147,0.0,0.5476190476190477,0.7994987468671679,0.918546365914787,0.9598997493734336,0.9611528822055138,0.8370927318295739,0.0,0.9398496240601504,0.0,0.9624060150375939,0.518796992481203,0.9598997493734336,0.9448621553884712,0.9548872180451128,0.5714285714285714,0.9110275689223057,0.9674185463659147,0.9699248120300752,0.8057644110275689,0.518796992481203,0.8370927318295739,0,0.9473684210526315,0.6629072681704261,0.9711779448621554,0.0,0.9348370927318296,0.487468671679198,0.9486215538847118,0.0,0.9649122807017544,0.9423558897243107,0.518796992481203,0.9624060150375939,0.9624060150375939,0.0,0.0,0.9072681704260651,0.9661654135338346,0.9598997493734336,0.5964912280701754,0.7894736842105263,0.9736842105263158,0.0,0.9661654135338346,0.9611528822055138,0.5426065162907269,0.893483709273183,0.9649122807017544,0.7882205513784462,0.0,0.968671679197995,0,0.0,0.9348370927318296,0.525062656641604,0.0,0.0,0.9699248120300752,0.9674185463659147,0.8583959899749374,0.9636591478696742,0.9586466165413534,0.9273182957393483,0.518796992481203,0.518796992481203,0.0,0.9573934837092731,0.5137844611528822,0.9736842105263158,0.0,0.968671679197995,0.0,0.974937343358396,0.7706766917293233,0.8145363408521303,0,0.9398496240601504,0.9724310776942355,0.8095238095238095,0.9611528822055138,0.9736842105263158,0.9473684210526315,0.9611528822055138,0.7769423558897243,0.9624060150375939,0.9674185463659147,0.0,0.0,0.968671679197995,0.9774436090225563,0.0
954,0.9172932330827067,0.9172932330827067,0.9624060150375939,0.9774436090225563,0.0,0.9473684210526315,0.6090225563909775,0.9624060150375939,0.9699248120300752,0.8947368421052632,0.8947368421052632,0.9473684210526315,0.9774436090225563,0.0,0.9172932330827067,0.8947368421052632,0.9699248120300752,0.9624060150375939,0.9699248120300752,0.9699248120300752,0.9473684210526315,0.9774436090225563,0.9774436090225563,0.8947368421052632,0.8947368421052632,0.9097744360902256,0.8947368421052632,0.9849624060150376,0.9774436090225563,0.0,0.8947368421052632,0.8947368421052632,0.9699248120300752,0.8947368421052632,0.9398496240601504,0.9097744360902256,0.9398496240601504,0.8947368421052632,0.9774436090225563,0,0.8872180451127819,0.9473684210526315,0.9172932330827067,0.8947368421052632,0.924812030075188,0.9398496240601504,0.9172932330827067,0.8947368421052632,0.8947368421052632,0.0,0.0,0.9548872180451128,0.8796992481203008,0.9097744360902256,0.8947368421052632,0.9699248120300752,0.9849624060150376,0.8947368421052632,0.9022556390977443,0.9323308270676691,0.9473684210526315,0.9624060150375939,0.9699248120300752,0.9172932330827067,0.8421052631578947,0.7669172932330827,0.9473684210526315,0.9323308270676691,0.8947368421052632,0.9699248120300752,0.9624060150375939,0.9398496240601504,0.8947368421052632,0.9097744360902256,0.8947368421052632,0.9624060150375939,0.9699248120300752,0.8947368421052632,0.9172932330827067,0,0.8947368421052632,0.0,0.9849624060150376,0.8947368421052632,0.0,0.8947368421052632,0.9398496240601504,0.9699248120300752,0.9774436090225563,0.8947368421052632,0.8947368421052632,0.9323308270676691,0.9172932330827067,0.9548872180451128,0.8947368421052632,0.0,0.9774436090225563,0.8947368421052632,0.8947368421052632,0.9398496240601504,0.9548872180451128,0.7669172932330827,0.9849624060150376,0.9699248120300752,0.8947368421052632,0.9699248120300752,0.924812030075188,0.9172932330827067,0.8872180451127819,0.9849624060150376,0,0.9473684210526315,0.0,0.849624060150376,0.0,0.9548872180451128,0.9774436090225563,0.9473684210526315,0.9774436090225563,0.9172932330827067,0.9172932330827067,0.8045112781954887,0.8947368421052632,0.0,0.9473684210526315,0.9097744360902256,0.0,0.9624060150375939,0.0,0.9548872180451128,0.9548872180451128,0.9624060150375939,0.9548872180451128,0.8947368421052632,0,0.8872180451127819,0.9849624060150376,0.9624060150375939,0.9699248120300752,0.9774436090225563,0.9774436090225563,0.9398496240601504,0.8947368421052632,0.9774436090225563,0.9774436090225563,0.8947368421052632,0.8571428571428571,0.9849624060150376,0.9624060150375939,0.9774436090225563
957,0.7475728155339806,0.7087378640776699,0.7669902912621359,0.7961165048543689,0.4854368932038835,0.7572815533980582,0.7669902912621359,0.7864077669902912,0.7184466019417476,0.7669902912621359,0.7669902912621359,0.7669902912621359,0.7669902912621359,0.7572815533980582,0.7766990291262136,0.7281553398058253,0.7669902912621359,0.7766990291262136,0.7766990291262136,0.7766990291262136,0.7669902912621359,0.7766990291262136,0.7766990291262136,0.7669902912621359,0.7669902912621359,0.7766990291262136,0.7669902912621359,0.7475728155339806,0.7378640776699029,0.7669902912621359,0.7669902912621359,0.7669902912621359,0.7572815533980582,0.7766990291262136,0.7475728155339806,0.7864077669902912,0.6601941747572816,0.7669902912621359,0.7669902912621359,0,0.8155339805825242,0.7669902912621359,0.7766990291262136,0.7864077669902912,0.7669902912621359,0.6796116504854369,0.7766990291262136,0.7669902912621359,0.7766990291262136,0.7669902912621359,0.7572815533980582,0.7766990291262136,0.7281553398058253,0.7184466019417476,0.7669902912621359,0.7475728155339806,0.7961165048543689,0.7669902912621359,0.7572815533980582,0.7864077669902912,0.7087378640776699,0.7766990291262136,0.7766990291262136,0.7766990291262136,0.7475728155339806,0.5631067961165048,0.7961165048543689,0.7281553398058253,0.7669902912621359,0.7961165048543689,0.7669902912621359,0.7864077669902912,0.7669902912621359,0.7378640776699029,0.7669902912621359,0.7572815533980582,0.7669902912621359,0.7669902912621359,0.7766990291262136,0,0.7669902912621359,0.7669902912621359,0.7864077669902912,0.6310679611650486,0.5048543689320388,0.7669902912621359,0.7766990291262136,0.7766990291262136,0.7864077669902912,0.7669902912621359,0.7669902912621359,0.7669902912621359,0.7572815533980582,0.7184466019417476,0.7766990291262136,0.7669902912621359,0.7572815533980582,0.7766990291262136,0.7669902912621359,0.7961165048543689,0.7087378640776699,0.7184466019417476,0.7766990291262136,0.7766990291262136,0.7669902912621359,0.7766990291262136,0.7669902912621359,0.7766990291262136,0.7281553398058253,0.7766990291262136,0,0.7281553398058253,0.5048543689320388,0.6601941747572816,0.7669902912621359,0.7669902912621359,0.7961165048543689,0.7669902912621359,0.7766990291262136,0.7766990291262136,0.7669902912621359,0.7184466019417476,0.7669902912621359,0.7669902912621359,0.7378640776699029,0.7961165048543689,0.7669902912621359,0.7669902912621359,0.49514563106796117,0.7281553398058253,0.7961165048543689,0.7766990291262136,0.7864077669902912,0.7669902912621359,0,0.7475728155339806,0.7961165048543689,0.7669902912621359,0.7766990291262136,0.7669902912621359,0.7766990291262136,0.7572815533980582,0.7669902912621359,0.7572815533980582,0.7766990291262136,0.7669902912621359,0.7669902912621359,0.7961165048543689,0.7766990291262136,0.7475728155339806
958,0.9965397923875432,0.9930795847750865,0.9204152249134948,0.9965397923875432,0.0,0.9965397923875432,0.9982698961937716,1.0,1.0,0.9567474048442907,0.9377162629757786,0.856401384083045,0.9965397923875432,0.0,0.9342560553633218,0.9307958477508651,0.9982698961937716,0.9948096885813149,0.9878892733564014,0.9965397923875432,0.9878892733564014,0.9948096885813149,0.9965397923875432,0.9377162629757786,0.856401384083045,0.9342560553633218,0.9826989619377162,0.9965397923875432,0.9965397923875432,0.856401384083045,0.856401384083045,0.856401384083045,0.9965397923875432,0.9359861591695502,0.9965397923875432,0.9844290657439446,1.0,0.9204152249134948,0.9878892733564014,0,0.9377162629757786,1.0,0.889273356401384,0.9325259515570934,0.9965397923875432,1.0,0.889273356401384,0.856401384083045,0.9567474048442907,0.9377162629757786,0.9913494809688581,1.0,0.903114186851211,0.9290657439446367,0.856401384083045,0.9775086505190311,0.9965397923875432,0.9844290657439446,0.9896193771626297,0.9948096885813149,0.9844290657439446,0.9948096885813149,0.9965397923875432,0.9342560553633218,0.9653979238754326,0.38581314878892736,0.9878892733564014,0.9948096885813149,0.856401384083045,0.9948096885813149,0.986159169550173,0.9965397923875432,0.856401384083045,0.986159169550173,0.9342560553633218,1.0,0.986159169550173,0.856401384083045,0.9342560553633218,0,0.9532871972318339,0.0,0.9965397923875432,0.0,0.0,0.8529411764705882,0.9013840830449827,0.9653979238754326,0.9965397923875432,0.9117647058823529,0.856401384083045,0.9930795847750865,0.986159169550173,1.0,0.986159169550173,0.0,0.9965397923875432,0.9948096885813149,0.856401384083045,0.9948096885813149,1.0,0.47231833910034604,0.9965397923875432,0.9948096885813149,0.8737024221453287,0.9965397923875432,0.9965397923875432,0.889273356401384,0.0,0.9965397923875432,0,1.0,0.0,0.856401384083045,0.9948096885813149,0.9878892733564014,1.0,0.9965397923875432,0.9878892733564014,0.9948096885813149,0.856401384083045,0.7006920415224913,0.856401384083045,0.0,0.9948096885813149,0.9948096885813149,0.0,0.9965397923875432,0.0,0.9982698961937716,0.9896193771626297,0.9982698961937716,0.9948096885813149,0.9273356401384083,0,0.9377162629757786,0.9982698961937716,0.9256055363321799,0.9982698961937716,0.9982698961937716,0.9982698961937716,0.9930795847750865,0.856401384083045,0.9965397923875432,0.9965397923875432,0.972318339100346,0.745674740484429,0.9965397923875432,0.9982698961937716,0.9965397923875432
962,0.998,0.998,0.96,0.998,0.87,0.996,1.0,0.998,0.998,0.9,0.998,0.9,0.996,0.996,0.96,0.998,0.998,0.976,0.96,0.998,0.96,0.994,0.998,0.998,0.9,0.958,0.992,0.998,0.998,0.9,0.9,0.986,0.998,0.998,0.998,0.996,0.998,0.9,0.9,0,0.902,0.998,0.958,0.998,0.996,0.796,0.96,0.9,0.9,0.998,0.998,0.998,0.948,0.9,0.9,0.962,0.998,0.998,0.998,0.998,0.996,0.998,0.998,0.96,0.998,0.998,0.996,0.968,0.9,0.998,0.996,0.998,0.9,0.982,0.902,0.998,0.964,0.9,0.96,0,0.9,0.958,0.944,0.878,0.878,0.896,0.982,0.962,0.998,0.9,0.9,0.996,0.996,0.998,0.988,0.868,0.998,0.998,0.9,0.998,0.996,0.99,0.998,0.902,0.9,0.95,0.998,0.958,0.902,0.998,0,0.954,0.872,0.9,0.996,0.996,0.998,0.994,0.964,0.998,0.9,0.658,0.93,0.9,1.0,0.998,0.96,0.998,0.674,0.998,0.996,0.998,0.998,0.96,0,0.998,0.998,0.96,0.998,0.996,0.998,0.998,0.9,0.998,0.998,0.984,0.998,0.998,0.998,0.998
966,0.9492537313432836,0.9582089552238806,0.9313432835820895,0.9492537313432836,0.8477611940298507,0.9641791044776119,0.8388059701492537,0.9611940298507463,0.9582089552238806,0.9074626865671642,0.9074626865671642,0.9134328358208955,0.9522388059701492,0.9402985074626866,0.9373134328358209,0.9104477611940298,0.9641791044776119,0.9462686567164179,0.9343283582089552,0.9402985074626866,0.9343283582089552,0.9522388059701492,0.9432835820895522,0.9074626865671642,0.9074626865671642,0.9343283582089552,0.9074626865671642,0.9253731343283582,0.9492537313432836,0.9074626865671642,0.9074626865671642,0.9164179104477612,0.9582089552238806,0.9074626865671642,0.9552238805970149,0.9402985074626866,0.9552238805970149,0.9074626865671642,0.9402985074626866,0,0.8925373134328358,0.9552238805970149,0.9223880597014925,0.8985074626865671,0.9582089552238806,0.14328358208955225,0.9223880597014925,0.9074626865671642,0.9343283582089552,0.0,0.9373134328358209,0.9552238805970149,0.9313432835820895,0.9402985074626866,0.9074626865671642,0.9432835820895522,0.9582089552238806,0.9074626865671642,0.9223880597014925,0.9343283582089552,0.9402985074626866,0.9462686567164179,0.9402985074626866,0.9373134328358209,0.9194029850746268,0.4597014925373134,0.9432835820895522,0.9611940298507463,0.9074626865671642,0.9402985074626866,0.9373134328358209,0.9432835820895522,0.9074626865671642,0.9283582089552239,0.9074626865671642,0.9492537313432836,0.9462686567164179,0.9074626865671642,0.9373134328358209,0,0.9074626865671642,0.9552238805970149,0.9492537313432836,0.9014925373134328,0.8507462686567164,0.9074626865671642,0.9402985074626866,0.9343283582089552,0.9402985074626866,0.9074626865671642,0.9074626865671642,0.9402985074626866,0.9402985074626866,0.9582089552238806,0.9253731343283582,0.8507462686567164,0.9492537313432836,0.9402985074626866,0.9074626865671642,0.9373134328358209,0.9582089552238806,0.8567164179104477,0.9582089552238806,0.9492537313432836,0.9074626865671642,0.9313432835820895,0.9611940298507463,0.9223880597014925,0.9014925373134328,0.9611940298507463,0,0.9373134328358209,0.8507462686567164,0.9044776119402985,0.9552238805970149,0.9462686567164179,0.9552238805970149,0.9462686567164179,0.9462686567164179,0.9641791044776119,0.9223880597014925,0.7164179104477612,0.9194029850746268,0.9074626865671642,0.9134328358208955,0.9313432835820895,0.9074626865671642,0.9522388059701492,0.19701492537313434,0.9552238805970149,0.9432835820895522,0.9611940298507463,0.9402985074626866,0.9283582089552239,0,0.9074626865671642,0.9522388059701492,0.9313432835820895,0.9611940298507463,0.9552238805970149,0.9253731343283582,0.9343283582089552,0.9074626865671642,0.9522388059701492,0.9492537313432836,0.9134328358208955,0.8925373134328358,0.9552238805970149,0.9552238805970149,0.9522388059701492
967,0.8823529411764706,0.8921568627450981,0.803921568627451,0.8137254901960784,0.8235294117647058,0.8627450980392157,0.8725490196078431,0.9117647058823529,0.9117647058823529,0.7058823529411765,0.7647058823529411,0.7549019607843137,0.8529411764705882,0.8529411764705882,0.8431372549019608,0.7843137254901961,0.8725490196078431,0.8137254901960784,0.803921568627451,0.803921568627451,0.7745098039215687,0.8333333333333334,0.803921568627451,0.7647058823529411,0.6470588235294118,0.8431372549019608,0.7254901960784313,0.9019607843137255,0.8235294117647058,0.6274509803921569,0.6274509803921569,0.7058823529411765,0.8823529411764706,0.7647058823529411,0.8921568627450981,0.8333333333333334,0.9313725490196079,0.6274509803921569,0.803921568627451,0,0.7647058823529411,0.9117647058823529,0.7647058823529411,0.7843137254901961,0.8725490196078431,0.9117647058823529,0.7647058823529411,0.6274509803921569,0.803921568627451,0.7647058823529411,0.8725490196078431,0.8823529411764706,0.7745098039215687,0.7647058823529411,0.5882352941176471,0.7941176470588235,0.8725490196078431,0.7352941176470589,0.8137254901960784,0.803921568627451,0.8235294117647058,0.8137254901960784,0.803921568627451,0.8431372549019608,0.7352941176470589,0.7843137254901961,0.8627450980392157,0.8627450980392157,0.6274509803921569,0.803921568627451,0.8627450980392157,0.8725490196078431,0.6274509803921569,0.8921568627450981,0.7647058823529411,0.9019607843137255,0.7941176470588235,0.6274509803921569,0.8431372549019608,0,0.6274509803921569,0.8333333333333334,0.8529411764705882,0.43137254901960786,0.8235294117647058,0.5980392156862745,0.8137254901960784,0.803921568627451,0.803921568627451,0.6274509803921569,0.6274509803921569,0.8529411764705882,0.8921568627450981,0.9313725490196079,0.7254901960784313,0.8235294117647058,0.8823529411764706,0.8627450980392157,0.7254901960784313,0.803921568627451,0.9411764705882353,0.6568627450980392,0.8627450980392157,0.8529411764705882,0.5686274509803921,0.803921568627451,0.8823529411764706,0.7647058823529411,0.5392156862745098,0.8431372549019608,0,0.9215686274509803,0.8235294117647058,0.5980392156862745,0.8529411764705882,0.8627450980392157,0.8725490196078431,0.8235294117647058,0.7941176470588235,0.9411764705882353,0.7058823529411765,0.7745098039215687,0.7450980392156863,0.6274509803921569,0.8431372549019608,0.9117647058823529,0.8235294117647058,0.8431372549019608,0.8235294117647058,0.9313725490196079,0.8725490196078431,0.9313725490196079,0.8235294117647058,0.7450980392156863,0,0.7843137254901961,0.9019607843137255,0.7843137254901961,0.9117647058823529,0.8529411764705882,0.8921568627450981,0.9215686274509803,0.6274509803921569,0.8529411764705882,0.803921568627451,0.7254901960784313,0.7941176470588235,0.8529411764705882,0.9117647058823529,0.8431372549019608
970,0.9620853080568721,0.9478672985781991,0.985781990521327,0.990521327014218,0.957345971563981,0.9620853080568721,0.990521327014218,0.990521327014218,0.990521327014218,0.7677725118483413,0.8293838862559242,0.909952606635071,0.985781990521327,0.0,0.8151658767772512,0.8483412322274881,0.990521327014218,0.990521327014218,0.990521327014218,0.966824644549763,0.985781990521327,0.990521327014218,0.976303317535545,0.8293838862559242,0.6208530805687204,0.8151658767772512,0.5971563981042654,0.990521327014218,0.9715639810426541,0.6208530805687204,0.6208530805687204,0.8056872037914692,0.966824644549763,0.8293838862559242,0.976303317535545,0.9715639810426541,0.990521327014218,0.6729857819905213,0.976303317535545,0,0.8957345971563981,0.981042654028436,0.8862559241706162,0.9241706161137441,0.9620853080568721,0.990521327014218,0.8862559241706162,0.6208530805687204,0.9146919431279621,0.8199052132701422,0.0,0.995260663507109,0.9052132701421801,0.985781990521327,0.6350710900473934,0.985781990521327,0.985781990521327,0.8815165876777251,0.8056872037914692,0.995260663507109,0.966824644549763,0.9715639810426541,0.9715639810426541,0.8151658767772512,0.6824644549763034,0.909952606635071,0.976303317535545,0.957345971563981,0.6208530805687204,0.9715639810426541,0.95260663507109,0.990521327014218,0.6066350710900474,0.8957345971563981,0.8625592417061612,0.990521327014218,0.985781990521327,0.6208530805687204,0.8151658767772512,0,0.9383886255924171,0.8957345971563981,0.981042654028436,0.5402843601895735,0.957345971563981,0.5497630331753555,0.990521327014218,0.985781990521327,0.985781990521327,0.6208530805687204,0.6208530805687204,0.9289099526066351,0.919431279620853,0.985781990521327,0.8815165876777251,0.9478672985781991,0.981042654028436,0.976303317535545,0.6777251184834123,0.995260663507109,0.985781990521327,0.8720379146919431,0.985781990521327,0.9715639810426541,0.5924170616113744,0.985781990521327,0.9478672985781991,0.8862559241706162,0.5355450236966824,0.990521327014218,0,0.995260663507109,0.957345971563981,0.5971563981042654,0.95260663507109,0.9715639810426541,0.985781990521327,0.981042654028436,0.981042654028436,0.966824644549763,1.0,0.990521327014218,0.9289099526066351,0.6208530805687204,0.9478672985781991,0.957345971563981,0.6208530805687204,0.990521327014218,0.957345971563981,0.985781990521327,0.9715639810426541,0.957345971563981,0.995260663507109,0.9289099526066351,0,0.9289099526066351,0.9715639810426541,0.985781990521327,0.985781990521327,0.995260663507109,0.990521327014218,0.95260663507109,0.6208530805687204,0.985781990521327,0.985781990521327,0.7962085308056872,0.985781990521327,0.990521327014218,0.981042654028436,0.966824644549763
971,0.0,0.982,1.0,1.0,0.0,0.996,0.998,0.998,0.998,0.974,0.988,0.0,0.996,0.0,0.982,0.988,1.0,1.0,0.0,0.996,1.0,0.996,0.998,0.9,0.998,0.982,0.9,1.0,0.998,0.0,0.9,0.992,0.0,0.982,1.0,0.998,0.998,0.9,0.998,0,0.9,1.0,0.944,1.0,0.996,0.938,0.976,0.9,0.958,0.0,0.0,0.998,0.974,0.998,1.0,1.0,1.0,0.968,0.928,1.0,0.998,0.998,0.998,0.982,0.98,0.9,1.0,0.992,0.9,0.998,0.984,1.0,0.994,1.0,0.994,0.996,1.0,0.9,0.982,0,0.974,0.954,0.998,0.996,0.904,0.932,0.998,0.0,0.998,0.922,0.9,0.98,1.0,0.0,0.99,0.9,0.0,1.0,0.9,1.0,1.0,0.964,1.0,1.0,1.0,1.0,0.998,0.944,1.0,0.998,0,0.0,0.904,1.0,0.0,0.998,0.998,0.994,1.0,0.986,0.992,0.914,0.906,0.9,0.992,0.982,0.9,0.996,0.856,0.996,1.0,0.998,1.0,0.934,0,0.9,1.0,1.0,1.0,0.996,0.972,0.984,0.9,1.0,0.998,0.98,0.0,0.998,0.998,0.0
976,0.8988358089120835,0.9654757125652349,0.885989562424729,0.9803291850662385,0.0,0.9835407466880771,0.9578482537133681,0.9871537535126456,0.9855479727017262,0.9622641509433962,0.8398233641107988,0.8378161380971497,0.9783219590525893,0.0,0.8598956242472903,0.8446407065435568,0.9634684865515857,0.951023685266961,0.8759534323564834,0.9771176234443998,0.8988358089120835,0.9771176234443998,0.9755118426334806,0.8831794460056203,0.0,0.8378161380971497,0.9771176234443998,0.9594540345242875,0.9783219590525893,0.0,0.8378161380971497,0.9144921718185468,0.9867523083099157,0.8550782818145323,0.9867523083099157,0.9108791649939784,0.9899638699317543,0.8378161380971497,0.9574468085106383,0,0.7775993576876756,0.985949417904456,0.8847852268165396,0.8438378161380972,0.9775190686471297,0.988358089120835,0.8847852268165396,0.8378161380971497,0.8426334805299077,0.8775592131674026,0.0,0.9839421918908069,0.8570855078281815,0.9377759935768768,0.8378161380971497,0.8968285828984344,0.9847450822962666,0.9843436370935368,0.9718988358089121,0.9831393014853472,0.9594540345242875,0.9771176234443998,0.97671617824167,0.8598956242472903,0.9229225210758731,0.7647531112003212,0.9783219590525893,0.9678843837816138,0.8663187474909675,0.9759132878362103,0.9357687675632276,0.9546366920915295,0.8538739462063428,0.9317543155359294,0.8458450421517463,0.9831393014853472,0.8904054596547571,0.8378161380971497,0.8598956242472903,0,0.9169008430349257,0.0,0.9823364110798876,0.0,0.0,0.9173022882376556,0.9566439181051787,0.8759534323564834,0.9759132878362103,0.9305499799277399,0.8378161380971497,0.9546366920915295,0.9494179044560418,0.8847852268165396,0.9775190686471297,0.0,0.927739863508631,0.9795262946607788,0.871938980329185,0.9831393014853472,0.9887595343235648,0.9313528703331995,0.9839421918908069,0.9048574869530309,0.8374146928944199,0.9466077880369329,0.9811320754716981,0.8847852268165396,0.0,0.985949417904456,0,0.8847852268165396,0.0,0.8968285828984344,0.0,0.9779205138498595,0.979124849458049,0.9779205138498595,0.8900040144520273,0.9823364110798876,0.9173022882376556,0.8932155760738659,0.8839823364110799,0.0,0.967482938578884,0.9638699317543156,0.0,0.9763147330389402,0.0,0.9879566439181052,0.9795262946607788,0.9867523083099157,0.9875551987153753,0.88358089120835,0,0.8663187474909675,0.9875551987153753,0.885989562424729,0.990766760337214,0.9803291850662385,0.9450020072260137,0.9566439181051787,0.8378161380971497,0.9811320754716981,0.9771176234443998,0.9686872741870735,0.8819751103974307,0.9831393014853472,0.9815335206744279,0.9803291850662385
978,0.996,0.998,0.984,0.992,0.87,0.994,0.838,0.992,0.994,0.912,0.9,0.956,0.992,0.0,0.98,0.902,1.0,0.994,0.982,0.992,0.984,0.992,0.992,0.906,0.9,0.98,0.9,0.988,0.992,0.0,0.9,0.958,0.0,0.908,0.986,0.96,0.992,0.9,0.99,0,0.9,0.998,0.9,0.902,0.996,0.884,0.9,0.9,0.978,0.9,0.0,0.998,0.898,0.994,0.9,0.99,0.994,0.988,0.91,0.99,0.982,0.99,0.992,0.98,0.92,0.77,0.0,0.998,0.9,0.99,0.988,1.0,0.9,0.974,0.902,0.996,0.99,0.9,0.98,0,0.964,0.898,0.994,0.0,0.87,0.9,0.996,0.986,0.99,0.9,0.9,0.992,0.99,0.998,0.968,0.864,0.994,0.986,0.9,0.992,0.998,0.96,0.994,0.996,0.9,0.982,0.996,0.9,0.0,0.998,0,0.998,0.87,0.894,0.0,0.974,0.994,0.99,0.988,0.996,0.99,0.906,0.9,0.9,0.0,0.99,0.9,0.992,0.688,0.998,0.978,0.996,0.994,0.9,0,0.908,0.998,0.984,0.998,0.992,0.992,0.998,0.9,0.994,0.992,0.952,0.942,0.994,0.998,0.0
979,0.8784,0.8184,0.8936,0.8952,0.0,0.8864,0.8584,0.8896,0.8928,0.8904,0.7528,0.6616,0.8928,0.0,0.7632,0.7584,0.8584,0.8688,0.892,0.8936,0.8808,0.8928,0.8824,0.7288,0.6616,0.7624,0.6424,0.8584,0.888,0.0,0.6616,0.8752,0.0,0.7584,0.908,0.8688,0.8952,0.6616,0.8808,0,0.756,0.8832,0.8416,0.7888,0.8816,0.8752,0.86,0.6616,0.7304,0.768,0.0,0.8912,0.7032,0.7616,0.6632,0.8712,0.8936,0.7512,0.668,0.8688,0.8856,0.892,0.8912,0.7632,0.8608,0.7568,0.904,0.8824,0.7072,0.892,0.8616,0.8768,0.6616,0.7824,0.7808,0.8848,0.8904,0.6616,0.7632,0,0.8416,0.0,0.8992,0.0,0.0,0.6448,0.8624,0.8992,0.8864,0.8464,0.6616,0.84,0.8256,0.8872,0.8824,0.0,0.8992,0.8992,0.6616,0.8512,0.8816,0.8448,0.8896,0.8512,0.6584,0.8648,0.88,0.8416,0.0,0.8976,0,0.8824,0.0,0.6552,0.0,0.8952,0.8928,0.8816,0.8872,0.0,0.8744,0.8312,0.6624,0.0,0.8208,0.8056,0.0,0.8896,0.0,0.8872,0.8928,0.8888,0.8672,0.716,0,0.7784,0.8936,0.8944,0.8944,0.8832,0.8584,0.8272,0.6616,0.8952,0.8984,0.8912,0.8648,0.8952,0.8904,0.0
980,0.9836298932384342,0.9708185053380783,0.993594306049822,0.9857651245551602,0.9188612099644128,0.9850533807829182,0.9886120996441281,0.9864768683274021,0.9907473309608541,0.898220640569395,0.9444839857651246,0.898220640569395,0.9800711743772242,0.0,0.898220640569395,0.9722419928825623,0.9864768683274021,0.995729537366548,0.9928825622775801,0.9836298932384342,0.993594306049822,0.9843416370106761,0.9843416370106761,0.9722419928825623,0.898220640569395,0.898220640569395,0.9103202846975089,0.9871886120996441,0.9864768683274021,0.0,0.898220640569395,0.8975088967971531,0.0,0.9750889679715302,0.9822064056939501,0.9402135231316726,0.9914590747330961,0.898220640569395,0.9857651245551602,0,0.8669039145907473,0.9907473309608541,0.898220640569395,0.9750889679715302,0.9829181494661922,0.9928825622775801,0.898220640569395,0.898220640569395,0.9672597864768683,0.9601423487544484,0.0,0.9871886120996441,0.8782918149466192,0.9907473309608541,0.898220640569395,0.99644128113879,0.9886120996441281,0.906761565836299,0.898220640569395,0.99644128113879,0.9530249110320285,0.9822064056939501,0.9836298932384342,0.898220640569395,0.8975088967971531,0.8882562277580072,0.0,0.9829181494661922,0.898220640569395,0.9857651245551602,0.9665480427046264,0.9822064056939501,0.898220640569395,0.9594306049822064,0.9572953736654805,0.9879003558718861,0.9971530249110321,0.898220640569395,0.898220640569395,0,0.9423487544483986,0.898220640569395,0.9879003558718861,0.0,0.9259786476868327,0.898220640569395,0.9814946619217082,0.993594306049822,0.9857651245551602,0.9501779359430605,0.898220640569395,0.9729537366548042,0.9814946619217082,0.9843416370106761,0.906761565836299,0.9053380782918149,0.9907473309608541,0.9800711743772242,0.898220640569395,0.995729537366548,0.993594306049822,0.5131672597864768,0.9900355871886121,0.9779359430604982,0.898220640569395,0.9921708185053381,0.9871886120996441,0.898220640569395,0.0,0.9907473309608541,0,0.9900355871886121,0.9259786476868327,0.898220640569395,0.0,0.0,0.9886120996441281,0.9765124555160143,0.9971530249110321,0.9871886120996441,0.9758007117437723,0.894661921708185,0.898220640569395,0.898220640569395,0.9772241992882562,0.9729537366548042,0.9252669039145908,0.9765124555160143,0.0,0.9900355871886121,0.0,0.9879003558718861,0.993594306049822,0.898220640569395,0,0.9309608540925267,0.9900355871886121,0.994306049822064,0.9907473309608541,0.9843416370106761,0.9864768683274021,0.9786476868327402,0.898220640569395,0.9871886120996441,0.9864768683274021,0.903202846975089,0.9437722419928826,0.9879003558718861,0.9921708185053381,0.0
982,0.8421052631578947,0.7368421052631579,0.6973684210526315,0.8026315789473685,0.8157894736842105,0.8157894736842105,0.8552631578947368,0.8421052631578947,0.8421052631578947,0.6578947368421053,0.881578947368421,0.7631578947368421,0.8289473684210527,0.8421052631578947,0.75,0.8026315789473685,0.868421052631579,0.6973684210526315,0.7105263157894737,0.8157894736842105,0.7631578947368421,0.8157894736842105,0.8157894736842105,0.8289473684210527,0.4868421052631579,0.75,0.6447368421052632,0.8421052631578947,0.8289473684210527,0.6842105263157895,0.5394736842105263,0.5921052631578947,0.8157894736842105,0.8157894736842105,0.8421052631578947,0.8026315789473685,0.7894736842105263,0.868421052631579,0.7763157894736842,0,0.8421052631578947,0.8552631578947368,0.6973684210526315,0.868421052631579,0.8289473684210527,0.7105263157894737,0.6973684210526315,0.5394736842105263,0.8026315789473685,0.8421052631578947,0.8026315789473685,0.8552631578947368,0.5789473684210527,0.8157894736842105,0.4342105263157895,0.7763157894736842,0.8289473684210527,0.631578947368421,0.8552631578947368,0.8157894736842105,0.7894736842105263,0.7894736842105263,0.8026315789473685,0.75,0.6842105263157895,0.8289473684210527,0.7763157894736842,0.8421052631578947,0.5394736842105263,0.8157894736842105,0.8552631578947368,0.8026315789473685,0.5,0.7631578947368421,0.868421052631579,0.8421052631578947,0.7368421052631579,0.5394736842105263,0.75,0,0.5394736842105263,0.6710526315789473,0.8157894736842105,0.4868421052631579,0.8026315789473685,0.4605263157894737,0.8552631578947368,0.7105263157894737,0.8157894736842105,0.5394736842105263,0.5394736842105263,0.75,0.7631578947368421,0.7368421052631579,0.6052631578947368,0.6842105263157895,0.8026315789473685,0.8421052631578947,0.5394736842105263,0.8289473684210527,0.75,0.6052631578947368,0.7631578947368421,0.7236842105263158,0.5657894736842105,0.7894736842105263,0.8421052631578947,0.6973684210526315,0.5263157894736842,0.7894736842105263,0,0.6973684210526315,0.8026315789473685,0.4605263157894737,0.8421052631578947,0.7894736842105263,0.8421052631578947,0.8552631578947368,0.7631578947368421,0.7368421052631579,0.8157894736842105,0.8289473684210527,0.6842105263157895,0.5394736842105263,0.75,0.6973684210526315,0.5394736842105263,0.8289473684210527,0.5394736842105263,0.8157894736842105,0.8157894736842105,0.8026315789473685,0.8421052631578947,0.6973684210526315,0,0.8289473684210527,0.8289473684210527,0.6710526315789473,0.8157894736842105,0.8289473684210527,0.881578947368421,0.6842105263157895,0.5394736842105263,0.7894736842105263,0.7894736842105263,0.6447368421052632,0.7763157894736842,0.8421052631578947,0.8421052631578947,0.8289473684210527
983,0.7154471544715447,0.6639566395663956,0.6639566395663956,0.6585365853658537,0.6097560975609756,0.7181571815718157,0.6829268292682927,0.6612466124661247,0.6856368563685636,0.6449864498644986,0.6504065040650406,0.6504065040650406,0.7018970189701897,0.7154471544715447,0.6260162601626016,0.5420054200542005,0.6720867208672087,0.6314363143631436,0.6883468834688347,0.6585365853658537,0.6720867208672087,0.6449864498644986,0.6612466124661247,0.6016260162601627,0.5962059620596206,0.6260162601626016,0.6151761517615176,0.6747967479674797,0.6910569105691057,0.5718157181571816,0.5718157181571816,0.6233062330623306,0.7100271002710027,0.5907859078590786,0.6883468834688347,0.6775067750677507,0.6639566395663956,0.6043360433604336,0.6531165311653117,0,0.6504065040650406,0.6693766937669376,0.6314363143631436,0.6151761517615176,0.7154471544715447,0.6856368563685636,0.6314363143631436,0.5718157181571816,0.6124661246612466,0.6504065040650406,0.6991869918699187,0.6720867208672087,0.6205962059620597,0.5799457994579946,0.5663956639566395,0.6802168021680217,0.6639566395663956,0.6124661246612466,0.5528455284552846,0.5880758807588076,0.6476964769647696,0.6422764227642277,0.6504065040650406,0.6260162601626016,0.6287262872628726,0.6531165311653117,0.6883468834688347,0.6666666666666666,0.6205962059620597,0.6639566395663956,0.6991869918699187,0.7127371273712737,0.6151761517615176,0.6720867208672087,0.6531165311653117,0.7046070460704607,0.6775067750677507,0.5718157181571816,0.6260162601626016,0,0.6476964769647696,0.5718157181571816,0.6829268292682927,0.0,0.6395663956639567,0.5934959349593496,0.6639566395663956,0.6829268292682927,0.6802168021680217,0.6070460704607046,0.5718157181571816,0.6883468834688347,0.6639566395663956,0.6856368563685636,0.6612466124661247,0.6233062330623306,0.6991869918699187,0.6802168021680217,0.6124661246612466,0.5880758807588076,0.6802168021680217,0.6124661246612466,0.6747967479674797,0.6097560975609756,0.5474254742547425,0.5691056910569106,0.7073170731707317,0.6314363143631436,0.0,0.6612466124661247,0,0.6856368563685636,0.6422764227642277,0.6070460704607046,0.7208672086720868,0.6883468834688347,0.7046070460704607,0.7046070460704607,0.6964769647696477,0.7018970189701897,0.6260162601626016,0.6097560975609756,0.6585365853658537,0.5718157181571816,0.6585365853658537,0.6666666666666666,0.5799457994579946,0.6964769647696477,0.5691056910569106,0.7073170731707317,0.6964769647696477,0.7018970189701897,0.5934959349593496,0.6476964769647696,0,0.6639566395663956,0.6910569105691057,0.6639566395663956,0.6883468834688347,0.6829268292682927,0.6829268292682927,0.7262872628726287,0.5718157181571816,0.6829268292682927,0.6612466124661247,0.6666666666666666,0.6639566395663956,0.6747967479674797,0.6612466124661247,0.6991869918699187
986,0.6813186813186813,0.6043956043956044,0.6813186813186813,0.6593406593406593,0.5054945054945055,0.6483516483516484,0.5494505494505495,0.6593406593406593,0.5824175824175825,0.6703296703296703,0.6813186813186813,0.0,0.6703296703296703,0.0,0.6813186813186813,0.6593406593406593,0.5384615384615384,0.6373626373626373,0.0,0.6813186813186813,0.6813186813186813,0.0,0.6703296703296703,0.6813186813186813,0.6813186813186813,0.6813186813186813,0.6703296703296703,0.5384615384615384,0.6593406593406593,0.0,0.6813186813186813,0.6593406593406593,0.0,0.6813186813186813,0.6813186813186813,0.6373626373626373,0.6263736263736264,0.6813186813186813,0.6593406593406593,0,0.6373626373626373,0.0,0.6703296703296703,0.5824175824175825,0.6593406593406593,0.5274725274725275,0.6703296703296703,0.6813186813186813,0.7032967032967034,0.0,0.0,0.6593406593406593,0.6813186813186813,0.6373626373626373,0.6703296703296703,0.5934065934065934,0.6483516483516484,0.6813186813186813,0.6813186813186813,0.6923076923076923,0.5604395604395604,0.6813186813186813,0.6813186813186813,0.6813186813186813,0.5934065934065934,0.5054945054945055,0.6703296703296703,0.6703296703296703,0.6813186813186813,0.6813186813186813,0.6813186813186813,0.5824175824175825,0.6813186813186813,0.6483516483516484,0.6813186813186813,0.6263736263736264,0.6593406593406593,0.6813186813186813,0.6813186813186813,0,0.6813186813186813,0.6813186813186813,0.6593406593406593,0.6923076923076923,0.5604395604395604,0.6703296703296703,0.6813186813186813,0.0,0.6813186813186813,0.6813186813186813,0.6813186813186813,0.6593406593406593,0.6923076923076923,0.0,0.6593406593406593,0.0,0.6593406593406593,0.6813186813186813,0.6813186813186813,0.6593406593406593,0.6483516483516484,0.4945054945054945,0.5824175824175825,0.6263736263736264,0.6813186813186813,0.0,0.6593406593406593,0.6703296703296703,0.6043956043956044,0.6263736263736264,0,0.0,0.5934065934065934,0.5824175824175825,0.0,0.6703296703296703,0.6043956043956044,0.6813186813186813,0.0,0.6483516483516484,0.6813186813186813,0.6373626373626373,0.6813186813186813,0.6813186813186813,0.6373626373626373,0.5824175824175825,0.6813186813186813,0.6813186813186813,0.0,0.5934065934065934,0.6703296703296703,0.0,0.6703296703296703,0.6813186813186813,0,0.5604395604395604,0.6373626373626373,0.6703296703296703,0.6263736263736264,0.6593406593406593,0.6043956043956044,0.6153846153846154,0.6813186813186813,0.6483516483516484,0.6593406593406593,0.6813186813186813,0.0,0.6593406593406593,0.0,0.0
