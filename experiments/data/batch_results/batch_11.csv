0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
1452,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9197860962566845,0.9786096256684492,0.7967914438502673,0.9786096256684492,0.9732620320855615,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9732620320855615,0.9679144385026738,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9732620320855615,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.93048128342246,0.9786096256684492,0.9786096256684492,0,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.7486631016042781,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9732620320855615,0.9679144385026738,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.5935828877005348,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9732620320855615,0.9786096256684492,0.9786096256684492,0.9786096256684492,0,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9197860962566845,0.9786096256684492,0.9732620320855615,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9679144385026738,0.9786096256684492,0.9679144385026738,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9679144385026738,0.9572192513368984,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0,0.9625668449197861,0.9197860962566845,0.983957219251337,0.9786096256684492,0.9786096256684492,0.9732620320855615,0.9786096256684492,0.9786096256684492,0.9625668449197861,0.9786096256684492,0.5935828877005348,0.9786096256684492,0.9786096256684492,0.946524064171123,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9411764705882353,0.9625668449197861,0.9786096256684492,0.9732620320855615,0.9786096256684492,0.9786096256684492,0,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9732620320855615,0.9625668449197861,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.9786096256684492,0.93048128342246,0.9786096256684492,0.9679144385026738,0.9786096256684492
1453,0.8777777777777778,0.8666666666666667,0.8740740740740741,0.8740740740740741,0.1962962962962963,0.8814814814814815,0.7555555555555555,0.8814814814814815,0.8703703703703703,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8703703703703703,0.0,0.8740740740740741,0.8703703703703703,0.8851851851851852,0.837037037037037,0.8777777777777778,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.837037037037037,0.8592592592592593,0.8740740740740741,0.8740740740740741,0,0.8740740740740741,0.8592592592592593,0.8740740740740741,0.8777777777777778,0.8814814814814815,0.8814814814814815,0.8740740740740741,0.8740740740740741,0.8629629629629629,0.8740740740740741,0.0,0.8555555555555555,0.8296296296296296,0.8703703703703703,0.8740740740740741,0.8703703703703703,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8296296296296296,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8555555555555555,0.5925925925925926,0.8888888888888888,0.8851851851851852,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8888888888888888,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8666666666666667,0.8629629629629629,0.8740740740740741,0.8740740740740741,0,0.8740740740740741,0.8740740740740741,0.8777777777777778,0.8333333333333334,0.1962962962962963,0.8740740740740741,0.8703703703703703,0.8703703703703703,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8814814814814815,0.8518518518518519,0.8629629629629629,0.8703703703703703,0.7814814814814814,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8740740740740741,0.8629629629629629,0.8333333333333334,0.8777777777777778,0.8666666666666667,0.8740740740740741,0.8703703703703703,0.8703703703703703,0.8740740740740741,0.8629629629629629,0.8740740740740741,0,0.8703703703703703,0.1962962962962963,0.8777777777777778,0.8740740740740741,0.8814814814814815,0.8666666666666667,0.8777777777777778,0.8740740740740741,0.8777777777777778,0.8740740740740741,0.6074074074074074,0.8740740740740741,0.8740740740740741,0.8407407407407408,0.8703703703703703,0.8740740740740741,0.8814814814814815,0.8703703703703703,0.8629629629629629,0.8814814814814815,0.8777777777777778,0.8814814814814815,0.8555555555555555,0,0.8555555555555555,0.8814814814814815,0.8740740740740741,0.8777777777777778,0.8777777777777778,0.8740740740740741,0.8592592592592593,0.8740740740740741,0.8777777777777778,0.8740740740740741,0.8740740740740741,0.15185185185185185,0.8777777777777778,0.8629629629629629,0.8814814814814815
1466,0.8890977443609023,1.0,0.34022556390977443,1.0,0.0,1.0,0.6165413533834586,1.0,1.0,0.9699248120300752,1.0,0.6635338345864662,0.9981203007518797,0.0,0.45300751879699247,0.9981203007518797,1.0,0.5733082706766918,0.518796992481203,1.0,0.46616541353383456,1.0,1.0,0.9924812030075187,0.27631578947368424,0.45300751879699247,0.674812030075188,0.5169172932330827,1.0,0.0,0.2725563909774436,0.8834586466165414,1.0,0.9924812030075187,0.9962406015037594,0.8139097744360902,1.0,0.8872180451127819,1.0,0,1.0,1.0,0.4473684210526316,1.0,1.0,1.0,0.4323308270676692,0.6090225563909775,0.8627819548872181,1.0,0.0,0.9981203007518797,0.25375939849624063,0.981203007518797,0.2631578947368421,0.37781954887218044,1.0,0.9943609022556391,0.9868421052631579,1.0,0.8928571428571429,1.0,1.0,0.45300751879699247,0.8571428571428571,1.0,0.9699248120300752,1.0,0.2725563909774436,1.0,1.0,1.0,0.2669172932330827,0.7274436090225563,1.0,1.0,0.44548872180451127,0.2744360902255639,0.45300751879699247,0,0.8928571428571429,0.0,1.0,0.0,0.0,0.2349624060150376,1.0,0.39849624060150374,1.0,0.8214285714285714,0.2725563909774436,0.9718045112781954,1.0,0.8928571428571429,0.9906015037593985,0.0,0.9755639097744361,0.9906015037593985,0.2725563909774436,1.0,1.0,0.9718045112781954,1.0,0.0,0.2556390977443609,0.8646616541353384,1.0,0.4473684210526316,0.0,1.0,0,0.9078947368421053,0.0,0.21052631578947367,1.0,0.9830827067669173,1.0,0.9924812030075187,0.44548872180451127,1.0,1.0,0.9605263157894737,0.3157894736842105,0.0,0.9755639097744361,0.9962406015037594,0.0,0.9962406015037594,0.2199248120300752,1.0,0.9736842105263158,1.0,1.0,0.3101503759398496,0,1.0,1.0,0.34210526315789475,1.0,0.9981203007518797,0.5206766917293233,0.9097744360902256,0.2725563909774436,1.0,1.0,0.9718045112781954,0.6541353383458647,1.0,1.0,1.0
1467,0.9111111111111111,0.8962962962962963,0.9111111111111111,0.9111111111111111,0.5925925925925926,0.9037037037037037,0.9037037037037037,0.9037037037037037,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9185185185185185,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.8444444444444444,0.8962962962962963,0.9111111111111111,0.9111111111111111,0,0.9111111111111111,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.9037037037037037,0.8814814814814815,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.0,0.9037037037037037,0.9037037037037037,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.8074074074074075,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.8888888888888888,0.9111111111111111,0.9037037037037037,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.9037037037037037,0.8888888888888888,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.8962962962962963,0.9111111111111111,0.9111111111111111,0.9111111111111111,0,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.6888888888888889,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.8740740740740741,0.8888888888888888,0.8888888888888888,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.8962962962962963,0.9037037037037037,0.9037037037037037,0.8888888888888888,0.9111111111111111,0.9111111111111111,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.9037037037037037,0,0.8814814814814815,0.6814814814814815,0.8814814814814815,0.9259259259259259,0.9111111111111111,0.9037037037037037,0.9111111111111111,0.8962962962962963,0.9037037037037037,0.9111111111111111,0.6370370370370371,0.9111111111111111,0.9111111111111111,0.8666666666666667,0.8962962962962963,0.9111111111111111,0.9111111111111111,0.5703703703703704,0.8888888888888888,0.9037037037037037,0.9111111111111111,0.9111111111111111,0.9111111111111111,0,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9185185185185185,0.9111111111111111,0.9111111111111111,0.8814814814814815,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111,0.9111111111111111
1472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0

1479,0.48184818481848185,0.5313531353135313,0.45544554455445546,0.5115511551155115,0.759075907590759,0.5247524752475248,0.8910891089108911,0.5544554455445545,0.5016501650165016,0.5808580858085809,0.5016501650165016,0.49174917491749176,0.47194719471947194,0.0,0.504950495049505,0.49834983498349833,0.7623762376237624,0.5247524752475248,0.4521452145214521,0.48514851485148514,0.46534653465346537,0.0,0.49834983498349833,0.49834983498349833,0.48184818481848185,0.504950495049505,0.5742574257425742,0.9405940594059405,0.45544554455445546,0.0,0.49504950495049505,0.6633663366336634,0.0,0.49834983498349833,0.900990099009901,0.7986798679867987,0.0,0.5016501650165016,0.44224422442244227,0,0.49834983498349833,0.0,0.6963696369636964,0.5016501650165016,0.0,0.6072607260726073,0.6963696369636964,0.49834983498349833,0.6864686468646864,0.0,0.0,0.5412541254125413,0.5115511551155115,0.49834983498349833,0.46864686468646866,0.4752475247524752,0.5478547854785478,0.6006600660066007,0.5577557755775577,0.46864686468646866,0.8547854785478548,0.47854785478547857,0.46864686468646866,0.504950495049505,0.6006600660066007,0.49834983498349833,0.9042904290429042,0.4752475247524752,0.5016501650165016,0.47854785478547857,0.5115511551155115,0.9801980198019802,0.4884488448844885,0.7656765676567657,0.5016501650165016,0.5643564356435643,0.49174917491749176,0.49834983498349833,0.504950495049505,0,0.49834983498349833,0.528052805280528,0.45874587458745875,0.0,0.7623762376237624,0.5115511551155115,0.6072607260726073,0.4752475247524752,0.48514851485148514,0.5313531353135313,0.49834983498349833,0.46204620462046203,0.8448844884488449,0.4884488448844885,0.6633663366336634,0.0,0.5445544554455446,0.8844884488448845,0.5313531353135313,0.48514851485148514,0.5808580858085809,0.5016501650165016,0.5544554455445545,0.49504950495049505,0.5577557755775577,0.0,0.0,0.6963696369636964,0.0,0.5346534653465347,0,0.45544554455445546,0.7623762376237624,0.4752475247524752,0.0,0.8877887788778878,0.48184818481848185,0.46864686468646866,0.0,0.0,0.49504950495049505,0.5313531353135313,0.45544554455445546,0.49834983498349833,0.5313531353135313,0.5247524752475248,0.48184818481848185,0.5115511551155115,0.45874587458745875,0.5214521452145214,0.900990099009901,0.0,0.45874587458745875,0.47194719471947194,0,0.49834983498349833,0.9867986798679867,0.45874587458745875,0.5742574257425742,0.5412541254125413,0.9471947194719472,0.5115511551155115,0.9273927392739274,0.46864686468646866,0.48514851485148514,0.6996699669966997,0.48514851485148514,0.5148514851485149,0.0,0.0
1480,0.6986301369863014,0.7328767123287672,0.6986301369863014,0.7054794520547946,0.541095890410959,0.6917808219178082,0.7191780821917808,0.726027397260274,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.6917808219178082,0.7397260273972602,0.7123287671232876,0.7054794520547946,0.7328767123287672,0.726027397260274,0.678082191780822,0.7123287671232876,0.7191780821917808,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.7328767123287672,0.7054794520547946,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.7054794520547946,0.6917808219178082,0.7123287671232876,0.7123287671232876,0,0.7123287671232876,0.7328767123287672,0.7123287671232876,0.7123287671232876,0.6986301369863014,0.6575342465753424,0.7123287671232876,0.7123287671232876,0.7054794520547946,0.0,0.7054794520547946,0.7054794520547946,0.7328767123287672,0.6986301369863014,0.7123287671232876,0.7054794520547946,0.7054794520547946,0.7054794520547946,0.6986301369863014,0.6917808219178082,0.6917808219178082,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.6917808219178082,0.7123287671232876,0.7191780821917808,0.7465753424657534,0.7123287671232876,0.7054794520547946,0.7123287671232876,0.684931506849315,0.7191780821917808,0.684931506849315,0.7123287671232876,0.7397260273972602,0.7054794520547946,0.7123287671232876,0.7123287671232876,0,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.6164383561643836,0.5547945205479452,0.6917808219178082,0.7191780821917808,0.7054794520547946,0.7123287671232876,0.7123287671232876,0.7123287671232876,0.6986301369863014,0.726027397260274,0.7054794520547946,0.6986301369863014,0.547945205479452,0.6917808219178082,0.7123287671232876,0.7123287671232876,0.6986301369863014,0.6712328767123288,0.5753424657534246,0.6986301369863014,0.7054794520547946,0.7191780821917808,0.6643835616438356,0.6986301369863014,0.7123287671232876,0.6643835616438356,0.6917808219178082,0,0.7054794520547946,0.5547945205479452,0.6575342465753424,0.6986301369863014,0.7191780821917808,0.684931506849315,0.7054794520547946,0.6986301369863014,0.6986301369863014,0.7123287671232876,0.678082191780822,0.7123287671232876,0.7123287671232876,0.684931506849315,0.6917808219178082,0.7123287671232876,0.7054794520547946,0.5547945205479452,0.7191780821917808,0.6917808219178082,0.7328767123287672,0.684931506849315,0.726027397260274,0,0.7123287671232876,0.7191780821917808,0.7054794520547946,0.726027397260274,0.7054794520547946,0.7328767123287672,0.6575342465753424,0.7123287671232876,0.7191780821917808,0.7123287671232876,0.6986301369863014,0.6164383561643836,0.684931506849315,0.6986301369863014,0.6917808219178082
1482,0.5411764705882353,0.47058823529411764,0.07058823529411765,0.6823529411764706,0.3058823529411765,0.5764705882352941,0.3411764705882353,0.7058823529411765,0.6705882352941176,0.6,0.15294117647058825,0.4470588235294118,0.6352941176470588,0.4235294117647059,0.08235294117647059,0.21176470588235294,0.8235294117647058,0.16470588235294117,0.11764705882352941,0.49411764705882355,0.2235294117647059,0.6,0.4588235294117647,0.03529411764705882,0.32941176470588235,0.08235294117647059,0.5294117647058824,0.6,0.5647058823529412,0.0,0.09411764705882353,0.38823529411764707,0.7411764705882353,0.15294117647058825,0.8352941176470589,0.25882352941176473,0.0,0.12941176470588237,0.5058823529411764,0,0.047058823529411764,0.0,0.08235294117647059,0.17647058823529413,0.5647058823529412,0.12941176470588237,0.08235294117647059,0.11764705882352941,0.15294117647058825,0.0,0.5764705882352941,0.611764705882353,0.0,0.2823529411764706,0.08235294117647059,0.1411764705882353,0.7647058823529411,0.6470588235294118,0.6,0.4,0.3411764705882353,0.49411764705882355,0.5176470588235295,0.08235294117647059,0.4117647058823529,0.047058823529411764,0.6588235294117647,0.5764705882352941,0.03529411764705882,0.5411764705882353,0.6823529411764706,0.058823529411764705,0.4,0.2235294117647059,0.1411764705882353,0.6705882352941176,0.11764705882352941,0.047058823529411764,0.08235294117647059,0,0.047058823529411764,0.08235294117647059,0.6823529411764706,0.4823529411764706,0.32941176470588235,0.1411764705882353,0.29411764705882354,0.11764705882352941,0.5882352941176471,0.03529411764705882,0.047058823529411764,0.3411764705882353,0.29411764705882354,0.5411764705882353,0.6941176470588235,0.11764705882352941,0.5058823529411764,0.7529411764705882,0.047058823529411764,0.5058823529411764,0.7058823529411765,0.7294117647058823,0.7647058823529411,0.5411764705882353,0.023529411764705882,0.5294117647058824,0.6823529411764706,0.08235294117647059,0.43529411764705883,0.7529411764705882,0,0.047058823529411764,0.29411764705882354,0.6705882352941176,0.6352941176470588,0.788235294117647,0.6705882352941176,0.5294117647058824,0.611764705882353,0.611764705882353,0.3176470588235294,0.4,0.07058823529411765,0.047058823529411764,0.5176470588235295,0.5529411764705883,0.08235294117647059,0.7176470588235294,0.047058823529411764,0.6705882352941176,0.7176470588235294,0.5764705882352941,0.6352941176470588,0.08235294117647059,0,0.047058823529411764,0.49411764705882355,0.08235294117647059,0.7764705882352941,0.7176470588235294,0.2235294117647059,0.4235294117647059,0.5294117647058824,0.6470588235294118,0.5647058823529412,0.5176470588235295,0.5882352941176471,0.7529411764705882,0.7176470588235294,0.5529411764705883
1487,0.9400630914826499,0.9211356466876972,0.9369085173501577,0.9384858044164038,0.0,0.943217665615142,0.9400630914826499,0.943217665615142,0.943217665615142,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9416403785488959,0.0,0.9369085173501577,0.9305993690851735,0.9384858044164038,0.9353312302839116,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9353312302839116,0.9400630914826499,0.0,0.9369085173501577,0.9369085173501577,0.0,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9353312302839116,0.9369085173501577,0.9369085173501577,0,0.919558359621451,0.9495268138801262,0.9369085173501577,0.9321766561514195,0.944794952681388,0.9274447949526814,0.9369085173501577,0.9369085173501577,0.9384858044164038,0.9369085173501577,0.0,0.944794952681388,0.9290220820189274,0.9227129337539433,0.9369085173501577,0.9353312302839116,0.9416403785488959,0.9369085173501577,0.9369085173501577,0.9384858044164038,0.9211356466876972,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9290220820189274,0.7129337539432177,0.9384858044164038,0.9384858044164038,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9337539432176656,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9400630914826499,0.9369085173501577,0.9369085173501577,0.9369085173501577,0,0.9369085173501577,0.0,0.9369085173501577,0.0,0.0,0.9369085173501577,0.9400630914826499,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9353312302839116,0.9290220820189274,0.9511041009463722,0.9369085173501577,0.0,0.9416403785488959,0.9369085173501577,0.9369085173501577,0.9400630914826499,0.9369085173501577,0.7933753943217665,0.9416403785488959,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.944794952681388,0.9369085173501577,0.0,0.9400630914826499,0,0.944794952681388,0.0,0.9384858044164038,0.0,0.9369085173501577,0.9384858044164038,0.9369085173501577,0.9353312302839116,0.9369085173501577,0.9369085173501577,0.6451104100946372,0.9369085173501577,0.0,0.916403785488959,0.9242902208201893,0.0,0.9416403785488959,0.0,0.944794952681388,0.9369085173501577,0.944794952681388,0.9416403785488959,0.9369085173501577,0,0.8911671924290221,0.9416403785488959,0.9369085173501577,0.944794952681388,0.943217665615142,0.9384858044164038,0.9290220820189274,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.9369085173501577,0.6908517350157729,0.9400630914826499,0.9463722397476341,0.0
1489,0.8771280532938565,0.8564026646928201,0.8230940044411547,0.8319763138415989,0.0,0.8786084381939304,0.7401924500370096,0.9111769059955589,0.8630643967431533,0.7934863064396743,0.7446336047372317,0.7068837897853442,0.8726868985936344,0.8623242042931162,0.7542561065877128,0.7860843819393042,0.7401924500370096,0.8948926720947447,0.8689859363434493,0.8156920799407846,0.8386380458919319,0.7453737971872687,0.8216136195410807,0.7816432272390822,0.8697261287934863,0.7542561065877128,0.8386380458919319,0.7401924500370096,0.8401184307920059,0.7068837897853442,0.7068837897853442,0.768319763138416,0.8860103626943006,0.7920059215396003,0.8734270910436713,0.7875647668393783,0.8978534418948927,0.7068837897853442,0.7409326424870466,0,0.7142857142857143,0.8763878608438194,0.7068837897853442,0.7927461139896373,0.8778682457438934,0.8726868985936344,0.7039230199851961,0.7068837897853442,0.769059955588453,0.7846039970392302,0.8756476683937824,0.8771280532938565,0.7971872686898593,0.695040710584752,0.8282753515914137,0.8556624722427831,0.8815692079940785,0.8623242042931162,0.8660251665433013,0.8371576609918578,0.8179126572908957,0.8216136195410807,0.8149518874907475,0.7542561065877128,0.7979274611398963,0.7142857142857143,0.8615840118430792,0.7831236121391562,0.7068837897853442,0.8179126572908957,0.771280532938564,0.8201332346410066,0.8830495928941525,0.7668393782383419,0.7631384159881569,0.8771280532938565,0.8830495928941525,0.7068837897853442,0.7542561065877128,0,0.7631384159881569,0.0,0.7512953367875648,0.0,0.0,0.8564026646928201,0.7364914877868246,0.8630643967431533,0.8275351591413768,0.771280532938564,0.7068837897853442,0.8356772760917839,0.846780162842339,0.8341968911917098,0.8704663212435233,0.0,0.8593634344929681,0.845299777942265,0.7068837897853442,0.8371576609918578,0.8675055514433753,0.769059955588453,0.8623242042931162,0.7616580310880829,0.8689859363434493,0.7957068837897854,0.8837897853441895,0.7068837897853442,0.0,0.8534418948926721,0,0.8364174685418209,0.0,0.7942264988897113,0.8823094004441154,0.8630643967431533,0.8497409326424871,0.8556624722427831,0.8830495928941525,0.9045151739452257,0.7068837897853442,0.7046632124352331,0.7660991857883049,0.0,0.8556624722427831,0.8601036269430051,0.0,0.8756476683937824,0.0,0.8978534418948927,0.8615840118430792,0.8934122871946706,0.8860103626943006,0.7853441894892672,0,0.7564766839378239,0.8978534418948927,0.8260547742413027,0.9015544041450777,0.8786084381939304,0.7409326424870466,0.8267949666913398,0.7068837897853442,0.8349370836417469,0.8149518874907475,0.8356772760917839,0.7668393782383419,0.845299777942265,0.8630643967431533,0.8615840118430792
1491,0.0,0.3675,0.685,0.845,0.0,0.76,0.2575,0.855,0.0,0.5325,0.0,0.0,0.785,0.0,0.02,0.01,0.7925,0.8225,0.0,0.7825,0.745,0.835,0.7375,0.3225,0.6875,0.02,0.005,0.5175,0.78,0.0,0.0,0.315,0.0,0.0275,0.765,0.0725,0.0,0.0,0.6225,0,0.395,0.0,0.02,0.0,0.6975,0.0,0.02,0.0,0.01,0.3325,0.0,0.0,0.045,0.57,0.6525,0.75,0.845,0.5375,0.68,0.7225,0.3575,0.78,0.7875,0.02,0.1125,0.4975,0.0,0.7175,0.01,0.785,0.0,0.0,0.705,0.075,0.0375,0.0,0.755,0.01,0.02,0,0.0,0.02,0.8175,0.0,0.8525,0.52,0.7325,0.0,0.76,0.0,0.01,0.205,0.19,0.0,0.0,0.2675,0.0,0.76,0.3975,0.7625,0.0,0.5975,0.8425,0.4875,0.725,0.6675,0.0,0.02,0.0,0.8525,0,0.0,0.425,0.605,0.0,0.0,0.0,0.755,0.755,0.0,0.755,0.6025,0.055,0.01,0.0975,0.3925,0.0625,0.81,0.025,0.0,0.0,0.0,0.805,0.0425,0,0.4975,0.8625,0.675,0.8525,0.815,0.245,0.0825,0.0,0.8125,0.8025,0.0,0.0,0.8275,0.0,0.0
1492,0.0,0.355,0.3575,0.545,0.0,0.0,0.035,0.0,0.0,0.3125,0.0,0.0,0.5275,0.0,0.02,0.01,0.6575,0.575,0.0,0.5025,0.4175,0.56,0.465,0.01,0.595,0.02,0.085,0.035,0.505,0.0,0.0,0.21,0.0,0.01,0.6575,0.075,0.0,0.0,0.3625,0,0.01,0.0,0.02,0.0,0.0,0.0,0.02,0.0,0.01,0.0,0.0,0.0,0.355,0.18,0.395,0.5225,0.5975,0.085,0.59,0.4675,0.325,0.4625,0.4975,0.02,0.1025,0.01,0.0,0.495,0.01,0.4725,0.0,0.0,0.62,0.075,0.01,0.0,0.545,0.01,0.02,0,0.0,0.02,0.5425,0.0,0.3825,0.185,0.33,0.0,0.4925,0.0,0.01,0.2475,0.2075,0.0,0.0,0.03,0.0,0.675,0.3525,0.47,0.0,0.4125,0.57,0.3275,0.5025,0.4225,0.0,0.02,0.0,0.6025,0,0.0,0.03,0.0425,0.0,0.62,0.0,0.4875,0.545,0.0,0.4875,0.185,0.3575,0.01,0.0,0.4075,0.0825,0.5625,0.0225,0.0,0.0,0.0,0.5375,0.325,0,0.01,0.61,0.3675,0.6175,0.5525,0.0325,0.215,0.0,0.5075,0.5325,0.28,0.0,0.575,0.0,0.0
1493,0.0,0.3775,0.5025,0.78,0.0,0.0,0.3325,0.8275,0.0,0.6475,0.0,0.0,0.7675,0.0,0.02,0.02,0.775,0.7825,0.0,0.7375,0.65,0.7875,0.6825,0.48,0.6625,0.02,0.045,0.6075,0.7225,0.0,0.0,0.355,0.0,0.0725,0.7425,0.0775,0.0,0.0,0.62,0,0.51,0.0,0.02,0.0,0.0,0.0,0.02,0.0,0.0125,0.43,0.0,0.0,0.0375,0.6525,0.515,0.6825,0.81,0.6425,0.715,0.68,0.27,0.7275,0.72,0.02,0.1025,0.5625,0.0,0.665,0.01,0.755,0.0,0.0,0.695,0.0775,0.1,0.0,0.6775,0.01,0.02,0,0.0,0.0175,0.755,0.0,0.735,0.6425,0.7125,0.0,0.725,0.0,0.01,0.185,0.1725,0.0,0.0,0.295,0.0,0.7225,0.2575,0.7375,0.0,0.7375,0.795,0.5275,0.6225,0.56,0.0,0.02,0.0,0.805,0,0.0,0.44,0.6075,0.0,0.0,0.0,0.705,0.6775,0.0,0.6875,0.6025,0.045,0.01,0.0,0.405,0.0525,0.775,0.035,0.0,0.0,0.0,0.785,0.0275,0,0.5625,0.83,0.5225,0.835,0.775,0.32,0.1025,0.0,0.7475,0.7375,0.0,0.0,0.795,0.0,0.0
1494,0.821969696969697,0.8143939393939394,0.7272727272727273,0.8446969696969697,0.0,0.8295454545454546,0.8560606060606061,0.8598484848484849,0.8522727272727273,0.7840909090909091,0.8257575757575758,0.6628787878787878,0.8068181818181818,0.0,0.7462121212121212,0.803030303030303,0.8598484848484849,0.8333333333333334,0.7954545454545454,0.821969696969697,0.7727272727272727,0.8446969696969697,0.8181818181818182,0.7954545454545454,0.6666666666666666,0.7121212121212122,0.7613636363636364,0.8560606060606061,0.8295454545454546,0.0,0.6628787878787878,0.7992424242424242,0.0,0.7878787878787878,0.8636363636363636,0.7651515151515151,0.8560606060606061,0.6628787878787878,0.8409090909090909,0,0.7613636363636364,0.8446969696969697,0.6628787878787878,0.821969696969697,0.8295454545454546,0.8560606060606061,0.6628787878787878,0.6628787878787878,0.8068181818181818,0.8106060606060606,0.0,0.8371212121212122,0.6666666666666666,0.7992424242424242,0.6590909090909091,0.7803030303030303,0.8484848484848485,0.7992424242424242,0.8143939393939394,0.8257575757575758,0.7575757575757576,0.8106060606060606,0.8068181818181818,0.7462121212121212,0.7537878787878788,0.7727272727272727,0.8598484848484849,0.8446969696969697,0.6590909090909091,0.8181818181818182,0.7765151515151515,0.8522727272727273,0.6666666666666666,0.7007575757575758,0.8143939393939394,0.8522727272727273,0.7954545454545454,0.6628787878787878,0.7462121212121212,0,0.7689393939393939,0.0,0.821969696969697,0.0,0.0,0.6818181818181818,0.8181818181818182,0.75,0.8295454545454546,0.7575757575757576,0.6628787878787878,0.8068181818181818,0.821969696969697,0.8484848484848485,0.8636363636363636,0.0,0.8257575757575758,0.8484848484848485,0.6628787878787878,0.8484848484848485,0.8446969696969697,0.6893939393939394,0.8295454545454546,0.7651515151515151,0.6704545454545454,0.7803030303030303,0.8333333333333334,0.6628787878787878,0.0,0.8409090909090909,0,0.8446969696969697,0.0,0.6060606060606061,0.0,0.8522727272727273,0.8446969696969697,0.821969696969697,0.803030303030303,0.8143939393939394,0.7840909090909091,0.7727272727272727,0.6628787878787878,0.0,0.8106060606060606,0.8068181818181818,0.0,0.8295454545454546,0.0,0.8712121212121212,0.8446969696969697,0.8409090909090909,0.8484848484848485,0.6893939393939394,0,0.7992424242424242,0.8598484848484849,0.7272727272727273,0.8560606060606061,0.8181818181818182,0.8522727272727273,0.7954545454545454,0.6628787878787878,0.8409090909090909,0.8106060606060606,0.7916666666666666,0.7310606060606061,0.8446969696969697,0.8371212121212122,0.821969696969697
1496,0.0,0.8475675675675676,0.567027027027027,0.9664864864864865,0.0,0.0,0.7551351351351351,0.0,0.9654054054054054,0.9681081081081081,0.7583783783783784,0.8448648648648649,0.0,0.0,0.5994594594594594,0.7448648648648649,0.7518918918918919,0.6378378378378379,0.5551351351351351,0.9562162162162162,0.5708108108108109,0.9681081081081081,0.9502702702702702,0.7637837837837838,0.0,0.5994594594594594,0.7659459459459459,0.7518918918918919,0.9513513513513514,0.0,0.5048648648648648,0.8308108108108108,0.0,0.7567567567567568,0.9681081081081081,0.7951351351351351,0.0,0.7248648648648649,0.8713513513513513,0,0.7848648648648648,0.0,0.7443243243243243,0.754054054054054,0.0,0.0,0.754054054054054,0.7832432432432432,0.7518918918918919,0.7637837837837838,0.0,0.9664864864864865,0.7875675675675675,0.5113513513513513,0.5151351351351351,0.6308108108108108,0.965945945945946,0.5454054054054054,0.9583783783783784,0.6075675675675676,0.841081081081081,0.9556756756756757,0.9605405405405405,0.5994594594594594,0.8275675675675676,0.7832432432432432,0.0,0.0,0.4962162162162162,0.9540540540540541,0.9021621621621622,0.8140540540540541,0.0,0.607027027027027,0.6810810810810811,0.9713513513513513,0.6151351351351352,0.5048648648648648,0.5994594594594594,0,0.9227027027027027,0.0,0.9194594594594595,0.0,0.0,0.0,0.7551351351351351,0.5627027027027027,0.9594594594594594,0.9372972972972973,0.5048648648648648,0.832972972972973,0.6756756756756757,0.9513513513513514,0.0,0.0,0.9616216216216216,0.9691891891891892,0.6702702702702703,0.5918918918918918,0.9675675675675676,0.9805405405405405,0.9627027027027028,0.7686486486486487,0.5135135135135135,0.7427027027027027,0.0,0.7443243243243243,0.0,0.9681081081081081,0,0.9718918918918918,0.0,0.5086486486486487,0.0,0.0,0.9621621621621622,0.9362162162162162,0.6151351351351352,0.0,0.9691891891891892,0.7151351351351352,0.8016216216216216,0.0,0.8162162162162162,0.8502702702702702,0.0,0.947027027027027,0.0,0.0,0.0,0.0,0.5951351351351352,0.7875675675675675,0,0.7854054054054054,0.8124324324324325,0.5686486486486486,0.9632432432432433,0.952972972972973,0.7518918918918919,0.7978378378378378,0.94,0.9405405405405406,0.9648648648648649,0.0,0.981081081081081,0.9643243243243244,0.961081081081081,0.0
1497,0.0,0.9926686217008798,0.7551319648093842,0.9523460410557185,0.5520527859237536,0.9948680351906158,0.6986803519061584,0.9919354838709677,0.9970674486803519,0.8255131964809385,0.4039589442815249,0.7998533724340176,0.9904692082111437,0.0,0.6994134897360704,0.4002932551319648,0.7038123167155426,0.9215542521994134,0.9017595307917888,0.9347507331378299,0.8797653958944281,0.9464809384164223,0.9567448680351907,0.3841642228739003,0.0,0.6986803519061584,0.717008797653959,0.6964809384164223,0.9552785923753666,0.0,0.0,0.7668621700879765,0.0,0.3841642228739003,0.876099706744868,0.6195014662756598,0.0,0.6774193548387096,0.9457478005865103,0,0.4039589442815249,0.0,0.5505865102639296,0.41055718475073316,0.0,0.0,0.5542521994134897,0.4039589442815249,0.7800586510263929,0.0,0.0,0.9948680351906158,0.6019061583577713,0.8093841642228738,0.5146627565982405,0.8277126099706745,0.9772727272727273,0.8005865102639296,0.8233137829912024,0.7998533724340176,0.716275659824047,0.9406158357771262,0.9310850439882697,0.6994134897360704,0.6693548387096774,0.4039589442815249,0.0,0.9816715542521994,0.42302052785923755,0.9574780058651027,0.0,0.9362170087976539,0.0,0.7602639296187683,0.4039589442815249,0.9926686217008798,0.8621700879765396,0.4039589442815249,0.6994134897360704,0,0.9479472140762464,0.531524926686217,0.9626099706744868,0.0,0.5857771260997068,0.6275659824046921,0.6598240469208211,0.8335777126099707,0.9450146627565983,0.9376832844574781,0.4039589442815249,0.9919354838709677,0.9010263929618768,0.0,0.8988269794721407,0.5887096774193549,0.9772727272727273,0.8519061583577713,0.5483870967741935,0.8914956011730205,0.9970674486803519,0.5461876832844574,0.9750733137829912,0.9538123167155426,0.6026392961876833,0.9142228739002932,0.0,0.5505865102639296,0.0,0.9626099706744868,0,0.9948680351906158,0.5865102639296188,0.5784457478005866,0.0,0.8460410557184751,0.9956011730205279,0.9860703812316716,0.8724340175953079,0.0,0.876099706744868,0.5755131964809385,0.532991202346041,0.4039589442815249,0.9919354838709677,0.9963343108504399,0.5608504398826979,0.9831378299120235,0.28885630498533726,0.0,0.0,0.9963343108504399,0.9178885630498533,0.6019061583577713,0,0.4039589442815249,0.9523460410557185,0.7573313782991202,0.9897360703812317,0.9860703812316716,0.6810850439882697,0.9890029325513197,0.7060117302052786,0.9750733137829912,0.9435483870967742,0.8203812316715543,0.5263929618768328,0.9706744868035191,0.0,0.0
1498,0.7155172413793104,0.7413793103448276,0.6379310344827587,0.75,0.6293103448275862,0.7327586206896551,0.7844827586206896,0.7068965517241379,0.7327586206896551,0.6551724137931034,0.6551724137931034,0.6551724137931034,0.6724137931034483,0.6896551724137931,0.7068965517241379,0.5086206896551724,0.7844827586206896,0.6206896551724138,0.6637931034482759,0.75,0.6896551724137931,0.6637931034482759,0.75,0.6551724137931034,0.646551724137931,0.6551724137931034,0.6724137931034483,0.7586206896551724,0.7241379310344828,0.6551724137931034,0.6551724137931034,0.6896551724137931,0.7155172413793104,0.6551724137931034,0.7241379310344828,0.6637931034482759,0.6724137931034483,0.6551724137931034,0.6810344827586207,0,0.4827586206896552,0.6206896551724138,0.6551724137931034,0.6551724137931034,0.7241379310344828,0.6982758620689655,0.6551724137931034,0.6551724137931034,0.6810344827586207,0.6551724137931034,0.6896551724137931,0.7327586206896551,0.6120689655172413,0.6896551724137931,0.6551724137931034,0.646551724137931,0.7155172413793104,0.6637931034482759,0.7068965517241379,0.6896551724137931,0.6724137931034483,0.75,0.7413793103448276,0.7068965517241379,0.5862068965517241,0.49137931034482757,0.7068965517241379,0.7413793103448276,0.6551724137931034,0.7413793103448276,0.7068965517241379,0.6810344827586207,0.6551724137931034,0.6551724137931034,0.6551724137931034,0.7413793103448276,0.646551724137931,0.6551724137931034,0.7068965517241379,0,0.6551724137931034,0.6551724137931034,0.7327586206896551,0.5603448275862069,0.6379310344827587,0.5344827586206896,0.6724137931034483,0.6637931034482759,0.7413793103448276,0.6551724137931034,0.6551724137931034,0.6982758620689655,0.646551724137931,0.7327586206896551,0.6896551724137931,0.6724137931034483,0.7068965517241379,0.7413793103448276,0.6551724137931034,0.6896551724137931,0.6982758620689655,0.6724137931034483,0.6982758620689655,0.7241379310344828,0.646551724137931,0.6896551724137931,0.7155172413793104,0.6551724137931034,0.5431034482758621,0.7068965517241379,0,0.7155172413793104,0.6379310344827587,0.4827586206896552,0.7413793103448276,0.7241379310344828,0.7241379310344828,0.6724137931034483,0.6293103448275862,0.6810344827586207,0.6551724137931034,0.6810344827586207,0.6551724137931034,0.6551724137931034,0.6379310344827587,0.7068965517241379,0.6551724137931034,0.6896551724137931,0.6293103448275862,0.6896551724137931,0.6637931034482759,0.6896551724137931,0.6724137931034483,0.6293103448275862,0,0.6551724137931034,0.6982758620689655,0.6379310344827587,0.6810344827586207,0.7155172413793104,0.7672413793103449,0.6551724137931034,0.6551724137931034,0.7241379310344828,0.7327586206896551,0.646551724137931,0.7241379310344828,0.7327586206896551,0.6551724137931034,0.75
1504,0.7942386831275721,1.0,0.6666666666666666,1.0,0.0,0.9938271604938271,0.51440329218107,0.9917695473251029,0.9979423868312757,0.9897119341563786,0.9218106995884774,0.6522633744855967,0.9897119341563786,0.0,0.6522633744855967,0.9835390946502057,1.0,0.6049382716049383,0.6481481481481481,1.0,0.6748971193415638,1.0,1.0,0.98559670781893,0.6522633744855967,0.6522633744855967,0.8518518518518519,0.6934156378600823,1.0,0.0,0.6522633744855967,0.9938271604938271,1.0,0.9588477366255144,1.0,0.8353909465020576,1.0,0.6522633744855967,0.9691358024691358,0,0.9917695473251029,1.0,0.7098765432098766,1.0,1.0,1.0,0.7304526748971193,0.6522633744855967,0.7407407407407407,1.0,0.0,0.9979423868312757,0.6213991769547325,0.9403292181069959,0.6440329218106996,0.6563786008230452,1.0,0.9897119341563786,0.9835390946502057,0.9814814814814815,0.9465020576131687,1.0,1.0,0.6522633744855967,0.9609053497942387,1.0,0.977366255144033,0.9753086419753086,0.6522633744855967,1.0,0.9711934156378601,0.8559670781893004,0.6522633744855967,0.757201646090535,0.9979423868312757,0.9917695473251029,0.6399176954732511,0.6522633744855967,0.6522633744855967,0,0.7592592592592593,0.0,1.0,0.0,0.0,0.6172839506172839,0.9958847736625515,0.6440329218106996,1.0,0.6954732510288066,0.6522633744855967,1.0,0.9218106995884774,0.7469135802469136,0.9814814814814815,0.5102880658436214,0.9238683127572016,1.0,0.6522633744855967,0.9753086419753086,1.0,0.9567901234567902,1.0,0.8991769547325102,0.6625514403292181,0.6337448559670782,1.0,0.7098765432098766,0.0,1.0,0,0.779835390946502,0.0,0.6090534979423868,0.0,0.9897119341563786,0.9979423868312757,0.977366255144033,0.6234567901234568,1.0,0.98559670781893,0.8045267489711934,0.6522633744855967,0.0,1.0,1.0,0.0,0.9814814814814815,0.0,1.0,0.9897119341563786,1.0,0.9753086419753086,0.6563786008230452,0,1.0,1.0,0.6790123456790124,1.0,0.9876543209876543,0.6934156378600823,1.0,0.6522633744855967,1.0,1.0,0.9711934156378601,0.4732510288065844,1.0,1.0,1.0
1506,0.847457627118644,0.7542372881355932,0.847457627118644,0.847457627118644,0.423728813559322,0.847457627118644,0.8559322033898306,0.847457627118644,0.8389830508474576,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.7966101694915254,0.8389830508474576,0.7966101694915254,0.8305084745762712,0.8389830508474576,0.847457627118644,0.847457627118644,0.847457627118644,0.0,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8220338983050848,0.847457627118644,0.8389830508474576,0.8220338983050848,0.8220338983050848,0.847457627118644,0.847457627118644,0,0.8305084745762712,0.0,0.847457627118644,0.8389830508474576,0.847457627118644,0.788135593220339,0.847457627118644,0.847457627118644,0.8389830508474576,0.0,0.788135593220339,0.847457627118644,0.8050847457627118,0.8220338983050848,0.847457627118644,0.847457627118644,0.8389830508474576,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8389830508474576,0.8305084745762712,0.635593220338983,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8305084745762712,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8389830508474576,0,0.847457627118644,0.847457627118644,0.847457627118644,0.8050847457627118,0.8135593220338984,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.7796610169491526,0.847457627118644,0.847457627118644,0.0,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8135593220338984,0.7711864406779662,0.847457627118644,0.8389830508474576,0.847457627118644,0.0,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0,0.8559322033898306,0.8220338983050848,0.8389830508474576,0.847457627118644,0.847457627118644,0.8389830508474576,0.847457627118644,0.8389830508474576,0.8389830508474576,0.847457627118644,0.8050847457627118,0.847457627118644,0.847457627118644,0.7966101694915254,0.7966101694915254,0.847457627118644,0.847457627118644,0.6016949152542372,0.8389830508474576,0.847457627118644,0.8389830508474576,0.847457627118644,0.847457627118644,0,0.8135593220338984,0.8135593220338984,0.847457627118644,0.8135593220338984,0.847457627118644,0.847457627118644,0.7966101694915254,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.0,0.847457627118644
