0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"

1508,0.0,0.8910891089108911,0.6732673267326733,0.8217821782178217,0.0,0.8316831683168316,0.7722772277227723,0.9108910891089109,0.9306930693069307,0.7722772277227723,0.38613861386138615,0.0,0.8316831683168316,0.9306930693069307,0.5742574257425742,0.6138613861386139,0.9603960396039604,0.900990099009901,0.0,0.8118811881188119,0.8217821782178217,0.801980198019802,0.801980198019802,0.31683168316831684,0.9207920792079208,0.5742574257425742,0.7128712871287128,0.8910891089108911,0.8712871287128713,0.8712871287128713,0.6138613861386139,0.6336633663366337,0.9504950495049505,0.38613861386138615,0.8910891089108911,0.7722772277227723,0.6732673267326733,0.31683168316831684,0.8118811881188119,0,0.32673267326732675,0.9306930693069307,0.5445544554455446,0.6039603960396039,0.9108910891089109,0.297029702970297,0.5445544554455446,0.31683168316831684,0.40594059405940597,0.31683168316831684,0.9504950495049505,0.9207920792079208,0.4752475247524752,0.5247524752475248,0.6138613861386139,0.8217821782178217,0.9405940594059405,0.7128712871287128,0.8712871287128713,0.8118811881188119,0.7326732673267327,0.8217821782178217,0.8217821782178217,0.5742574257425742,0.7623762376237624,0.31683168316831684,0.8712871287128713,0.9108910891089109,0.31683168316831684,0.8118811881188119,0.8910891089108911,0.6237623762376238,0.9207920792079208,0.49504950495049505,0.3564356435643564,0.900990099009901,0.8712871287128713,0.31683168316831684,0.5742574257425742,0,0.31683168316831684,0.5742574257425742,0.8217821782178217,0.9405940594059405,0.46534653465346537,0.5643564356435643,0.7623762376237624,0.0,0.8415841584158416,0.3069306930693069,0.31683168316831684,0.8712871287128713,0.5841584158415841,0.0,0.801980198019802,0.32673267326732675,0.0,0.8316831683168316,0.6831683168316832,0.8316831683168316,0.9504950495049505,0.900990099009901,0.9207920792079208,0.8514851485148515,0.801980198019802,0.9207920792079208,0.9306930693069307,0.5445544554455446,0.9405940594059405,0.8811881188118812,0,0.0,0.45544554455445546,0.9306930693069307,0.9405940594059405,0.8217821782178217,0.9207920792079208,0.8118811881188119,0.8811881188118812,0.9207920792079208,0.6633663366336634,0.5445544554455446,0.504950495049505,0.31683168316831684,0.9306930693069307,0.9207920792079208,0.4158415841584158,0.8415841584158416,0.32673267326732675,0.9702970297029703,0.7920792079207921,0.8811881188118812,0.8712871287128713,0.5148514851485149,0,0.31683168316831684,0.6633663366336634,0.693069306930693,0.9306930693069307,0.8811881188118812,0.7524752475247525,0.8910891089108911,0.6435643564356436,0.8712871287128713,0.8217821782178217,0.693069306930693,0.0,0.8712871287128713,0.9504950495049505,0.8811881188118812
1510,0.958041958041958,0.972027972027972,0.9300699300699301,0.9440559440559441,0.8951048951048951,0.9790209790209791,0.965034965034965,0.958041958041958,0.958041958041958,0.8741258741258742,0.8391608391608392,0.916083916083916,0.951048951048951,0.958041958041958,0.8741258741258742,0.8461538461538461,0.972027972027972,0.951048951048951,0.9370629370629371,0.958041958041958,0.9300699300699301,0.9370629370629371,0.9440559440559441,0.6293706293706294,0.6433566433566433,0.8741258741258742,0.6153846153846154,0.965034965034965,0.9370629370629371,0.6293706293706294,0.6293706293706294,0.8461538461538461,0.951048951048951,0.8251748251748252,0.972027972027972,0.916083916083916,0.965034965034965,0.6293706293706294,0.9300699300699301,0,0.6293706293706294,0.972027972027972,0.9230769230769231,0.8321678321678322,0.9790209790209791,0.9790209790209791,0.9230769230769231,0.6293706293706294,0.8951048951048951,0.0,0.951048951048951,0.965034965034965,0.8741258741258742,0.9300699300699301,0.6223776223776224,0.9440559440559441,0.951048951048951,0.6573426573426573,0.9370629370629371,0.958041958041958,0.9300699300699301,0.951048951048951,0.9370629370629371,0.8741258741258742,0.8041958041958042,0.3986013986013986,0.965034965034965,0.951048951048951,0.3706293706293706,0.951048951048951,0.965034965034965,0.986013986013986,0.6223776223776224,0.8951048951048951,0.916083916083916,0.951048951048951,0.9370629370629371,0.6293706293706294,0.8741258741258742,0,0.9300699300699301,0.9230769230769231,0.951048951048951,0.5594405594405595,0.9020979020979021,0.6293706293706294,0.965034965034965,0.9300699300699301,0.958041958041958,0.6293706293706294,0.6293706293706294,0.951048951048951,0.9440559440559441,0.965034965034965,0.8951048951048951,0.8951048951048951,0.958041958041958,0.9790209790209791,0.6293706293706294,0.9440559440559441,0.986013986013986,0.8041958041958042,0.965034965034965,0.951048951048951,0.6013986013986014,0.9370629370629371,0.972027972027972,0.9230769230769231,0.5664335664335665,0.951048951048951,0,0.972027972027972,0.8951048951048951,0.5874125874125874,0.951048951048951,0.958041958041958,0.958041958041958,0.9440559440559441,0.9370629370629371,0.951048951048951,0.9440559440559441,0.8881118881118881,0.9300699300699301,0.6293706293706294,0.9440559440559441,0.9300699300699301,0.8741258741258742,0.951048951048951,0.8811188811188811,0.9790209790209791,0.951048951048951,0.972027972027972,0.951048951048951,0.9370629370629371,0,0.6293706293706294,0.972027972027972,0.9300699300699301,0.9790209790209791,0.951048951048951,0.9440559440559441,0.951048951048951,0.6293706293706294,0.951048951048951,0.9440559440559441,0.8391608391608392,0.9370629370629371,0.951048951048951,0.965034965034965,0.9440559440559441
1511,0.8818181818181818,0.8545454545454545,0.8818181818181818,0.9090909090909091,0.8,0.8727272727272727,0.8909090909090909,0.8636363636363636,0.8909090909090909,0.7545454545454545,0.6818181818181818,0.7181818181818181,0.8909090909090909,0.8909090909090909,0.8636363636363636,0.6818181818181818,0.9090909090909091,0.8727272727272727,0.9,0.9,0.9090909090909091,0.7545454545454545,0.9,0.6818181818181818,0.6727272727272727,0.8636363636363636,0.7636363636363637,0.9,0.9,0.6818181818181818,0.6818181818181818,0.6818181818181818,0.8818181818181818,0.6818181818181818,0.9,0.8363636363636363,0.8818181818181818,0.6818181818181818,0.8727272727272727,0,0.6818181818181818,0.8818181818181818,0.8818181818181818,0.6818181818181818,0.8727272727272727,0.8909090909090909,0.8818181818181818,0.6818181818181818,0.8272727272727273,0.0,0.8818181818181818,0.8818181818181818,0.8818181818181818,0.8363636363636363,0.6727272727272727,0.8818181818181818,0.8818181818181818,0.7272727272727273,0.9181818181818182,0.8727272727272727,0.8818181818181818,0.8636363636363636,0.9,0.8636363636363636,0.7636363636363637,0.4090909090909091,0.8909090909090909,0.8818181818181818,0.3181818181818182,0.9090909090909091,0.8909090909090909,0.8727272727272727,0.6818181818181818,0.8454545454545455,0.6818181818181818,0.8818181818181818,0.8818181818181818,0.6818181818181818,0.8636363636363636,0,0.6818181818181818,0.8545454545454545,0.9090909090909091,0.5727272727272728,0.8,0.6818181818181818,0.8727272727272727,0.8909090909090909,0.9,0.6818181818181818,0.6818181818181818,0.8636363636363636,0.8545454545454545,0.8909090909090909,0.7363636363636363,0.7636363636363637,0.9,0.9,0.6818181818181818,0.8727272727272727,0.8909090909090909,0.7181818181818181,0.8909090909090909,0.8818181818181818,0.6818181818181818,0.8727272727272727,0.8727272727272727,0.8818181818181818,0.6272727272727273,0.8909090909090909,0,0.8818181818181818,0.8,0.5909090909090909,0.8818181818181818,0.8909090909090909,0.8727272727272727,0.8727272727272727,0.8818181818181818,0.8727272727272727,0.6818181818181818,0.8090909090909091,0.7181818181818181,0.6818181818181818,0.8636363636363636,0.8454545454545455,0.6818181818181818,0.8818181818181818,0.7909090909090909,0.8909090909090909,0.8818181818181818,0.8636363636363636,0.9090909090909091,0.8636363636363636,0,0.6818181818181818,0.8727272727272727,0.8818181818181818,0.8909090909090909,0.8818181818181818,0.8909090909090909,0.8363636363636363,0.6818181818181818,0.8909090909090909,0.8909090909090909,0.7636363636363637,0.9,0.9,0.8727272727272727,0.8909090909090909
1523,0.8076923076923077,0.8333333333333334,0.8333333333333334,0.7435897435897436,0.0,0.7948717948717948,0.8461538461538461,0.8076923076923077,0.8461538461538461,0.5641025641025641,0.6153846153846154,0.6923076923076923,0.8076923076923077,0.8589743589743589,0.7435897435897436,0.6282051282051282,0.8461538461538461,0.8589743589743589,0.7948717948717948,0.7307692307692307,0.8076923076923077,0.6410256410256411,0.7564102564102564,0.6153846153846154,0.5384615384615384,0.7435897435897436,0.7564102564102564,0.8461538461538461,0.8076923076923077,0.48717948717948717,0.48717948717948717,0.6666666666666666,0.8205128205128205,0.6153846153846154,0.8333333333333334,0.782051282051282,0.8205128205128205,0.48717948717948717,0.6025641025641025,0,0.6153846153846154,0.8717948717948718,0.7564102564102564,0.6282051282051282,0.8076923076923077,0.8205128205128205,0.7435897435897436,0.48717948717948717,0.7692307692307693,0.6153846153846154,0.8461538461538461,0.8333333333333334,0.782051282051282,0.6538461538461539,0.5,0.8461538461538461,0.8205128205128205,0.7948717948717948,0.8205128205128205,0.8205128205128205,0.8333333333333334,0.6794871794871795,0.7051282051282052,0.7435897435897436,0.6923076923076923,0.6153846153846154,0.8333333333333334,0.7948717948717948,0.48717948717948717,0.7692307692307693,0.8333333333333334,0.7948717948717948,0.5256410256410257,0.8076923076923077,0.6153846153846154,0.8333333333333334,0.8461538461538461,0.48717948717948717,0.7435897435897436,0,0.48717948717948717,0.0,0.7051282051282052,0.4230769230769231,0.0,0.4230769230769231,0.7435897435897436,0.8205128205128205,0.7435897435897436,0.48717948717948717,0.48717948717948717,0.8461538461538461,0.8205128205128205,0.8333333333333334,0.7692307692307693,0.0,0.8076923076923077,0.8205128205128205,0.48717948717948717,0.8076923076923077,0.8461538461538461,0.7692307692307693,0.7948717948717948,0.5641025641025641,0.48717948717948717,0.7435897435897436,0.8461538461538461,0.7564102564102564,0.4230769230769231,0.8076923076923077,0,0.8589743589743589,0.0,0.48717948717948717,0.8076923076923077,0.8333333333333334,0.8589743589743589,0.8205128205128205,0.8461538461538461,0.8461538461538461,0.5384615384615384,0.7948717948717948,0.717948717948718,0.0,0.8205128205128205,0.8589743589743589,0.0,0.8076923076923077,0.0,0.8461538461538461,0.8461538461538461,0.8333333333333334,0.7948717948717948,0.782051282051282,0,0.6153846153846154,0.782051282051282,0.8205128205128205,0.8205128205128205,0.8205128205128205,0.8717948717948718,0.8076923076923077,0.48717948717948717,0.8076923076923077,0.6923076923076923,0.8076923076923077,0.8333333333333334,0.8205128205128205,0.8333333333333334,0.8333333333333334
1524,0.8589743589743589,0.8461538461538461,0.8589743589743589,0.782051282051282,0.0,0.8205128205128205,0.8461538461538461,0.8205128205128205,0.8333333333333334,0.6794871794871795,0.6794871794871795,0.6794871794871795,0.8333333333333334,0.8461538461538461,0.782051282051282,0.7948717948717948,0.8461538461538461,0.8461538461538461,0.8076923076923077,0.782051282051282,0.8205128205128205,0.6794871794871795,0.7564102564102564,0.7948717948717948,0.6666666666666666,0.782051282051282,0.8333333333333334,0.8461538461538461,0.8076923076923077,0.6794871794871795,0.6794871794871795,0.6794871794871795,0.8846153846153846,0.7948717948717948,0.8846153846153846,0.8333333333333334,0.8205128205128205,0.6794871794871795,0.6794871794871795,0,0.782051282051282,0.8333333333333334,0.7307692307692307,0.7948717948717948,0.8589743589743589,0.8333333333333334,0.7435897435897436,0.6794871794871795,0.8205128205128205,0.7948717948717948,0.8461538461538461,0.8333333333333334,0.782051282051282,0.7051282051282052,0.6794871794871795,0.8846153846153846,0.8589743589743589,0.8333333333333334,0.8717948717948718,0.7948717948717948,0.8589743589743589,0.6794871794871795,0.782051282051282,0.782051282051282,0.717948717948718,0.782051282051282,0.8717948717948718,0.8076923076923077,0.6794871794871795,0.8076923076923077,0.8717948717948718,0.8461538461538461,0.6666666666666666,0.8461538461538461,0.6794871794871795,0.8333333333333334,0.8717948717948718,0.6794871794871795,0.782051282051282,0,0.6794871794871795,0.0,0.6923076923076923,0.5897435897435898,0.0,0.7051282051282052,0.7051282051282052,0.8589743589743589,0.782051282051282,0.6794871794871795,0.6794871794871795,0.8205128205128205,0.8461538461538461,0.8717948717948718,0.8461538461538461,0.0,0.8205128205128205,0.8076923076923077,0.6794871794871795,0.7948717948717948,0.8461538461538461,0.8461538461538461,0.8589743589743589,0.7948717948717948,0.6666666666666666,0.782051282051282,0.8589743589743589,0.7307692307692307,0.5769230769230769,0.8333333333333334,0,0.8076923076923077,0.0,0.5512820512820513,0.8333333333333334,0.8461538461538461,0.8589743589743589,0.8333333333333334,0.8717948717948718,0.8461538461538461,0.6794871794871795,0.7307692307692307,0.7051282051282052,0.0,0.8333333333333334,0.8333333333333334,0.0,0.8461538461538461,0.0,0.8333333333333334,0.8461538461538461,0.8589743589743589,0.8333333333333334,0.7692307692307693,0,0.782051282051282,0.8333333333333334,0.8589743589743589,0.8717948717948718,0.8076923076923077,0.8461538461538461,0.8076923076923077,0.6794871794871795,0.8076923076923077,0.6794871794871795,0.8076923076923077,0.7948717948717948,0.8333333333333334,0.8333333333333334,0.8717948717948718
1547,0.744,0.804,0.744,0.796,0.672,0.792,0.748,0.768,0.776,0.744,0.74,0.0,0.74,0.804,0.74,0.744,0.74,0.788,0.0,0.784,0.744,0.74,0.784,0.744,0.74,0.74,0.736,0.74,0.796,0.74,0.74,0.732,0.844,0.748,0.748,0.68,0.748,0.74,0.788,0,0.676,0.74,0.74,0.744,0.796,0.74,0.74,0.74,0.716,0.752,0.816,0.764,0.724,0.736,0.74,0.76,0.832,0.744,0.74,0.764,0.656,0.784,0.788,0.74,0.744,0.684,0.744,0.808,0.74,0.808,0.744,0.74,0.74,0.74,0.764,0.74,0.768,0.74,0.74,0,0.74,0.744,0.772,0.692,0.74,0.768,0.744,0.0,0.788,0.74,0.74,0.8,0.764,0.0,0.772,0.74,0.82,0.74,0.74,0.756,0.736,0.724,0.82,0.74,0.74,0.74,0.824,0.74,0.74,0.812,0,0.0,0.74,0.74,0.832,0.752,0.784,0.74,0.744,0.824,0.74,0.704,0.74,0.74,0.78,0.756,0.74,0.74,0.512,0.768,0.732,0.752,0.756,0.74,0,0.744,0.82,0.744,0.792,0.74,0.756,0.776,0.74,0.816,0.788,0.748,0.0,0.812,0.752,0.82
1548,0.528,0.568,0.4688,0.6608,0.2928,0.68,0.392,0.6416,0.632,0.0,0.5776,0.512,0.648,0.0,0.5728,0.5008,0.5344,0.4592,0.4672,0.6272,0.4736,0.576,0.6432,0.52,0.4528,0.5728,0.472,0.4736,0.664,0.0,0.4688,0.0,0.0,0.52,0.5344,0.504,0.0,0.5712,0.6336,0,0.5584,0.5712,0.512,0.5568,0.656,0.5744,0.5088,0.5728,0.4784,0.5728,0.0,0.6048,0.4544,0.4944,0.4736,0.4528,0.6464,0.4752,0.48,0.5056,0.4544,0.6448,0.6464,0.5728,0.4736,0.4304,0.0,0.6384,0.4528,0.6432,0.6464,0.5712,0.4288,0.6064,0.6144,0.5712,0.4736,0.4688,0.5728,0,0.5952,0.4704,0.6592,0.0,0.2928,0.4848,0.56,0.4384,0.6336,0.5632,0.4688,0.592,0.5312,0.5344,0.0,0.5728,0.6864,0.5424,0.4688,0.5232,0.6048,0.3136,0.672,0.6304,0.4368,0.5088,0.6512,0.512,0.0,0.6768,0,0.5136,0.2928,0.448,0.0,0.0,0.6304,0.6464,0.5936,0.0,0.6016,0.5216,0.4432,0.4688,0.0,0.5632,0.4592,0.6384,0.2576,0.0,0.0,0.584,0.528,0.4512,0,0.5488,0.6272,0.4592,0.6816,0.6288,0.4768,0.5824,0.4848,0.6544,0.6384,0.0,0.5104,0.6528,0.576,0.0
1549,0.2393617021276596,0.2553191489361702,0.19148936170212766,0.24468085106382978,0.10638297872340426,0.30851063829787234,0.18617021276595744,0.24468085106382978,0.24468085106382978,0.23404255319148937,0.19148936170212766,0.2127659574468085,0.2393617021276596,0.0,0.25,0.15425531914893617,0.21808510638297873,0.18617021276595744,0.1702127659574468,0.25,0.17553191489361702,0.0,0.23404255319148937,0.16489361702127658,0.2393617021276596,0.2553191489361702,0.1702127659574468,0.22872340425531915,0.2872340425531915,0.0,0.22340425531914893,0.26063829787234044,0.30851063829787234,0.2074468085106383,0.26063829787234044,0.26063829787234044,0.16489361702127658,0.21808510638297873,0.2712765957446808,0,0.19148936170212766,0.0,0.22340425531914893,0.14893617021276595,0.28191489361702127,0.16489361702127658,0.22340425531914893,0.22340425531914893,0.17553191489361702,0.0,0.0,0.22872340425531915,0.1595744680851064,0.18085106382978725,0.20212765957446807,0.19680851063829788,0.2765957446808511,0.25,0.19680851063829788,0.1702127659574468,0.1595744680851064,0.2393617021276596,0.25,0.25,0.17553191489361702,0.10106382978723404,0.2393617021276596,0.2765957446808511,0.22340425531914893,0.2765957446808511,0.24468085106382978,0.13829787234042554,0.20212765957446807,0.23404255319148937,0.19148936170212766,0.24468085106382978,0.18085106382978725,0.22340425531914893,0.25,0,0.2872340425531915,0.22872340425531915,0.24468085106382978,0.0,0.10638297872340426,0.19148936170212766,0.2393617021276596,0.18085106382978725,0.2553191489361702,0.22340425531914893,0.22340425531914893,0.2712765957446808,0.21808510638297873,0.18085106382978725,0.22872340425531915,0.0,0.23404255319148937,0.2553191489361702,0.20212765957446807,0.22872340425531915,0.22340425531914893,0.2074468085106383,0.31382978723404253,0.2074468085106383,0.21808510638297873,0.0,0.2925531914893617,0.22340425531914893,0.21808510638297873,0.26063829787234044,0,0.2127659574468085,0.10638297872340426,0.1595744680851064,0.0,0.26063829787234044,0.22872340425531915,0.25,0.0,0.31382978723404253,0.21808510638297873,0.1595744680851064,0.19148936170212766,0.22340425531914893,0.2712765957446808,0.28191489361702127,0.22872340425531915,0.30319148936170215,0.16489361702127658,0.2127659574468085,0.2712765957446808,0.0,0.17553191489361702,0.19680851063829788,0,0.19148936170212766,0.2074468085106383,0.19148936170212766,0.3191489361702128,0.24468085106382978,0.22872340425531915,0.28191489361702127,0.22340425531914893,0.2872340425531915,0.24468085106382978,0.25,0.23404255319148937,0.2393617021276596,0.0,0.3191489361702128
1551,0.38,0.41,0.29,0.36,0.1,0.34,0.15,0.36,0.34,0.31,0.28,0.3,0.34,0.0,0.33,0.26,0.26,0.26,0.28,0.37,0.28,0.0,0.32,0.28,0.24,0.28,0.23,0.29,0.33,0.0,0.28,0.35,0.39,0.24,0.32,0.19,0.3,0.28,0.29,0,0.28,0.0,0.24,0.26,0.35,0.16,0.26,0.28,0.3,0.0,0.0,0.28,0.19,0.25,0.32,0.26,0.34,0.29,0.26,0.28,0.25,0.32,0.34,0.33,0.24,0.06,0.33,0.3,0.28,0.35,0.36,0.21,0.24,0.32,0.28,0.35,0.31,0.28,0.33,0,0.28,0.28,0.27,0.14,0.1,0.23,0.31,0.29,0.32,0.28,0.28,0.34,0.25,0.26,0.29,0.0,0.36,0.31,0.28,0.28,0.36,0.26,0.36,0.38,0.27,0.0,0.37,0.24,0.23,0.34,0,0.23,0.1,0.19,0.34,0.35,0.26,0.34,0.0,0.44,0.31,0.19,0.29,0.28,0.25,0.38,0.31,0.34,0.07,0.3,0.27,0.0,0.27,0.25,0,0.28,0.33,0.29,0.38,0.32,0.29,0.34,0.28,0.36,0.34,0.29,0.25,0.34,0.0,0.38
1552,0.3890909090909091,0.3563636363636364,0.2909090909090909,0.36727272727272725,0.23272727272727273,0.4109090909090909,0.3418181818181818,0.3563636363636364,0.36727272727272725,0.3381818181818182,0.32,0.27636363636363637,0.36727272727272725,0.33090909090909093,0.27636363636363637,0.2872727272727273,0.36363636363636365,0.26181818181818184,0.2909090909090909,0.3890909090909091,0.3236363636363636,0.36363636363636365,0.3890909090909091,0.28,0.24727272727272728,0.27636363636363637,0.32727272727272727,0.3018181818181818,0.38545454545454544,0.27636363636363637,0.27636363636363637,0.31636363636363635,0.38545454545454544,0.24,0.38545454545454544,0.3709090909090909,0.36727272727272725,0.33090909090909093,0.3018181818181818,0,0.29454545454545455,0.3563636363636364,0.2545454545454545,0.31272727272727274,0.3709090909090909,0.3490909090909091,0.2872727272727273,0.27636363636363637,0.3090909090909091,0.29818181818181816,0.36,0.36363636363636365,0.22545454545454546,0.31272727272727274,0.2509090909090909,0.28,0.38181818181818183,0.3418181818181818,0.3054545454545455,0.32727272727272727,0.3490909090909091,0.3927272727272727,0.39636363636363636,0.27636363636363637,0.27636363636363637,0.29818181818181816,0.4109090909090909,0.31272727272727274,0.27636363636363637,0.38545454545454544,0.3709090909090909,0.3527272727272727,0.2690909090909091,0.33454545454545453,0.2909090909090909,0.36363636363636365,0.2727272727272727,0.27636363636363637,0.27636363636363637,0,0.29818181818181816,0.2727272727272727,0.32727272727272727,0.21818181818181817,0.2509090909090909,0.24727272727272728,0.36363636363636365,0.2909090909090909,0.3890909090909091,0.29818181818181816,0.27636363636363637,0.31636363636363635,0.3781818181818182,0.24363636363636362,0.31636363636363635,0.27636363636363637,0.38181818181818183,0.4072727272727273,0.28,0.31636363636363635,0.3490909090909091,0.24363636363636362,0.38545454545454544,0.3090909090909091,0.2545454545454545,0.32,0.4072727272727273,0.2545454545454545,0.21454545454545454,0.39636363636363636,0,0.24,0.2509090909090909,0.2109090909090909,0.3781818181818182,0.4,0.33090909090909093,0.36,0.28363636363636363,0.3927272727272727,0.33454545454545453,0.28363636363636363,0.2909090909090909,0.27636363636363637,0.36,0.36727272727272725,0.2690909090909091,0.34545454545454546,0.2581818181818182,0.36,0.3927272727272727,0.31272727272727274,0.33454545454545453,0.26181818181818184,0,0.29454545454545455,0.36727272727272725,0.28363636363636363,0.38545454545454544,0.34545454545454546,0.31272727272727274,0.3381818181818182,0.27636363636363637,0.4072727272727273,0.37454545454545457,0.3381818181818182,0.3054545454545455,0.38181818181818183,0.3709090909090909,0.4
1553,0.49714285714285716,0.5657142857142857,0.4,0.4857142857142857,0.38285714285714284,0.5542857142857143,0.41714285714285715,0.49714285714285716,0.49714285714285716,0.44571428571428573,0.32,0.4,0.5257142857142857,0.52,0.3942857142857143,0.32,0.4685714285714286,0.4114285714285714,0.42857142857142855,0.4857142857142857,0.37142857142857144,0.4342857142857143,0.49714285714285716,0.35428571428571426,0.28,0.3942857142857143,0.4,0.42857142857142855,0.49714285714285716,0.5142857142857142,0.34285714285714286,0.4114285714285714,0.5428571428571428,0.38857142857142857,0.5257142857142857,0.46285714285714286,0.4742857142857143,0.3657142857142857,0.49142857142857144,0,0.38857142857142857,0.37714285714285717,0.3942857142857143,0.3657142857142857,0.5314285714285715,0.5257142857142857,0.3942857142857143,0.3942857142857143,0.4114285714285714,0.0,0.5142857142857142,0.44,0.34285714285714286,0.37714285714285717,0.3485714285714286,0.42857142857142855,0.5428571428571428,0.45714285714285713,0.42857142857142855,0.44571428571428573,0.48,0.48,0.49142857142857144,0.3942857142857143,0.38857142857142857,0.36,0.5257142857142857,0.5542857142857143,0.3485714285714286,0.49142857142857144,0.4857142857142857,0.41714285714285715,0.32,0.5028571428571429,0.4228571428571429,0.5142857142857142,0.38285714285714284,0.3942857142857143,0.3942857142857143,0,0.44571428571428573,0.3657142857142857,0.52,0.26857142857142857,0.38285714285714284,0.28,0.44571428571428573,0.38857142857142857,0.4857142857142857,0.3485714285714286,0.3485714285714286,0.49714285714285716,0.4342857142857143,0.44,0.3942857142857143,0.4342857142857143,0.52,0.4742857142857143,0.4,0.41714285714285715,0.49142857142857144,0.4057142857142857,0.5085714285714286,0.38857142857142857,0.3142857142857143,0.36,0.56,0.3942857142857143,0.4,0.5257142857142857,0,0.42857142857142855,0.38285714285714284,0.38285714285714284,0.5257142857142857,0.4857142857142857,0.49142857142857144,0.4857142857142857,0.3942857142857143,0.5714285714285714,0.4514285714285714,0.44,0.38857142857142857,0.3485714285714286,0.4514285714285714,0.5371428571428571,0.33714285714285713,0.4228571428571429,0.32571428571428573,0.49142857142857144,0.49142857142857144,0.3942857142857143,0.4514285714285714,0.37142857142857144,0,0.4,0.46285714285714286,0.3942857142857143,0.5885714285714285,0.45714285714285713,0.4342857142857143,0.4857142857142857,0.38285714285714284,0.5257142857142857,0.5028571428571429,0.4685714285714286,0.41714285714285715,0.52,0.37142857142857144,0.5314285714285715
1554,0.44,0.432,0.344,0.48,0.184,0.456,0.392,0.448,0.408,0.384,0.392,0.392,0.44,0.472,0.384,0.28,0.376,0.336,0.36,0.488,0.328,0.384,0.464,0.392,0.32,0.384,0.336,0.352,0.504,0.384,0.384,0.376,0.496,0.376,0.464,0.392,0.464,0.384,0.48,0,0.376,0.384,0.44,0.352,0.44,0.36,0.44,0.384,0.392,0.384,0.496,0.448,0.288,0.432,0.368,0.344,0.464,0.384,0.44,0.464,0.384,0.464,0.496,0.384,0.368,0.224,0.424,0.52,0.384,0.472,0.424,0.328,0.368,0.384,0.424,0.36,0.336,0.384,0.384,0,0.384,0.384,0.488,0.392,0.184,0.256,0.416,0.336,0.52,0.384,0.384,0.44,0.376,0.36,0.344,0.384,0.504,0.424,0.384,0.472,0.424,0.184,0.496,0.384,0.344,0.384,0.464,0.44,0.328,0.496,0,0.336,0.184,0.24,0.488,0.432,0.392,0.408,0.336,0.448,0.384,0.28,0.4,0.384,0.376,0.376,0.384,0.4,0.28,0.368,0.44,0.424,0.44,0.32,0,0.352,0.472,0.336,0.512,0.448,0.352,0.392,0.384,0.488,0.488,0.36,0.328,0.496,0.424,0.488
1555,0.296,0.296,0.196,0.252,0.1,0.308,0.108,0.268,0.272,0.24,0.24,0.24,0.284,0.0,0.292,0.168,0.2,0.192,0.192,0.264,0.172,0.0,0.252,0.24,0.236,0.292,0.2,0.232,0.312,0.0,0.24,0.224,0.284,0.236,0.256,0.276,0.24,0.24,0.26,0,0.24,0.0,0.24,0.144,0.3,0.116,0.24,0.24,0.192,0.0,0.0,0.22,0.168,0.176,0.196,0.188,0.264,0.22,0.24,0.184,0.204,0.248,0.248,0.292,0.22,0.112,0.26,0.328,0.24,0.276,0.28,0.196,0.24,0.264,0.24,0.256,0.196,0.24,0.292,0,0.244,0.24,0.26,0.0,0.1,0.18,0.24,0.196,0.252,0.24,0.24,0.252,0.148,0.256,0.236,0.0,0.304,0.264,0.24,0.224,0.232,0.188,0.3,0.296,0.196,0.0,0.316,0.24,0.0,0.288,0,0.2,0.1,0.176,0.0,0.248,0.228,0.26,0.0,0.328,0.24,0.192,0.24,0.24,0.288,0.292,0.24,0.288,0.116,0.248,0.276,0.0,0.248,0.184,0,0.24,0.212,0.196,0.308,0.288,0.232,0.268,0.24,0.296,0.256,0.24,0.232,0.264,0.0,0.32
1557,0.5875598086124402,0.6124401913875598,0.6401913875598086,0.6497607655502392,0.5301435406698565,0.6401913875598086,0.6172248803827751,0.6373205741626794,0.6382775119617224,0.6449760765550239,0.5473684210526316,0.0,0.6564593301435406,0.0,0.5808612440191387,0.5875598086124402,0.6334928229665072,0.6344497607655503,0.0,0.6507177033492823,0.6430622009569378,0.645933014354067,0.6555023923444976,0.4688995215311005,0.6392344497607656,0.5808612440191387,0.6114832535885167,0.6325358851674641,0.6488038277511962,0.630622009569378,0.584688995215311,0.5569377990430622,0.645933014354067,0.5406698564593302,0.6430622009569378,0.6133971291866028,0.6086124401913876,0.55311004784689,0.6325358851674641,0,0.5244019138755981,0.6373205741626794,0.5349282296650718,0.5990430622009569,0.6449760765550239,0.6095693779904306,0.5349282296650718,0.55311004784689,0.5483253588516747,0.5244019138755981,0.0,0.6401913875598086,0.5760765550239234,0.5052631578947369,0.645933014354067,0.6363636363636364,0.6382775119617224,0.614354066985646,0.6507177033492823,0.6277511961722488,0.6478468899521531,0.6488038277511962,0.6507177033492823,0.5808612440191387,0.6066985645933014,0.4937799043062201,0.6564593301435406,0.6239234449760765,0.5244019138755981,0.6516746411483254,0.6440191387559808,0.630622009569378,0.645933014354067,0.5980861244019139,0.6057416267942584,0.615311004784689,0.6392344497607656,0.3598086124401914,0.5808612440191387,0,0.6363636363636364,0.5760765550239234,0.6239234449760765,0.0,0.5244019138755981,0.6066985645933014,0.6200956937799043,0.0,0.6497607655502392,0.6449760765550239,0.3464114832535885,0.6325358851674641,0.6057416267942584,0.0,0.6421052631578947,0.5244019138755981,0.5684210526315789,0.6545454545454545,0.5722488038277512,0.6239234449760765,0.6220095693779905,0.5904306220095694,0.6440191387559808,0.5913875598086125,0.6325358851674641,0.6086124401913876,0.631578947368421,0.5349282296650718,0.0,0.6488038277511962,0,0.0,0.5244019138755981,0.6229665071770335,0.6421052631578947,0.6468899521531101,0.6344497607655503,0.6535885167464115,0.6392344497607656,0.631578947368421,0.583732057416268,0.5617224880382775,0.6095693779904306,0.3464114832535885,0.5961722488038278,0.6105263157894737,0.569377990430622,0.6421052631578947,0.43732057416267944,0.6363636363636364,0.6574162679425838,0.6382775119617224,0.6382775119617224,0.5856459330143541,0,0.5244019138755981,0.6325358851674641,0.6373205741626794,0.6382775119617224,0.6334928229665072,0.5904306220095694,0.615311004784689,0.614354066985646,0.6488038277511962,0.6535885167464115,0.630622009569378,0.0,0.6401913875598086,0.6401913875598086,0.6488038277511962
1558,0.887709991158267,0.887709991158267,0.883289124668435,0.8921308576480991,0.0,0.8930150309460654,0.8885941644562334,0.8903625110521662,0.8938992042440318,0.8921308576480991,0.8850574712643678,0.8850574712643678,0.8903625110521662,0.0,0.8824049513704686,0.8868258178603006,0.8992042440318302,0.8841732979664014,0.8850574712643678,0.8956675508399646,0.8850574712643678,0.8903625110521662,0.8983200707338639,0.8903625110521662,0.8850574712643678,0.8850574712643678,0.8841732979664014,0.8868258178603006,0.8974358974358975,0.8850574712643678,0.8850574712643678,0.8974358974358975,0.0,0.8938992042440318,0.8956675508399646,0.8956675508399646,0.9000884173297966,0.8850574712643678,0.8947833775419982,0,0.7471264367816092,0.8992042440318302,0.8850574712643678,0.8930150309460654,0.8956675508399646,0.8797524314765695,0.8850574712643678,0.8850574712643678,0.8938992042440318,0.8956675508399646,0.0,0.8885941644562334,0.8824049513704686,0.8841732979664014,0.8850574712643678,0.883289124668435,0.8947833775419982,0.8938992042440318,0.8859416445623343,0.887709991158267,0.8921308576480991,0.8947833775419982,0.8930150309460654,0.8824049513704686,0.8841732979664014,0.7471264367816092,0.9000884173297966,0.9027409372236959,0.843501326259947,0.8938992042440318,0.8868258178603006,0.8974358974358975,0.8850574712643678,0.8903625110521662,0.8930150309460654,0.8797524314765695,0.8868258178603006,0.8850574712643678,0.8824049513704686,0,0.8850574712643678,0.0,0.8947833775419982,0.0,0.0,0.8850574712643678,0.8974358974358975,0.8850574712643678,0.8912466843501327,0.8850574712643678,0.8850574712643678,0.8930150309460654,0.8868258178603006,0.8797524314765695,0.887709991158267,0.0,0.8912466843501327,0.8956675508399646,0.8850574712643678,0.8885941644562334,0.896551724137931,0.861184792219275,0.896551724137931,0.905393457117595,0.8850574712643678,0.8762157382847038,0.8947833775419982,0.8850574712643678,0.0,0.8956675508399646,0,0.8770999115826702,0.0,0.8850574712643678,0.0,0.9018567639257294,0.8894783377541998,0.8903625110521662,0.8930150309460654,0.8930150309460654,0.8850574712643678,0.757736516357206,0.8850574712643678,0.0,0.8921308576480991,0.8841732979664014,0.0,0.8868258178603006,0.0,0.8912466843501327,0.9000884173297966,0.9000884173297966,0.8947833775419982,0.8912466843501327,0,0.7966401414677277,0.8894783377541998,0.8824049513704686,0.8868258178603006,0.8885941644562334,0.887709991158267,0.8868258178603006,0.8850574712643678,0.8956675508399646,0.8947833775419982,0.8894783377541998,0.874447391688771,0.8956675508399646,0.8956675508399646,0.0
1560,0.9417293233082706,0.9868421052631579,0.7838345864661654,0.981203007518797,0.0,0.9849624060150376,0.7819548872180451,0.9906015037593985,0.9887218045112782,0.9699248120300752,0.981203007518797,0.7781954887218046,0.9830827067669173,0.0,0.8703007518796992,0.9793233082706767,0.9887218045112782,0.8646616541353384,0.8157894736842105,0.981203007518797,0.8139097744360902,0.981203007518797,0.981203007518797,0.9718045112781954,0.7781954887218046,0.8703007518796992,0.8796992481203008,0.8740601503759399,0.981203007518797,0.0,0.7781954887218046,0.9699248120300752,0.9849624060150376,0.9718045112781954,0.981203007518797,0.9285714285714286,0.7951127819548872,0.8703007518796992,0.981203007518797,0,0.9022556390977443,0.9906015037593985,0.8627819548872181,0.981203007518797,0.981203007518797,0.12406015037593984,0.8665413533834586,0.7781954887218046,0.9454887218045113,0.981203007518797,0.0,0.9868421052631579,0.7556390977443609,0.981203007518797,0.7781954887218046,0.7988721804511278,0.9830827067669173,0.9492481203007519,0.943609022556391,0.981203007518797,0.9530075187969925,0.981203007518797,0.981203007518797,0.8703007518796992,0.9718045112781954,0.9398496240601504,0.9774436090225563,0.981203007518797,0.7781954887218046,0.981203007518797,0.9793233082706767,0.9868421052631579,0.7781954887218046,0.9530075187969925,0.9774436090225563,0.9887218045112782,0.806390977443609,0.7781954887218046,0.8703007518796992,0,0.8421052631578947,0.0,0.981203007518797,0.0,0.0,0.7781954887218046,0.981203007518797,0.7819548872180451,0.981203007518797,0.8176691729323309,0.7781954887218046,0.981203007518797,0.981203007518797,0.9586466165413534,0.9830827067669173,0.0,0.9774436090225563,0.9736842105263158,0.7781954887218046,0.981203007518797,0.9887218045112782,0.7913533834586466,0.9868421052631579,0.9548872180451128,0.7781954887218046,0.9060150375939849,0.9887218045112782,0.8627819548872181,0.0,0.9868421052631579,0,0.9530075187969925,0.0,0.7669172932330827,0.0,0.9755639097744361,0.9887218045112782,0.9642857142857143,0.8120300751879699,0.9887218045112782,0.9793233082706767,0.8364661654135338,0.7781954887218046,0.0,0.981203007518797,0.9887218045112782,0.0,0.9774436090225563,0.8364661654135338,0.9868421052631579,0.9755639097744361,0.9887218045112782,0.9830827067669173,0.7800751879699248,0,0.9774436090225563,0.9830827067669173,0.7838345864661654,0.9924812030075187,0.9830827067669173,0.8703007518796992,0.981203007518797,0.7781954887218046,0.981203007518797,0.981203007518797,0.9699248120300752,0.8082706766917294,0.9830827067669173,0.9906015037593985,0.981203007518797
1566,0.5775577557755776,0.5346534653465347,0.5181518151815182,0.570957095709571,0.8778877887788779,0.5841584158415841,0.9900990099009901,0.6501650165016502,0.6105610561056105,0.5808580858085809,0.504950495049505,0.5082508250825083,0.5874587458745875,0.0,0.5082508250825083,0.49504950495049505,0.7887788778877888,0.5742574257425742,0.5478547854785478,0.5511551155115512,0.5379537953795379,0.0,0.5346534653465347,0.49504950495049505,0.5115511551155115,0.504950495049505,0.5379537953795379,0.9966996699669967,0.5577557755775577,0.0,0.504950495049505,0.6237623762376238,0.0,0.49504950495049505,0.9537953795379538,0.834983498349835,0.0,0.504950495049505,0.5775577557755776,0,0.504950495049505,0.0,0.6996699669966997,0.504950495049505,0.5874587458745875,0.6270627062706271,0.6996699669966997,0.504950495049505,0.7722772277227723,0.0,0.0,0.6072607260726073,0.5841584158415841,0.49504950495049505,0.5214521452145214,0.528052805280528,0.6270627062706271,0.5379537953795379,0.6336633663366337,0.5478547854785478,0.933993399339934,0.5478547854785478,0.5346534653465347,0.5082508250825083,0.5577557755775577,0.504950495049505,0.9834983498349835,0.5973597359735974,0.504950495049505,0.5379537953795379,0.5445544554455446,1.0,0.48514851485148514,0.9966996699669967,0.504950495049505,0.6138613861386139,0.5742574257425742,0.504950495049505,0.5082508250825083,0,0.5412541254125413,0.5016501650165016,0.5742574257425742,0.0,0.858085808580858,0.5082508250825083,0.5511551155115512,0.5445544554455446,0.5676567656765676,0.5577557755775577,0.504950495049505,0.5115511551155115,0.9933993399339934,0.5313531353135313,0.6237623762376238,0.0,0.5874587458745875,0.8943894389438944,0.504950495049505,0.5214521452145214,0.6303630363036303,0.5247524752475248,0.6237623762376238,0.49174917491749176,0.504950495049505,0.0,0.0,0.6996699669966997,0.0,0.6204620462046204,0,0.570957095709571,0.858085808580858,0.46864686468646866,0.0,0.9735973597359736,0.5346534653465347,0.5478547854785478,0.0,0.0,0.5511551155115512,0.49174917491749176,0.528052805280528,0.504950495049505,0.5313531353135313,0.5181518151815182,0.5313531353135313,0.5973597359735974,0.45874587458745875,0.6072607260726073,0.9867986798679867,0.0,0.5643564356435643,0.5247524752475248,0,0.504950495049505,1.0,0.5148514851485149,0.636963696369637,0.6237623762376238,0.9933993399339934,0.5148514851485149,0.9306930693069307,0.5841584158415841,0.5412541254125413,0.6303630363036303,0.5214521452145214,0.5808580858085809,0.0,0.0
4329,0.847457627118644,0.8559322033898306,0.847457627118644,0.847457627118644,0.3813559322033898,0.847457627118644,0.847457627118644,0.847457627118644,0.8389830508474576,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8220338983050848,0.847457627118644,0.864406779661017,0.8559322033898306,0.8559322033898306,0.847457627118644,0.847457627118644,0.847457627118644,0.0,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8389830508474576,0.847457627118644,0.847457627118644,0.8050847457627118,0.7796610169491526,0.847457627118644,0.847457627118644,0,0.8559322033898306,0.0,0.847457627118644,0.847457627118644,0.847457627118644,0.8135593220338984,0.847457627118644,0.847457627118644,0.8389830508474576,0.0,0.8305084745762712,0.847457627118644,0.7966101694915254,0.8559322033898306,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8050847457627118,0.847457627118644,0.847457627118644,0.847457627118644,0.8050847457627118,0.5084745762711864,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8389830508474576,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8559322033898306,0.847457627118644,0.847457627118644,0,0.847457627118644,0.8389830508474576,0.847457627118644,0.8389830508474576,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.0,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8220338983050848,0.3898305084745763,0.8389830508474576,0.847457627118644,0.847457627118644,0.0,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0,0.8220338983050848,0.847457627118644,0.8305084745762712,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.0,0.8559322033898306,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.8135593220338984,0.8389830508474576,0.847457627118644,0.847457627118644,0.0,0.8389830508474576,0.8389830508474576,0.0,0.847457627118644,0.847457627118644,0,0.8559322033898306,0.8559322033898306,0.847457627118644,0.8305084745762712,0.847457627118644,0.847457627118644,0.8220338983050848,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.847457627118644,0.0,0.847457627118644
4340,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
