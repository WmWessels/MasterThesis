0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
38,0.9798515376458112,0.9777306468716861,0.9384941675503712,0.9660657476139979,0.7051961823966065,0.9809119830328739,0.9650053022269353,0.9766702014846236,0.9840933191940615,0.9427359490986215,0.9384941675503712,0.9384941675503712,0.9766702014846236,0.0,0.9692470837751855,0.9406150583244963,0.9628844114528102,0.9374337221633086,0.9384941675503712,0.9639448568398727,0.9374337221633086,0.9406150583244963,0.968186638388123,0.9384941675503712,0.9384941675503712,0.9692470837751855,0.9480381760339343,0.9628844114528102,0.9734888653234358,0.9384941675503712,0.9384941675503712,0.9512195121951219,0.9840933191940615,0.9384941675503712,0.9639448568398727,0.9480381760339343,0.9565217391304348,0.9384941675503712,0.9734888653234358,0,0.7476139978791092,0.9798515376458112,0.9384941675503712,0.9374337221633086,0.9798515376458112,0.9247083775185578,0.9331919406150583,0.9384941675503712,0.9416755037115588,0.9384941675503712,0.0,0.9798515376458112,0.9300106044538706,0.9353128313891834,0.9384941675503712,0.9374337221633086,0.9766702014846236,0.9459172852598091,0.9597030752916225,0.9544008483563097,0.9544008483563097,0.9639448568398727,0.9628844114528102,0.9692470837751855,0.9597030752916225,0.7476139978791092,0.9692470837751855,0.9787910922587487,0.9384941675503712,0.968186638388123,0.9777306468716861,0.968186638388123,0.9384941675503712,0.9671261930010604,0.9384941675503712,0.9787910922587487,0.9406150583244963,0.9384941675503712,0.9692470837751855,0,0.9384941675503712,0.9384941675503712,0.9650053022269353,0.0,0.8441145281018028,0.9384941675503712,0.9448568398727466,0.9384941675503712,0.9628844114528102,0.9384941675503712,0.9384941675503712,0.9777306468716861,0.9692470837751855,0.9777306468716861,0.9628844114528102,0.8494167550371156,0.9766702014846236,0.9544008483563097,0.9384941675503712,0.9597030752916225,0.9819724284199364,0.5482502651113468,0.975609756097561,0.975609756097561,0.9384941675503712,0.9395546129374337,0.9830328738069989,0.9384941675503712,0.0,0.9703075291622482,0,0.9342523860021209,0.8441145281018028,0.9384941675503712,0.9787910922587487,0.9607635206786851,0.9798515376458112,0.9660657476139979,0.9406150583244963,0.9840933191940615,0.9384941675503712,0.806998939554613,0.9384941675503712,0.9384941675503712,0.9809119830328739,0.9862142099681867,0.9384941675503712,0.9607635206786851,0.9321314952279958,0.9830328738069989,0.9607635206786851,0.9798515376458112,0.9618239660657476,0.9384941675503712,0.0,0.9384941675503712,0.9798515376458112,0.9384941675503712,0.9777306468716861,0.9745493107104984,0.953340402969247,0.9798515376458112,0.9384941675503712,0.9734888653234358,0.9607635206786851,0.9522799575821845,0.9650053022269353,0.9724284199363733,0.9819724284199364,0.9787910922587487
39,0.0,0.7976190476190477,0.8095238095238095,0.7738095238095238,0.0,0.8928571428571429,0.7619047619047619,0.8809523809523809,0.8452380952380952,0.42857142857142855,0.42857142857142855,0.0,0.7976190476190477,0.8333333333333334,0.6309523809523809,0.6785714285714286,0.8928571428571429,0.8690476190476191,0.0,0.7142857142857143,0.8333333333333334,0.5714285714285714,0.6666666666666666,0.42857142857142855,0.8809523809523809,0.6309523809523809,0.8214285714285714,0.8809523809523809,0.7738095238095238,0.42857142857142855,0.42857142857142855,0.5833333333333334,0.8571428571428571,0.42857142857142855,0.8809523809523809,0.8571428571428571,0.4880952380952381,0.42857142857142855,0.6071428571428571,0,0.40476190476190477,0.8809523809523809,0.6071428571428571,0.5714285714285714,0.8571428571428571,0.15476190476190477,0.6071428571428571,0.42857142857142855,0.4642857142857143,0.0,0.8333333333333334,0.8571428571428571,0.7976190476190477,0.8214285714285714,0.8095238095238095,0.8571428571428571,0.8928571428571429,0.8214285714285714,0.8571428571428571,0.8571428571428571,0.8214285714285714,0.7142857142857143,0.75,0.6309523809523809,0.7857142857142857,0.40476190476190477,0.8333333333333334,0.75,0.42857142857142855,0.7619047619047619,0.8809523809523809,0.8928571428571429,0.9047619047619048,0.7738095238095238,0.42857142857142855,0.8452380952380952,0.8809523809523809,0.42857142857142855,0.6309523809523809,0,0.42857142857142855,0.5952380952380952,0.6428571428571429,0.8214285714285714,0.42857142857142855,0.5595238095238095,0.7619047619047619,0.0,0.75,0.42857142857142855,0.42857142857142855,0.8095238095238095,0.8452380952380952,0.0,0.8690476190476191,0.42857142857142855,0.0,0.7857142857142857,0.4523809523809524,0.8333333333333334,0.8452380952380952,0.8452380952380952,0.8690476190476191,0.6309523809523809,0.8333333333333334,0.6666666666666666,0.8690476190476191,0.6071428571428571,0.8809523809523809,0.75,0,0.0,0.42857142857142855,0.7619047619047619,0.8452380952380952,0.8690476190476191,0.8571428571428571,0.75,0.8809523809523809,0.8214285714285714,0.4642857142857143,0.7142857142857143,0.7619047619047619,0.42857142857142855,0.7976190476190477,0.8095238095238095,0.42857142857142855,0.8095238095238095,0.42857142857142855,0.8333333333333334,0.8571428571428571,0.9047619047619048,0.8690476190476191,0.75,0.0,0.4166666666666667,0.9047619047619048,0.8095238095238095,0.8928571428571429,0.8214285714285714,0.5952380952380952,0.7380952380952381,0.42857142857142855,0.7857142857142857,0.7142857142857143,0.7976190476190477,0.0,0.7857142857142857,0.8690476190476191,0.8214285714285714
42,0.8070175438596491,0.8654970760233918,0.6023391812865497,0.9064327485380117,0.8245614035087719,0.8771929824561403,0.9064327485380117,0.9298245614035088,0.9415204678362573,0.8128654970760234,0.8538011695906432,0.3333333333333333,0.847953216374269,0.0,0.2631578947368421,0.8187134502923976,0.9181286549707602,0.9005847953216374,0.0,0.7894736842105263,0.7076023391812866,0.9064327485380117,0.7602339181286549,0.6549707602339181,0.25146198830409355,0.2631578947368421,0.15204678362573099,0.9239766081871345,0.8771929824561403,0.0,0.4152046783625731,0.8713450292397661,0.0,0.6900584795321637,0.9122807017543859,0.4678362573099415,0.45614035087719296,0.6023391812865497,0.6900584795321637,0,0.672514619883041,0.9415204678362573,0.2573099415204678,0.9298245614035088,0.8654970760233918,0.36257309941520466,0.2046783625730994,0.4502923976608187,0.7134502923976608,0.7602339181286549,0.0,0.9298245614035088,0.39766081871345027,0.9181286549707602,0.24561403508771928,0.8713450292397661,0.9239766081871345,0.5087719298245614,0.22807017543859648,0.7660818713450293,0.6783625730994152,0.7309941520467836,0.8128654970760234,0.2631578947368421,0.6608187134502924,0.9064327485380117,0.8304093567251462,0.7602339181286549,0.3333333333333333,0.783625730994152,0.9064327485380117,0.30994152046783624,0.34502923976608185,0.5029239766081871,0.672514619883041,0.9415204678362573,0.8362573099415205,0.13450292397660818,0.2631578947368421,0,0.4269005847953216,0.23391812865497075,0.8011695906432749,0.4502923976608187,0.9005847953216374,0.4269005847953216,0.8830409356725146,0.0,0.8596491228070176,0.13450292397660818,0.13450292397660818,0.7017543859649122,0.7076023391812866,0.5730994152046783,0.9005847953216374,0.4502923976608187,0.8888888888888888,0.8947368421052632,0.4093567251461988,0.7777777777777778,0.38011695906432746,0.8245614035087719,0.8947368421052632,0.0,0.30994152046783624,0.783625730994152,0.8713450292397661,0.2573099415204678,0.3216374269005848,0.9005847953216374,0,0.0,0.8654970760233918,0.8128654970760234,0.8654970760233918,0.8947368421052632,0.9239766081871345,0.7602339181286549,0.847953216374269,0.8888888888888888,0.6842105263157895,0.6900584795321637,0.39766081871345027,0.13450292397660818,0.6900584795321637,0.9064327485380117,0.391812865497076,0.8654970760233918,0.1286549707602339,0.9239766081871345,0.8538011695906432,0.9064327485380117,0.8713450292397661,0.38596491228070173,0.0,0.9005847953216374,0.9181286549707602,0.6374269005847953,0.9181286549707602,0.9064327485380117,0.8888888888888888,0.7076023391812866,0.4678362573099415,0.8713450292397661,0.8538011695906432,0.695906432748538,0.47953216374269003,0.9005847953216374,0.935672514619883,0.8245614035087719
44,0.9374456993918332,0.9252823631624674,0.7593397046046916,0.9565595134665508,0.7741094700260643,0.947871416159861,0.9252823631624674,0.9609035621198957,0.952215464813206,0.9200695047784535,0.9105125977410947,0.788010425716768,0.947871416159861,0.0,0.7862728062554301,0.9218071242397915,0.9339704604691572,0.8688097306689835,0.8366637706342311,0.9409209383145091,0.8262380538662033,0.9591659426585578,0.944396177237185,0.9165942658557776,0.6907037358818419,0.7862728062554301,0.7437011294526499,0.9287576020851434,0.944396177237185,0.0,0.6055603822762815,0.889661164205039,0.0,0.9192006950477846,0.946133796698523,0.8149435273675065,0.952215464813206,0.8001737619461338,0.9409209383145091,0,0.889661164205039,0.9530842745438749,0.6490008688097306,0.9357080799304952,0.9409209383145091,0.9417897480451781,0.6490008688097306,0.6055603822762815,0.8879235447437012,0.9174630755864466,0.0,0.9582971329278888,0.7150304083405734,0.9044309296264118,0.5977410947002606,0.7775847089487402,0.9556907037358818,0.9052997393570807,0.9096437880104257,0.893136403127715,0.8618592528236316,0.9435273675065161,0.9374456993918332,0.7862728062554301,0.792354474370113,0.8922675933970461,0.0,0.9383145091225021,0.3944396177237185,0.950477845351868,0.9218071242397915,0.9426585577758471,0.6915725456125109,0.8688097306689835,0.9235447437011295,0.9609035621198957,0.8088618592528236,0.6055603822762815,0.7862728062554301,0,0.9096437880104257,0.6472632493483927,0.952215464813206,0.0,0.7984361424847958,0.5942658557775847,0.9209383145091226,0.7975673327541268,0.944396177237185,0.9044309296264118,0.6055603822762815,0.9061685490877498,0.8983492615117289,0.9357080799304952,0.9304952215464813,0.7558644656820156,0.952215464813206,0.9409209383145091,0.6055603822762815,0.8887923544743701,0.9548218940052129,0.7567332754126846,0.9548218940052129,0.9278887923544744,0.6568201563857515,0.8340573414422241,0.94874022589053,0.6490008688097306,0.0,0.9574283231972198,0,0.9261511728931364,0.7975673327541268,0.5742832319721981,0.0,0.9383145091225021,0.9539530842745438,0.947002606429192,0.8079930495221547,0.94874022589053,0.8905299739357081,0.889661164205039,0.6437880104257168,0.6055603822762815,0.9218071242397915,0.9200695047784535,0.6055603822762815,0.9496090356211989,0.8097306689834927,0.9600347523892268,0.9313640312771503,0.9591659426585578,0.9226759339704604,0.7567332754126846,0.0,0.8922675933970461,0.9565595134665508,0.7558644656820156,0.9669852302345786,0.952215464813206,0.9313640312771503,0.9183318853171155,0.6055603822762815,0.946133796698523,0.9496090356211989,0.9079061685490878,0.8097306689834927,0.9539530842745438,0.9582971329278888,0.0
46,0.943609022556391,0.943609022556391,0.87468671679198,0.9624060150375939,0.8759398496240601,0.9611528822055138,0.9486215538847118,0.9611528822055138,0.9649122807017544,0.0,0.9473684210526315,0.0,0.9598997493734336,0.0,0.6328320802005013,0.8521303258145363,0.9060150375939849,0.8270676691729323,0.0,0.9536340852130326,0.8609022556390977,0.9624060150375939,0.9486215538847118,0.8671679197994987,0.575187969924812,0.6328320802005013,0.0,0.9085213032581454,0.949874686716792,0.0,0.518796992481203,0.0,0.0,0.8659147869674185,0.943609022556391,0.8045112781954887,0.0,0.87468671679198,0.9536340852130326,0,0.949874686716792,0.9624060150375939,0.6027568922305765,0.9649122807017544,0.9536340852130326,0.5401002506265664,0.6165413533834586,0.0,0.793233082706767,0.9611528822055138,0.0,0.9548872180451128,0.7105263157894737,0.818295739348371,0.5012531328320802,0.8107769423558897,0.9611528822055138,0.0,0.5601503759398496,0.8533834586466166,0.8771929824561403,0.9473684210526315,0.9548872180451128,0.6328320802005013,0.0,0.9548872180451128,0.0,0.9586466165413534,0.5338345864661654,0.9548872180451128,0.9461152882205514,0.9536340852130326,0.5902255639097744,0.8809523809523809,0.9611528822055138,0.9548872180451128,0.8558897243107769,0.518796992481203,0.6328320802005013,0,0.9335839598997494,0.5087719298245614,0.9636591478696742,0.0,0.9536340852130326,0.2769423558897243,0.9548872180451128,0.0,0.9548872180451128,0.9360902255639098,0.518796992481203,0.9461152882205514,0.943609022556391,0.0,0.0,0.8721804511278195,0.9611528822055138,0.9411027568922306,0.518796992481203,0.843358395989975,0.9661654135338346,0.0,0.9611528822055138,0.9536340852130326,0.5701754385964912,0.8634085213032582,0.9573934837092731,0.6027568922305765,0.0,0.9611528822055138,0,0.0,0.9523809523809523,0.49874686716791977,0.0,0.0,0.9548872180451128,0.9624060150375939,0.8546365914786967,0.9598997493734336,0.9611528822055138,0.9423558897243107,0.518796992481203,0.518796992481203,0.0,0.9285714285714286,0.518796992481203,0.9611528822055138,0.0,0.0,0.0,0.9636591478696742,0.8132832080200502,0.7105263157894737,0.0,0.9548872180451128,0.956140350877193,0.8721804511278195,0.9398496240601504,0.9636591478696742,0.9511278195488722,0.9486215538847118,0.518796992481203,0.956140350877193,0.9598997493734336,0.0,0.0,0.9624060150375939,0.9611528822055138,0.0
49,0.8289473684210527,0.8289473684210527,0.6052631578947368,0.8026315789473685,0.75,0.8289473684210527,0.8289473684210527,0.8289473684210527,0.7894736842105263,0.5657894736842105,0.8421052631578947,0.6973684210526315,0.8157894736842105,0.75,0.7894736842105263,0.8026315789473685,0.8421052631578947,0.631578947368421,0.6052631578947368,0.8157894736842105,0.6447368421052632,0.7894736842105263,0.8289473684210527,0.8289473684210527,0.5921052631578947,0.7894736842105263,0.5789473684210527,0.8157894736842105,0.7763157894736842,0.6710526315789473,0.5394736842105263,0.5789473684210527,0.8157894736842105,0.8157894736842105,0.8157894736842105,0.8026315789473685,0.7105263157894737,0.7894736842105263,0.8289473684210527,0,0.8026315789473685,0.8421052631578947,0.6578947368421053,0.8421052631578947,0.7894736842105263,0.7631578947368421,0.6578947368421053,0.5394736842105263,0.8157894736842105,0.8157894736842105,0.7894736842105263,0.8157894736842105,0.5526315789473685,0.7368421052631579,0.618421052631579,0.6052631578947368,0.8026315789473685,0.6052631578947368,0.8157894736842105,0.8157894736842105,0.7631578947368421,0.8026315789473685,0.8026315789473685,0.7894736842105263,0.6578947368421053,0.7894736842105263,0.8289473684210527,0.8289473684210527,0.5394736842105263,0.8421052631578947,0.8421052631578947,0.8026315789473685,0.42105263157894735,0.8421052631578947,0.8157894736842105,0.7894736842105263,0.5921052631578947,0.5394736842105263,0.7894736842105263,0,0.5394736842105263,0.6973684210526315,0.8421052631578947,0.5263157894736842,0.7763157894736842,0.47368421052631576,0.8157894736842105,0.5789473684210527,0.8157894736842105,0.5394736842105263,0.5394736842105263,0.7631578947368421,0.7368421052631579,0.7631578947368421,0.5657894736842105,0.631578947368421,0.8289473684210527,0.8026315789473685,0.5394736842105263,0.8157894736842105,0.7631578947368421,0.5657894736842105,0.8289473684210527,0.7631578947368421,0.5,0.6973684210526315,0.8289473684210527,0.6578947368421053,0.4342105263157895,0.8421052631578947,0,0.7368421052631579,0.7763157894736842,0.40789473684210525,0.8289473684210527,0.8947368421052632,0.8157894736842105,0.8026315789473685,0.631578947368421,0.7763157894736842,0.8289473684210527,0.8026315789473685,0.6578947368421053,0.5394736842105263,0.7368421052631579,0.7763157894736842,0.5789473684210527,0.8026315789473685,0.5394736842105263,0.7631578947368421,0.8157894736842105,0.8157894736842105,0.8157894736842105,0.6578947368421053,0.0,0.7894736842105263,0.8157894736842105,0.6052631578947368,0.8026315789473685,0.8157894736842105,0.8421052631578947,0.75,0.5394736842105263,0.8289473684210527,0.8157894736842105,0.5657894736842105,0.7631578947368421,0.8157894736842105,0.8289473684210527,0.8289473684210527
50,0.9,0.8958333333333334,0.7875,0.9458333333333333,0.675,0.9375,0.9541666666666667,0.9083333333333333,0.9875,0.9541666666666667,0.7791666666666667,0.0,0.8541666666666666,0.9625,0.7166666666666667,0.975,0.975,0.975,0.0,0.8583333333333333,0.8416666666666667,0.75,0.8541666666666666,0.8,0.7,0.7166666666666667,0.7208333333333333,0.975,0.9375,0.6541666666666667,0.6541666666666667,0.8916666666666667,0.9625,0.8333333333333334,0.975,0.9708333333333333,0.9916666666666667,0.6541666666666667,0.8083333333333333,0,0.675,0.6791666666666667,0.9708333333333333,0.9833333333333333,0.9125,0.9833333333333333,0.9708333333333333,0.6541666666666667,0.775,0.6875,0.9625,0.9416666666666667,0.6458333333333334,0.9333333333333333,0.65,0.975,0.975,0.775,0.6541666666666667,0.925,0.9708333333333333,0.8333333333333334,0.8833333333333333,0.7166666666666667,0.8416666666666667,0.675,0.9708333333333333,0.8875,0.6541666666666667,0.8958333333333334,0.7833333333333333,0.8208333333333333,0.6541666666666667,0.7166666666666667,0.7625,0.9041666666666667,0.9625,0.6541666666666667,0.7166666666666667,0,0.6625,0.6291666666666667,0.9208333333333333,0.6875,0.7,0.825,0.7583333333333333,0.0,0.9041666666666667,0.6541666666666667,0.6541666666666667,0.9041666666666667,0.9333333333333333,0.0,0.95,0.6916666666666667,0.9541666666666667,0.975,0.6541666666666667,0.9416666666666667,0.9875,0.8583333333333333,0.9541666666666667,0.6791666666666667,0.65,0.6541666666666667,0.9666666666666667,0.9708333333333333,0.6458333333333334,0.9666666666666667,0,0.0,0.7,0.7333333333333333,0.9666666666666667,0.975,0.9125,0.7708333333333334,0.75,0.95,0.7791666666666667,0.675,0.6541666666666667,0.6541666666666667,0.9416666666666667,0.9333333333333333,0.6541666666666667,0.7875,0.5583333333333333,0.9833333333333333,0.9708333333333333,0.8,0.95,0.6541666666666667,0.6708333333333333,0.7166666666666667,0.9833333333333333,0.775,0.9541666666666667,0.8125,0.7958333333333333,0.9208333333333333,0.6541666666666667,0.9333333333333333,0.9,0.8708333333333333,0.0,0.9583333333333334,0.75,0.9458333333333333
54,0.6839622641509434,0.6698113207547169,0.5613207547169812,0.7122641509433962,0.41037735849056606,0.7122641509433962,0.7924528301886793,0.75,0.7877358490566038,0.7547169811320755,0.25471698113207547,0.5801886792452831,0.7075471698113207,0.6462264150943396,0.3867924528301887,0.2688679245283019,0.8443396226415094,0.6886792452830188,0.6462264150943396,0.6745283018867925,0.6698113207547169,0.6792452830188679,0.6792452830188679,0.27358490566037735,0.24056603773584906,0.3867924528301887,0.6650943396226415,0.7075471698113207,0.6981132075471698,0.7547169811320755,0.2971698113207547,0.6839622641509434,0.7358490566037735,0.27358490566037735,0.8018867924528302,0.6037735849056604,0.7688679245283019,0.25943396226415094,0.6226415094339622,0,0.25943396226415094,0.7358490566037735,0.3867924528301887,0.2688679245283019,0.6745283018867925,0.7547169811320755,0.37735849056603776,0.25,0.6886792452830188,0.0,0.7028301886792453,0.75,0.5613207547169812,0.5801886792452831,0.2641509433962264,0.6698113207547169,0.7641509433962265,0.7169811320754716,0.6509433962264151,0.6556603773584906,0.7358490566037735,0.6886792452830188,0.6650943396226415,0.3867924528301887,0.6037735849056604,0.25943396226415094,0.7452830188679245,0.660377358490566,0.25,0.6792452830188679,0.6745283018867925,0.7122641509433962,0.22169811320754718,0.6462264150943396,0.25943396226415094,0.7641509433962265,0.6415094339622641,0.25943396226415094,0.3867924528301887,0,0.6226415094339622,0.3443396226415094,0.6981132075471698,0.29245283018867924,0.41037735849056606,0.28773584905660377,0.6556603773584906,0.5943396226415094,0.6886792452830188,0.25,0.25943396226415094,0.6320754716981132,0.7122641509433962,0.7735849056603774,0.7971698113207547,0.3867924528301887,0.75,0.7735849056603774,0.5471698113207547,0.660377358490566,0.7735849056603774,0.7688679245283019,0.7594339622641509,0.6179245283018868,0.3443396226415094,0.5849056603773585,0.7075471698113207,0.3867924528301887,0.27358490566037735,0.7452830188679245,0,0.75,0.41037735849056606,0.25,0.6981132075471698,0.7688679245283019,0.7688679245283019,0.6792452830188679,0.6415094339622641,0.6745283018867925,0.589622641509434,0.4386792452830189,0.5235849056603774,0.25943396226415094,0.6933962264150944,0.6886792452830188,0.44339622641509435,0.6792452830188679,0.2169811320754717,0.7971698113207547,0.7216981132075472,0.6981132075471698,0.7594339622641509,0.5471698113207547,0.0,0.25943396226415094,0.7452830188679245,0.5801886792452831,0.7688679245283019,0.7311320754716981,0.7028301886792453,0.6320754716981132,0.7264150943396226,0.7122641509433962,0.7028301886792453,0.7452830188679245,0.41509433962264153,0.7452830188679245,0.75,0.7028301886792453
56,0.944954128440367,0.926605504587156,0.908256880733945,0.926605504587156,0.8990825688073395,0.944954128440367,0.9174311926605505,0.926605504587156,0.9541284403669725,0.8623853211009175,0.6146788990825688,0.8165137614678899,0.9357798165137615,0.926605504587156,0.9357798165137615,0.3853211009174312,0.9174311926605505,0.944954128440367,0.0,0.944954128440367,0.926605504587156,0.9174311926605505,0.926605504587156,0.6146788990825688,0.7889908256880734,0.9357798165137615,0.8256880733944955,0.9174311926605505,0.944954128440367,0.6146788990825688,0.6146788990825688,0.8532110091743119,0.9357798165137615,0.6146788990825688,0.8990825688073395,0.8623853211009175,0.926605504587156,0.6146788990825688,0.926605504587156,0,0.6146788990825688,0.963302752293578,0.8623853211009175,0.6146788990825688,0.9357798165137615,0.7981651376146789,0.8623853211009175,0.6146788990825688,0.8440366972477065,0.0,0.926605504587156,0.926605504587156,0.8623853211009175,0.9174311926605505,0.8348623853211009,0.9357798165137615,0.944954128440367,0.8807339449541285,0.8899082568807339,0.926605504587156,0.8532110091743119,0.944954128440367,0.9357798165137615,0.9357798165137615,0.8348623853211009,0.6146788990825688,0.8715596330275229,0.9357798165137615,0.6055045871559633,0.944954128440367,0.9357798165137615,0.926605504587156,0.8256880733944955,0.9357798165137615,0.6146788990825688,0.9541284403669725,0.9357798165137615,0.6146788990825688,0.9357798165137615,0,0.6146788990825688,0.8807339449541285,0.9357798165137615,0.8532110091743119,0.8807339449541285,0.7155963302752294,0.8990825688073395,0.0,0.944954128440367,0.6146788990825688,0.6146788990825688,0.9357798165137615,0.8990825688073395,0.9541284403669725,0.8807339449541285,0.8807339449541285,0.9357798165137615,0.8899082568807339,0.6146788990825688,0.9357798165137615,0.944954128440367,0.8623853211009175,0.944954128440367,0.926605504587156,0.8256880733944955,0.9174311926605505,0.926605504587156,0.8623853211009175,0.8440366972477065,0.944954128440367,0,0.0,0.8807339449541285,0.8807339449541285,0.944954128440367,0.8440366972477065,0.944954128440367,0.908256880733945,0.944954128440367,0.926605504587156,0.8807339449541285,0.944954128440367,0.8715596330275229,0.6146788990825688,0.926605504587156,0.9357798165137615,0.8165137614678899,0.8899082568807339,0.908256880733945,0.9541284403669725,0.8715596330275229,0.9541284403669725,0.944954128440367,0.6788990825688074,0.0,0.6146788990825688,0.9357798165137615,0.9174311926605505,0.9357798165137615,0.926605504587156,0.908256880733945,0.9357798165137615,0.6146788990825688,0.9357798165137615,0.9357798165137615,0.8348623853211009,0.7706422018348624,0.944954128440367,0.9541284403669725,0.944954128440367
57,0.9734888653234358,0.9904559915164369,0.9448568398727466,0.9501590668080594,0.9215270413573701,0.9915164369034994,0.9512195121951219,0.9946977730646872,0.9936373276776246,0.926829268292683,0.9225874867444327,0.9406150583244963,0.9925768822905621,0.9915164369034994,0.9512195121951219,0.9247083775185578,0.9628844114528102,0.9554612937433722,0.9459172852598091,0.9427359490986215,0.9459172852598091,0.9225874867444327,0.9448568398727466,0.9225874867444327,0.9225874867444327,0.9512195121951219,0.9225874867444327,0.9469777306468717,0.9692470837751855,0.0,0.9225874867444327,0.9480381760339343,0.9915164369034994,0.9225874867444327,0.9628844114528102,0.9490986214209968,0.9448568398727466,0.9225874867444327,0.9766702014846236,0,0.9098621420996819,0.9893955461293743,0.9353128313891834,0.9225874867444327,0.9904559915164369,0.9427359490986215,0.9406150583244963,0.9225874867444327,0.9448568398727466,0.0,0.9936373276776246,0.9925768822905621,0.9225874867444327,0.9215270413573701,0.9225874867444327,0.9480381760339343,0.9872746553552492,0.9353128313891834,0.9257688229056203,0.9257688229056203,0.9628844114528102,0.9427359490986215,0.943796394485684,0.9512195121951219,0.9522799575821845,0.17709437963944857,0.968186638388123,0.9904559915164369,0.9225874867444327,0.9490986214209968,0.9893955461293743,0.08589607635206786,0.9225874867444327,0.9734888653234358,0.9225874867444327,0.9904559915164369,0.9480381760339343,0.9257688229056203,0.9512195121951219,0,0.9342523860021209,0.9225874867444327,0.975609756097561,0.0,0.9554612937433722,0.9225874867444327,0.9416755037115588,0.9459172852598091,0.9448568398727466,0.9225874867444327,0.9225874867444327,0.9904559915164369,0.9840933191940615,0.9713679745493107,0.9512195121951219,0.9618239660657476,0.9809119830328739,0.9395546129374337,0.9225874867444327,0.9300106044538706,0.911983032873807,0.3860021208907741,0.9904559915164369,0.9798515376458112,0.9225874867444327,0.9480381760339343,0.9915164369034994,0.9353128313891834,0.0,0.9745493107104984,0,0.7348886532343585,0.9554612937433722,0.9225874867444327,0.9915164369034994,0.9544008483563097,0.9904559915164369,0.9766702014846236,0.9575821845174973,0.9925768822905621,0.9225874867444327,0.7348886532343585,0.9257688229056203,0.9225874867444327,0.9968186638388123,0.9946977730646872,0.9225874867444327,0.9607635206786851,0.9098621420996819,0.8897136797454931,0.9660657476139979,0.9957582184517497,0.9374337221633086,0.9406150583244963,0.0,0.9225874867444327,0.9872746553552492,0.9448568398727466,0.9915164369034994,0.9915164369034994,0.9490986214209968,0.9946977730646872,0.9225874867444327,0.9840933191940615,0.9416755037115588,0.9469777306468717,0.9459172852598091,0.9777306468716861,0.9915164369034994,0.9904559915164369
59,0.9204545454545454,0.75,0.6477272727272727,0.8977272727272727,0.0,0.9204545454545454,0.8409090909090909,0.9318181818181818,0.9204545454545454,0.8636363636363636,0.7954545454545454,0.6363636363636364,0.9204545454545454,0.8295454545454546,0.7840909090909091,0.8068181818181818,0.8863636363636364,0.8181818181818182,0.0,0.8409090909090909,0.7840909090909091,0.8977272727272727,0.8068181818181818,0.7272727272727273,0.75,0.7840909090909091,0.75,0.8636363636363636,0.8409090909090909,0.6363636363636364,0.6363636363636364,0.8295454545454546,0.9318181818181818,0.7954545454545454,0.9204545454545454,0.8068181818181818,0.9431818181818182,0.6363636363636364,0.8295454545454546,0,0.8636363636363636,0.8977272727272727,0.7954545454545454,0.8409090909090909,0.9318181818181818,0.8977272727272727,0.7954545454545454,0.6363636363636364,0.875,0.8181818181818182,0.8409090909090909,0.9204545454545454,0.7386363636363636,0.7613636363636364,0.7159090909090909,0.7954545454545454,0.9431818181818182,0.6363636363636364,0.75,0.7045454545454546,0.8068181818181818,0.8068181818181818,0.8295454545454546,0.7840909090909091,0.7727272727272727,0.8636363636363636,0.8863636363636364,0.8636363636363636,0.6363636363636364,0.8295454545454546,0.8977272727272727,0.875,0.8409090909090909,0.8409090909090909,0.8295454545454546,0.9090909090909091,0.75,0.6363636363636364,0.7840909090909091,0,0.6363636363636364,0.0,0.9204545454545454,0.8181818181818182,0.0,0.6363636363636364,0.8068181818181818,0.0,0.875,0.6363636363636364,0.6363636363636364,0.8977272727272727,0.8409090909090909,0.875,0.8409090909090909,0.0,0.9318181818181818,0.9431818181818182,0.6363636363636364,0.7954545454545454,0.9090909090909091,0.875,0.9318181818181818,0.9090909090909091,0.7613636363636364,0.8181818181818182,0.8977272727272727,0.7954545454545454,0.8068181818181818,0.9090909090909091,0,0.0,0.0,0.7613636363636364,0.875,0.8636363636363636,0.9318181818181818,0.9318181818181818,0.8181818181818182,0.875,0.7386363636363636,0.7159090909090909,0.7159090909090909,0.0,0.8636363636363636,0.8409090909090909,0.0,0.9204545454545454,0.0,0.8977272727272727,0.8863636363636364,0.9204545454545454,0.8181818181818182,0.7840909090909091,0.0,0.875,0.9431818181818182,0.6477272727272727,0.9431818181818182,0.9318181818181818,0.8295454545454546,0.8636363636363636,0.6363636363636364,0.875,0.8636363636363636,0.9090909090909091,0.625,0.9090909090909091,0.8977272727272727,0.9090909090909091
60,0.8456,0.7632,0.8528,0.8608,0.0,0.8488,0.856,0.8392,0.8552,0.8376,0.7016,0.7936,0.848,0.0,0.5704,0.6776,0.856,0.824,0.8464,0.8552,0.84,0.8576,0.8512,0.6104,0.3352,0.568,0.3496,0.856,0.8432,0.0,0.7248,0.8328,0.0,0.66,0.8608,0.8008,0.0,0.7216,0.8448,0,0.6952,0.8448,0.624,0.7072,0.8432,0.0,0.6256,0.7072,0.6896,0.6944,0.0,0.852,0.5488,0.6504,0.3336,0.8208,0.8544,0.7072,0.528,0.8192,0.848,0.8488,0.8504,0.5704,0.8152,0.696,0.852,0.8392,0.5544,0.848,0.8432,0.8456,0.3088,0.6752,0.7176,0.844,0.84,0.3384,0.5704,0,0.8496,0.0,0.8592,0.0,0.0,0.3232,0.8536,0.8512,0.8456,0.8504,0.3384,0.7624,0.7416,0.8504,0.8352,0.0,0.8536,0.8592,0.8008,0.8232,0.8464,0.8176,0.8544,0.7472,0.3416,0.7704,0.8344,0.624,0.0,0.8552,0,0.8368,0.0,0.316,0.0,0.8552,0.8544,0.8408,0.8456,0.0,0.844,0.7768,0.3792,0.0,0.7576,0.7592,0.0,0.8392,0.0,0.0,0.8592,0.8408,0.82,0.592,0.0,0.6976,0.8496,0.8496,0.8536,0.8544,0.856,0.7648,0.8192,0.8544,0.8592,0.8224,0.7888,0.8576,0.8472,0.0
171,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
181,0.0,0.5498652291105122,0.5741239892183289,0.5714285714285714,0.0,0.6091644204851752,0.5121293800539084,0.6064690026954178,0.5956873315363881,0.5202156334231806,0.31266846361185985,0.0,0.555256064690027,0.5660377358490566,0.40431266846361186,0.4582210242587601,0.5660377358490566,0.5956873315363881,0.0,0.5849056603773585,0.568733153638814,0.5768194070080862,0.5902964959568733,0.2884097035040431,0.6226415094339622,0.40431266846361186,0.5902964959568733,0.5714285714285714,0.6253369272237197,0.40431266846361186,0.33423180592991913,0.4474393530997305,0.6253369272237197,0.3018867924528302,0.6145552560646901,0.4716981132075472,0.215633423180593,0.31266846361185985,0.31266846361185985,0,0.31536388140161725,0.5956873315363881,0.3423180592991914,0.477088948787062,0.6118598382749326,0.1347708894878706,0.38005390835579517,0.31266846361185985,0.32075471698113206,0.31266846361185985,0.5795148247978437,0.5849056603773585,0.33153638814016173,0.39892183288409705,0.568733153638814,0.5822102425876011,0.6253369272237197,0.5956873315363881,0.6037735849056604,0.5741239892183289,0.5148247978436657,0.568733153638814,0.601078167115903,0.40431266846361186,0.522911051212938,0.11590296495956873,0.5929919137466307,0.4609164420485175,0.31266846361185985,0.601078167115903,0.5956873315363881,0.0026954177897574125,0.6118598382749326,0.5417789757412399,0.31266846361185985,0.5768194070080862,0.6145552560646901,0.31266846361185985,0.40431266846361186,0,0.5336927223719676,0.3665768194070081,0.42048517520215634,0.0,0.3288409703504043,0.5579514824797843,0.5471698113207547,0.0,0.5768194070080862,0.4743935309973046,0.31266846361185985,0.5633423180592992,0.5121293800539084,0.0,0.5660377358490566,0.31266846361185985,0.0,0.5929919137466307,0.3611859838274933,0.5714285714285714,0.555256064690027,0.5148247978436657,0.6307277628032345,0.3746630727762803,0.5768194070080862,0.444743935309973,0.5956873315363881,0.3423180592991914,0.0,0.6118598382749326,0,0.0,0.32345013477088946,0.4555256064690027,0.6307277628032345,0.5929919137466307,0.5929919137466307,0.5256064690026954,0.6145552560646901,0.5876010781671159,0.3504043126684636,0.40161725067385445,0.3908355795148248,0.31266846361185985,0.5741239892183289,0.5876010781671159,0.33692722371967654,0.6172506738544474,0.31536388140161725,0.5795148247978437,0.5768194070080862,0.6145552560646901,0.5849056603773585,0.3611859838274933,0.0,0.31536388140161725,0.6064690026954178,0.5768194070080862,0.6307277628032345,0.5902964959568733,0.41778975741239893,0.522911051212938,0.38005390835579517,0.628032345013477,0.522911051212938,0.5902964959568733,0.0,0.6253369272237197,0.5741239892183289,0.6145552560646901
182,0.8830845771144279,0.845771144278607,0.8650497512437811,0.8930348258706468,0.0,0.8967661691542289,0.8445273631840796,0.914179104477612,0.9067164179104478,0.7904228855721394,0.7344527363184079,0.75,0.8905472636815921,0.0,0.42350746268656714,0.6560945273631841,0.8488805970149254,0.9036069651741293,0.878731343283582,0.8774875621890548,0.8818407960199005,0.8861940298507462,0.8718905472636815,0.7332089552238806,0.539179104477612,0.43159203980099503,0.34639303482587064,0.8488805970149254,0.8874378109452736,0.0,0.0,0.7319651741293532,0.0,0.7369402985074627,0.8924129353233831,0.7655472636815921,0.0,0.6312189054726368,0.8731343283582089,0,0.6697761194029851,0.0,0.47077114427860695,0.7381840796019901,0.8812189054726368,0.0,0.4626865671641791,0.0,0.7661691542288557,0.7686567164179104,0.0,0.9148009950248757,0.8227611940298507,0.6200248756218906,0.6411691542288557,0.888681592039801,0.902363184079602,0.7288557213930348,0.8470149253731343,0.8799751243781094,0.8606965174129353,0.8762437810945274,0.8818407960199005,0.42350746268656714,0.6791044776119403,0.6710199004975125,0.0,0.8762437810945274,0.5093283582089553,0.8855721393034826,0.0,0.861318407960199,0.6517412935323383,0.7643034825870647,0.7039800995024875,0.9036069651741293,0.888681592039801,0.23818407960199006,0.42350746268656714,0,0.8550995024875622,0.0,0.888681592039801,0.0,0.0,0.8097014925373134,0.8240049751243781,0.8669154228855721,0.8824626865671642,0.8532338308457711,0.23818407960199006,0.8470149253731343,0.8277363184079602,0.0,0.0,0.0,0.8998756218905473,0.8837064676616916,0.6909203980099502,0.8880597014925373,0.9129353233830846,0.8003731343283582,0.8942786069651741,0.849502487562189,0.6094527363184079,0.8631840796019901,0.8905472636815921,0.47077114427860695,0.0,0.9029850746268657,0,0.8911691542288557,0.0,0.7338308457711443,0.0,0.0,0.8936567164179104,0.8874378109452736,0.888681592039801,0.8880597014925373,0.8669154228855721,0.6648009950248757,0.8103233830845771,0.0,0.835820895522388,0.8519900497512438,0.0,0.8942786069651741,0.0,0.0,0.0,0.902363184079602,0.8924129353233831,0.8171641791044776,0.0,0.6741293532338308,0.8930348258706468,0.8687810945273632,0.914179104477612,0.8917910447761194,0.835820895522388,0.8426616915422885,0.0,0.8905472636815921,0.8781094527363185,0.8208955223880597,0.7842039800995025,0.8949004975124378,0.0,0.0
183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
185,0.9283582089552239,0.9194029850746268,0.9253731343283582,0.9223880597014925,0.6746268656716418,0.9313432835820895,0.6656716417910448,0.9343283582089552,0.9462686567164179,0.9074626865671642,0.9074626865671642,0.9074626865671642,0.9313432835820895,0.0,0.9104477611940298,0.9104477611940298,0.9343283582089552,0.9432835820895522,0.9223880597014925,0.9164179104477612,0.9283582089552239,0.9253731343283582,0.9164179104477612,0.9074626865671642,0.9074626865671642,0.9074626865671642,0.9074626865671642,0.9194029850746268,0.9223880597014925,0.0,0.9074626865671642,0.9104477611940298,0.9313432835820895,0.9074626865671642,0.9343283582089552,0.9253731343283582,0.9343283582089552,0.9074626865671642,0.9164179104477612,0,0.9074626865671642,0.9343283582089552,0.9044776119402985,0.9074626865671642,0.9313432835820895,0.9283582089552239,0.9044776119402985,0.9074626865671642,0.9194029850746268,0.0,0.0,0.9402985074626866,0.9164179104477612,0.9164179104477612,0.9074626865671642,0.9343283582089552,0.9313432835820895,0.9074626865671642,0.9044776119402985,0.9223880597014925,0.9223880597014925,0.9164179104477612,0.9164179104477612,0.9104477611940298,0.9164179104477612,0.33134328358208953,0.9313432835820895,0.9253731343283582,0.9074626865671642,0.9164179104477612,0.9313432835820895,0.9253731343283582,0.9074626865671642,0.9194029850746268,0.9074626865671642,0.9223880597014925,0.9462686567164179,0.9074626865671642,0.9104477611940298,0,0.9074626865671642,0.9223880597014925,0.9283582089552239,0.0,0.6805970149253732,0.9074626865671642,0.9313432835820895,0.9223880597014925,0.9164179104477612,0.9074626865671642,0.9074626865671642,0.9194029850746268,0.9134328358208955,0.9223880597014925,0.9134328358208955,0.6955223880597015,0.9313432835820895,0.9194029850746268,0.9074626865671642,0.9194029850746268,0.9373134328358209,0.8417910447761194,0.9283582089552239,0.9223880597014925,0.9074626865671642,0.9253731343283582,0.9313432835820895,0.9044776119402985,0.0,0.9283582089552239,0,0.9223880597014925,0.6805970149253732,0.8865671641791045,0.9373134328358209,0.9283582089552239,0.9313432835820895,0.9194029850746268,0.9462686567164179,0.9343283582089552,0.9074626865671642,0.6507462686567164,0.9074626865671642,0.9074626865671642,0.9104477611940298,0.9223880597014925,0.9074626865671642,0.9283582089552239,0.041791044776119404,0.9313432835820895,0.9313432835820895,0.9343283582089552,0.9283582089552239,0.9134328358208955,0.0,0.9074626865671642,0.9283582089552239,0.9253731343283582,0.9313432835820895,0.9343283582089552,0.9164179104477612,0.9343283582089552,0.9074626865671642,0.9223880597014925,0.9164179104477612,0.9134328358208955,0.835820895522388,0.9343283582089552,0.9462686567164179,0.9283582089552239
186,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
188,0.7445652173913043,0.6141304347826086,0.3695652173913043,0.717391304347826,0.0,0.717391304347826,0.44565217391304346,0.657608695652174,0.6847826086956522,0.5380434782608695,0.3695652173913043,0.46195652173913043,0.7065217391304348,0.6413043478260869,0.46195652173913043,0.3858695652173913,0.7336956521739131,0.5543478260869565,0.5380434782608695,0.7065217391304348,0.42934782608695654,0.6739130434782609,0.7065217391304348,0.3967391304347826,0.28804347826086957,0.46195652173913043,0.46195652173913043,0.41847826086956524,0.7445652173913043,0.5,0.28804347826086957,0.5380434782608695,0.7554347826086957,0.43478260869565216,0.625,0.42934782608695654,0.6739130434782609,0.28804347826086957,0.6793478260869565,0,0.358695652173913,0.7010869565217391,0.3858695652173913,0.4076086956521739,0.7119565217391305,0.32065217391304346,0.3858695652173913,0.358695652173913,0.4945652173913043,0.4076086956521739,0.6739130434782609,0.6956521739130435,0.42934782608695654,0.4891304347826087,0.24456521739130435,0.44565217391304346,0.7391304347826086,0.5217391304347826,0.625,0.5815217391304348,0.4891304347826087,0.7228260869565217,0.7391304347826086,0.46195652173913043,0.4891304347826087,0.3532608695652174,0.5706521739130435,0.7065217391304348,0.28804347826086957,0.7282608695652174,0.7065217391304348,0.6358695652173914,0.24456521739130435,0.5163043478260869,0.358695652173913,0.6467391304347826,0.5217391304347826,0.28804347826086957,0.46195652173913043,0,0.5217391304347826,0.0,0.7119565217391305,0.0,0.0,0.24456521739130435,0.6141304347826086,0.4945652173913043,0.7119565217391305,0.28804347826086957,0.28804347826086957,0.6793478260869565,0.5815217391304348,0.717391304347826,0.5706521739130435,0.0,0.7608695652173914,0.5815217391304348,0.33695652173913043,0.5489130434782609,0.7065217391304348,0.5054347826086957,0.75,0.6521739130434783,0.266304347826087,0.625,0.7282608695652174,0.3858695652173913,0.266304347826087,0.7391304347826086,0,0.6739130434782609,0.0,0.266304347826087,0.7282608695652174,0.5706521739130435,0.7391304347826086,0.5869565217391305,0.4945652173913043,0.6739130434782609,0.5217391304347826,0.4945652173913043,0.33152173913043476,0.0,0.6086956521739131,0.5978260869565217,0.0,0.6304347826086957,0.0,0.6902173913043478,0.5543478260869565,0.7228260869565217,0.5760869565217391,0.43478260869565216,0.0,0.41304347826086957,0.7010869565217391,0.40217391304347827,0.7554347826086957,0.6467391304347826,0.43478260869565216,0.6413043478260869,0.358695652173913,0.75,0.7010869565217391,0.5652173913043478,0.5434782608695652,0.75,0.6902173913043478,0.7445652173913043
307,0.7741935483870968,0.6612903225806451,0.3387096774193548,0.8669354838709677,0.0,0.8830645161290323,0.625,0.9637096774193549,0.9637096774193549,0.7137096774193549,0.375,0.532258064516129,0.8669354838709677,0.657258064516129,0.1693548387096774,0.4637096774193548,0.7056451612903226,0.9112903225806451,0.8467741935483871,0.7580645161290323,0.42338709677419356,0.8629032258064516,0.6975806451612904,0.3709677419354839,0.7459677419354839,0.17338709677419356,0.5,0.6532258064516129,0.75,0.0,0.5887096774193549,0.3790322580645161,0.9395161290322581,0.3387096774193548,0.9193548387096774,0.40725806451612906,0.0,0.22580645161290322,0.6653225806451613,0,0.2782258064516129,0.9233870967741935,0.1774193548387097,0.4798387096774194,0.7741935483870968,0.21370967741935484,0.1774193548387097,0.33064516129032256,0.49193548387096775,0.3467741935483871,0.7379032258064516,0.9274193548387096,0.2903225806451613,0.5766129032258065,0.3225806451612903,0.4596774193548387,0.9516129032258065,0.7741935483870968,0.875,0.5403225806451613,0.5725806451612904,0.7379032258064516,0.7459677419354839,0.1693548387096774,0.38306451612903225,0.2903225806451613,0.8145161290322581,0.7217741935483871,0.0846774193548387,0.7217741935483871,0.7298387096774194,0.7862903225806451,0.8064516129032258,0.2862903225806452,0.2903225806451613,0.9112903225806451,0.8951612903225806,0.08870967741935484,0.1693548387096774,0,0.5645161290322581,0.0,0.8588709677419355,0.0,0.0,0.4637096774193548,0.4798387096774194,0.8346774193548387,0.782258064516129,0.4435483870967742,0.08870967741935484,0.5443548387096774,0.49193548387096775,0.8709677419354839,0.8669354838709677,0.0,0.9314516129032258,0.8790322580645161,0.33064516129032256,0.6209677419354839,0.967741935483871,0.6088709677419355,0.9233870967741935,0.6209677419354839,0.6451612903225806,0.7580645161290323,0.8266129032258065,0.1774193548387097,0.0,0.9354838709677419,0,0.42338709677419356,0.0,0.8991935483870968,0.7903225806451613,0.8467741935483871,0.8991935483870968,0.7903225806451613,0.8911290322580645,0.8104838709677419,0.5241935483870968,0.3548387096774194,0.24193548387096775,0.0,0.6491935483870968,0.6653225806451613,0.0,0.9112903225806451,0.0,0.9274193548387096,0.8185483870967742,0.9032258064516129,0.907258064516129,0.18548387096774194,0.0,0.2903225806451613,0.967741935483871,0.3467741935483871,0.9596774193548387,0.9153225806451613,0.5524193548387096,0.6290322580645161,0.9112903225806451,0.8104838709677419,0.7983870967741935,0.6129032258064516,0.5967741935483871,0.9314516129032258,0.9193548387096774,0.7782258064516129
