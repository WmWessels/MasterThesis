0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
311,0.9617021276595744,0.9659574468085106,0.9574468085106383,0.9574468085106383,0.0,0.9574468085106383,0.7404255319148936,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.0,0.9531914893617022,0.9531914893617022,0.9531914893617022,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9404255319148936,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9702127659574468,0.9617021276595744,0.9574468085106383,0.9702127659574468,0.9574468085106383,0.8127659574468085,0.9574468085106383,0.9574468085106383,0,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9659574468085106,0.9276595744680851,0.9531914893617022,0.9574468085106383,0.948936170212766,0.0,0.0,0.9531914893617022,0.948936170212766,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9531914893617022,0.948936170212766,0.6212765957446809,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9617021276595744,0.948936170212766,0.9574468085106383,0.948936170212766,0.9574468085106383,0.9446808510638298,0.9531914893617022,0.9574468085106383,0.9531914893617022,0,0.9574468085106383,0.0,0.9659574468085106,0.9574468085106383,0.0,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9531914893617022,0.948936170212766,0.9617021276595744,0.9574468085106383,0.7872340425531915,0.9617021276595744,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9617021276595744,0.9191489361702128,0.9617021276595744,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9617021276595744,0.9574468085106383,0.9574468085106383,0.9617021276595744,0,0.948936170212766,0.0,0.9531914893617022,0.9659574468085106,0.9617021276595744,0.9574468085106383,0.9574468085106383,0.9574468085106383,0.9617021276595744,0.9574468085106383,0.6936170212765957,0.9574468085106383,0.0,0.9531914893617022,0.9404255319148936,0.0,0.9574468085106383,0.0,0.9574468085106383,0.9702127659574468,0.9531914893617022,0.9574468085106383,0.9574468085106383,0.0,0.9574468085106383,0.9617021276595744,0.9574468085106383,0.9659574468085106,0.9531914893617022,0.9404255319148936,0.948936170212766,0.9574468085106383,0.9659574468085106,0.9574468085106383,0.9574468085106383,0.9276595744680851,0.9659574468085106,0.9574468085106383,0.9702127659574468
313,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
316,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.8066115702479338,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.0,0.9851239669421488,0.0,0.9851239669421488,0.9851239669421488,0.971900826446281,0.9851239669421488,0.0,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.0,0.9851239669421488,0.9851239669421488,0.0,0.9851239669421488,0.9851239669421488,0.9768595041322314,0.0,0.9851239669421488,0.9851239669421488,0,0.9404958677685951,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.8727272727272727,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.0,0.0,0.9851239669421488,0.9834710743801653,0.9834710743801653,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.971900826446281,0.7322314049586777,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9834710743801653,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0,0.9851239669421488,0.0,0.9851239669421488,0.0,0.0,0.9851239669421488,0.9851239669421488,0.0,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9785123966942149,0.0,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9239669421487603,0.9851239669421488,0.9834710743801653,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0,0.0,0.0,0.9818181818181818,0.0,0.9851239669421488,0.9818181818181818,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.7586776859504132,0.9851239669421488,0.0,0.0,0.9752066115702479,0.0,0.9851239669421488,0.0,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.0,0.9504132231404959,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9834710743801653,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.9851239669421488,0.0,0.9851239669421488,0.9851239669421488,0.0
333,0.8273381294964028,0.7697841726618705,1.0,1.0,0.7553956834532374,1.0,0.7553956834532374,1.0,1.0,0.7338129496402878,0.762589928057554,0.0,0.935251798561151,1.0,0.7553956834532374,1.0,0.7553956834532374,0.9928057553956835,0.0,0.9136690647482014,1.0,0.7553956834532374,0.8848920863309353,0.9928057553956835,0.9136690647482014,0.7553956834532374,0.6762589928057554,0.7553956834532374,0.9712230215827338,1.0,0.762589928057554,0.6546762589928058,1.0,1.0,1.0,0.7050359712230215,1.0,0.7553956834532374,0.7553956834532374,0,0.7553956834532374,0.7553956834532374,0.7194244604316546,1.0,1.0,1.0,0.7050359712230215,0.7985611510791367,0.8489208633093526,0.7553956834532374,1.0,1.0,0.4460431654676259,0.9928057553956835,0.8201438848920863,0.9856115107913669,1.0,0.762589928057554,0.9496402877697842,1.0,0.8992805755395683,0.8848920863309353,0.9640287769784173,0.7553956834532374,0.6906474820143885,0.7553956834532374,0.9856115107913669,0.7338129496402878,0.48201438848920863,0.9784172661870504,0.7985611510791367,0.7553956834532374,0.8561151079136691,0.8129496402877698,0.7553956834532374,0.9856115107913669,1.0,0.5035971223021583,0.7553956834532374,0,0.4244604316546763,0.6402877697841727,0.7841726618705036,0.8633093525179856,0.7553956834532374,0.8561151079136691,0.7553956834532374,0.0,1.0,0.5035971223021583,0.49640287769784175,0.7841726618705036,0.762589928057554,0.0,0.7985611510791367,0.7553956834532374,1.0,0.9856115107913669,0.7050359712230215,0.9928057553956835,1.0,0.5755395683453237,1.0,0.7553956834532374,0.8633093525179856,0.7553956834532374,1.0,0.7194244604316546,0.8992805755395683,1.0,0,0.0,0.7553956834532374,1.0,1.0,0.9496402877697842,1.0,0.8201438848920863,0.7553956834532374,0.9856115107913669,0.8489208633093526,0.7553956834532374,0.5035971223021583,0.49640287769784175,1.0,0.762589928057554,0.5971223021582733,0.9784172661870504,0.5179856115107914,1.0,0.9424460431654677,0.7553956834532374,0.9856115107913669,0.5035971223021583,0.0,0.7553956834532374,1.0,0.9640287769784173,0.9568345323741008,1.0,0.7553956834532374,0.7697841726618705,0.920863309352518,1.0,0.9280575539568345,0.7410071942446043,0.0,1.0,0.7553956834532374,1.0
334,0.6490066225165563,0.695364238410596,0.6556291390728477,0.6821192052980133,0.4768211920529801,0.6423841059602649,0.6026490066225165,0.6688741721854304,0.7350993377483444,0.6490066225165563,0.6556291390728477,0.0,0.6556291390728477,0.7615894039735099,0.6556291390728477,0.5695364238410596,0.5960264900662252,0.695364238410596,0.0,0.6622516556291391,0.5960264900662252,0.0,0.6622516556291391,0.6357615894039735,0.7814569536423841,0.6556291390728477,0.6291390728476821,0.5960264900662252,0.695364238410596,0.6556291390728477,0.6556291390728477,0.6490066225165563,0.9139072847682119,0.6423841059602649,0.7218543046357616,0.6754966887417219,0.9337748344370861,0.6556291390728477,0.6556291390728477,0,0.4768211920529801,0.0,0.6556291390728477,0.5364238410596026,0.6622516556291391,0.9536423841059603,0.6556291390728477,0.6556291390728477,0.6225165562913907,0.0,0.8145695364238411,0.6291390728476821,0.6423841059602649,0.7086092715231788,0.6225165562913907,0.6622516556291391,0.7682119205298014,0.6490066225165563,0.6688741721854304,0.6225165562913907,0.6423841059602649,0.6556291390728477,0.6556291390728477,0.6556291390728477,0.543046357615894,0.4768211920529801,0.6821192052980133,0.6225165562913907,0.6556291390728477,0.6622516556291391,0.6556291390728477,0.6225165562913907,0.8344370860927153,0.6291390728476821,0.6556291390728477,0.6423841059602649,0.7417218543046358,0.6556291390728477,0.6556291390728477,0,0.6556291390728477,0.6556291390728477,0.5695364238410596,0.8079470198675497,0.609271523178808,0.5364238410596026,0.6556291390728477,0.0,0.6556291390728477,0.6556291390728477,0.6556291390728477,0.5761589403973509,0.6291390728476821,0.0,0.6423841059602649,0.0,0.7880794701986755,0.6357615894039735,0.6556291390728477,0.6490066225165563,0.8410596026490066,0.5761589403973509,0.8079470198675497,0.6556291390728477,0.7947019867549668,0.0,0.7748344370860927,0.6556291390728477,0.847682119205298,0.7880794701986755,0,0.0,0.609271523178808,0.5960264900662252,0.8211920529801324,0.6688741721854304,0.6423841059602649,0.6556291390728477,0.3509933774834437,0.8013245033112583,0.6556291390728477,0.46357615894039733,0.6556291390728477,0.6556291390728477,0.6821192052980133,0.8278145695364238,0.6556291390728477,0.6556291390728477,0.5629139072847682,0.7615894039735099,0.6887417218543046,0.6556291390728477,0.7152317880794702,0.6556291390728477,0.46357615894039733,0.5629139072847682,0.9139072847682119,0.6556291390728477,0.9271523178807947,0.6556291390728477,0.6291390728476821,0.5496688741721855,0.6556291390728477,0.7152317880794702,0.6490066225165563,0.6490066225165563,0.0,0.7880794701986755,0.6556291390728477,0.8079470198675497
335,0.8129496402877698,0.9856115107913669,0.9712230215827338,0.9856115107913669,0.9712230215827338,0.9856115107913669,0.9712230215827338,0.9712230215827338,0.9856115107913669,0.9640287769784173,0.9712230215827338,0.0,0.9712230215827338,0.9856115107913669,0.8129496402877698,0.9856115107913669,0.9856115107913669,0.9712230215827338,0.0,0.9712230215827338,0.9856115107913669,0.9712230215827338,0.9712230215827338,0.9712230215827338,0.8848920863309353,0.7553956834532374,0.9424460431654677,0.9856115107913669,0.9712230215827338,0.9856115107913669,0.7338129496402878,0.7769784172661871,0.9856115107913669,0.9712230215827338,0.9856115107913669,0.9784172661870504,0.7841726618705036,0.9712230215827338,0.9712230215827338,0,0.9712230215827338,0.9712230215827338,0.8129496402877698,0.9856115107913669,0.9712230215827338,0.841726618705036,0.8129496402877698,0.9712230215827338,0.9064748201438849,0.9712230215827338,0.9856115107913669,0.9856115107913669,0.5179856115107914,0.9712230215827338,0.8273381294964028,0.9856115107913669,0.9856115107913669,0.9640287769784173,0.9784172661870504,0.9712230215827338,0.9280575539568345,0.9712230215827338,0.9712230215827338,0.8129496402877698,0.920863309352518,0.9712230215827338,0.9568345323741008,0.9712230215827338,0.5179856115107914,0.9712230215827338,0.9712230215827338,0.9856115107913669,0.9424460431654677,0.9712230215827338,0.9712230215827338,0.9856115107913669,0.9712230215827338,0.5179856115107914,0.8129496402877698,0,0.5179856115107914,0.7553956834532374,0.9856115107913669,0.920863309352518,0.9712230215827338,0.9064748201438849,0.9712230215827338,0.0,0.9712230215827338,0.5179856115107914,0.5179856115107914,0.9712230215827338,0.9712230215827338,0.0,0.9496402877697842,0.9712230215827338,0.9856115107913669,0.9712230215827338,0.6834532374100719,0.9784172661870504,0.9712230215827338,0.9136690647482014,0.9856115107913669,0.9712230215827338,0.9064748201438849,0.9712230215827338,0.9856115107913669,0.8129496402877698,0.8489208633093526,0.9856115107913669,0,0.0,0.9712230215827338,0.9856115107913669,0.9712230215827338,0.9640287769784173,0.9856115107913669,0.9712230215827338,0.9712230215827338,0.9856115107913669,0.9712230215827338,0.9712230215827338,0.4748201438848921,0.5179856115107914,0.9856115107913669,0.9856115107913669,0.6258992805755396,0.9856115107913669,0.6187050359712231,0.9784172661870504,0.9568345323741008,0.9712230215827338,0.9712230215827338,0.4748201438848921,0.9712230215827338,0.9712230215827338,0.9856115107913669,0.9784172661870504,0.9856115107913669,0.9856115107913669,0.9712230215827338,0.9856115107913669,0.8633093525179856,0.9856115107913669,0.9712230215827338,0.9424460431654677,0.0,0.9856115107913669,0.9712230215827338,0.9712230215827338
337,0.8522727272727273,0.7272727272727273,0.8068181818181818,0.8181818181818182,0.6022727272727273,0.8522727272727273,0.7954545454545454,0.8977272727272727,0.8636363636363636,0.7272727272727273,0.7272727272727273,0.7272727272727273,0.8068181818181818,0.8295454545454546,0.7386363636363636,0.7272727272727273,0.7954545454545454,0.8181818181818182,0.8522727272727273,0.7840909090909091,0.8295454545454546,0.7386363636363636,0.7840909090909091,0.7272727272727273,0.7386363636363636,0.7272727272727273,0.7386363636363636,0.6477272727272727,0.7954545454545454,0.7272727272727273,0.7272727272727273,0.75,0.8863636363636364,0.7272727272727273,0.8522727272727273,0.7272727272727273,0.8409090909090909,0.7272727272727273,0.7386363636363636,0,0.7272727272727273,0.8863636363636364,0.7386363636363636,0.7272727272727273,0.8409090909090909,0.8409090909090909,0.75,0.7272727272727273,0.8068181818181818,0.0,0.875,0.8295454545454546,0.875,0.8863636363636364,0.7272727272727273,0.7613636363636364,0.8863636363636364,0.8068181818181818,0.7727272727272727,0.7613636363636364,0.7954545454545454,0.7386363636363636,0.7954545454545454,0.7386363636363636,0.6704545454545454,0.7272727272727273,0.875,0.8181818181818182,0.7272727272727273,0.8181818181818182,0.8068181818181818,0.8522727272727273,0.8068181818181818,0.7727272727272727,0.7272727272727273,0.8409090909090909,0.8181818181818182,0.7272727272727273,0.7386363636363636,0,0.7272727272727273,0.6818181818181818,0.8181818181818182,0.7272727272727273,0.6136363636363636,0.5454545454545454,0.75,0.8863636363636364,0.7840909090909091,0.7272727272727273,0.7272727272727273,0.8068181818181818,0.8181818181818182,0.8977272727272727,0.8636363636363636,0.6136363636363636,0.875,0.8068181818181818,0.7272727272727273,0.7386363636363636,0.875,0.7840909090909091,0.8522727272727273,0.8522727272727273,0.875,0.9090909090909091,0.875,0.7386363636363636,0.8522727272727273,0.8636363636363636,0,0.8409090909090909,0.6136363636363636,0.7386363636363636,0.875,0.8409090909090909,0.875,0.8068181818181818,0.875,0.8636363636363636,0.7272727272727273,0.7954545454545454,0.7272727272727273,0.7272727272727273,0.9090909090909091,0.75,0.7272727272727273,0.8522727272727273,0.5909090909090909,0.8977272727272727,0.875,0.8409090909090909,0.8295454545454546,0.8068181818181818,0.0,0.7272727272727273,0.8636363636363636,0.7727272727272727,0.8636363636363636,0.8409090909090909,0.7159090909090909,0.75,0.7272727272727273,0.8295454545454546,0.8068181818181818,0.7272727272727273,0.75,0.8522727272727273,0.8522727272727273,0.8181818181818182
375,0.40144520272982737,0.8269771176234444,0.5170614211160177,0.9490164592533119,0.0,0.939381774387796,0.9108791649939784,0.9678843837816138,0.0,0.9253311922922521,0.4263348052990767,0.19871537535126454,0.9478121236451225,0.0,0.2577278201525492,0.29104777197912485,0.9437976716178241,0.9012444801284625,0.07105580088317945,0.9249297470895222,0.832597350461662,0.9518265756724207,0.9120835006021678,0.5054195102368527,0.6788438378161381,0.2577278201525492,0.9482135688478522,0.8924126856684063,0.9345644319550381,0.0,0.0,0.5712565234845444,0.9642713769570453,0.43918105178643113,0.9586511441188278,0.5832998795664391,0.0,0.25732637494981936,0.8422320353271778,0,0.45764753111200324,0.0,0.25291047771979125,0.36411079887595343,0.0,0.0,0.25291047771979125,0.3741469289441991,0.3990365315134484,0.5222802087515054,0.0,0.0,0.12685668406262546,0.7250100361300682,0.3869931754315536,0.7278201525491771,0.9638699317543156,0.9658771577679647,0.9405861099959856,0.9538338016860699,0.8020875150541951,0.9197109594540345,0.9281413087113609,0.2577278201525492,0.5419510236852669,0.45644319550381374,0.0,0.8542753914090727,0.19710959454034524,0.9249297470895222,0.0,0.9056603773584906,0.0,0.5311120032115616,0.3203532717784022,0.0,0.6672019269369731,0.2095543958249699,0.2577278201525492,0,0.8715375351264553,0.0,0.9136892814130871,0.0,0.0,0.8402248093135287,0.9181051786431152,0.06945002007226013,0.9369731031714171,0.8887996788438378,0.16218386190285025,0.809313528703332,0.797671617824167,0.1537535126455239,0.9570453633079085,0.0,0.6599759132878362,0.9470092332396628,0.202328382175833,0.9518265756724207,0.0,0.9164993978321959,0.9594540345242875,0.5082296266559615,0.4496186270574067,0.8675230830991569,0.0,0.25291047771979125,0.0,0.9622641509433962,0,0.14171015656362906,0.0,0.6206342834203131,0.0,0.9305499799277399,0.0,0.9237254114813328,0.6672019269369731,0.0,0.885989562424729,0.7009233239662787,0.13649136892814132,0.0,0.8426334805299077,0.8422320353271778,0.0,0.9498193496587716,0.0,0.0,0.0,0.0,0.9718988358089121,0.123243677238057,0.0,0.4588518667201927,0.9718988358089121,0.513849859494179,0.9694901645925331,0.951023685266961,0.8843837816138097,0.7519068647129666,0.0,0.9333600963468487,0.9433962264150944,0.895222802087515,0.2095543958249699,0.9554395824969891,0.0,0.9437976716178241
377,0.9533333333333334,0.8866666666666667,0.7666666666666667,0.9733333333333334,0.0,0.9733333333333334,0.9933333333333333,0.9933333333333333,0.9866666666666667,0.58,0.16666666666666666,0.8866666666666667,0.9666666666666667,0.0,0.30666666666666664,0.23333333333333334,0.9866666666666667,0.98,0.8733333333333333,0.9533333333333334,0.9133333333333333,0.9866666666666667,0.9466666666666667,0.17333333333333334,0.11333333333333333,0.3333333333333333,0.18666666666666668,0.9666666666666667,0.9666666666666667,0.0,0.16666666666666666,0.62,0.9733333333333334,0.19333333333333333,0.9933333333333333,0.92,0.9666666666666667,0.16666666666666666,0.8666666666666667,0,0.22,0.9866666666666667,0.3333333333333333,0.16666666666666666,0.9466666666666667,0.9933333333333333,0.3333333333333333,0.16666666666666666,0.7733333333333333,0.0,0.0,0.9933333333333333,0.7533333333333333,0.66,0.14,0.98,0.9866666666666667,0.47333333333333333,0.98,0.9133333333333333,0.9933333333333333,0.9733333333333334,0.96,0.30666666666666664,0.4,0.22,0.9866666666666667,0.8666666666666667,0.16666666666666666,0.9666666666666667,0.96,0.9333333333333333,0.16,0.68,0.16666666666666666,0.9866666666666667,0.94,0.16666666666666666,0.30666666666666664,0,0.94,0.0,0.9333333333333333,0.0,0.0,0.22666666666666666,0.9866666666666667,0.7666666666666667,0.9533333333333334,0.16666666666666666,0.16666666666666666,0.8266666666666667,0.8,0.9933333333333333,0.6266666666666667,0.0,0.9866666666666667,0.9933333333333333,0.8666666666666667,0.92,0.98,0.6866666666666666,0.9866666666666667,0.82,0.19333333333333333,0.8333333333333334,0.9533333333333334,0.3333333333333333,0.13333333333333333,0.98,0,0.9866666666666667,0.0,0.20666666666666667,0.0,0.9933333333333333,0.9866666666666667,0.94,0.94,0.96,0.9266666666666666,0.8666666666666667,0.7733333333333333,0.0,0.92,0.9,0.0,0.96,0.58,0.9733333333333334,0.9866666666666667,0.9866666666666667,0.9466666666666667,0.7666666666666667,0.0,0.22,0.9666666666666667,0.7733333333333333,0.9866666666666667,0.9866666666666667,0.9666666666666667,0.8666666666666667,0.9933333333333333,0.96,0.98,0.47333333333333333,0.9666666666666667,0.9866666666666667,0.9933333333333333,0.9733333333333334
378,0.8285843509724107,0.8254183627317956,0.7037539574853008,0.819538670284939,0.5241971958389868,0.8290366350067843,0.6350067842605156,0.8213478064224333,0.0,0.0,0.0,0.6562641338760742,0.8240615106286748,0.0,0.6901854364540931,0.6757123473541384,0.8100407055630936,0.7168701944821347,0.7195838986883764,0.819538670284939,0.7109905020352781,0.8132066938037087,0.8254183627317956,0.6938037087290818,0.0,0.6562641338760742,0.6562641338760742,0.7001356852103121,0.8213478064224333,0.0,0.6562641338760742,0.7503392130257802,0.0,0.6888285843509724,0.7978290366350068,0.6852103120759837,0.0,0.6562641338760742,0.8236092265943012,0,0.48801447308909995,0.0,0.6562641338760742,0.0,0.8312980551786522,0.0,0.6562641338760742,0.0,0.7648123021257349,0.6992311171415649,0.0,0.819538670284939,0.6512890094979648,0.7598371777476255,0.6562641338760742,0.7051108095884215,0.8213478064224333,0.7268204432383537,0.6562641338760742,0.7652645861601085,0.7620985979194934,0.8231569425599277,0.8213478064224333,0.6901854364540931,0.0,0.5070104025327906,0.0,0.830393487109905,0.6562641338760742,0.8222523744911805,0.0,0.0,0.0,0.736318407960199,0.6978742650384442,0.0,0.7055630936227951,0.6562641338760742,0.6901854364540931,0,0.7512437810945274,0.6562641338760742,0.8168249660786974,0.0,0.527363184079602,0.0,0.8073270013568521,0.7091813658977838,0.8208955223880597,0.7620985979194934,0.6562641338760742,0.8141112618724559,0.793306196291271,0.0,0.0,0.5214834916327453,0.8267752148349163,0.0,0.6562641338760742,0.7657168701944821,0.0,0.43419267299864317,0.8218000904568069,0.6824966078697422,0.6562641338760742,0.6834011759384894,0.8317503392130258,0.6562641338760742,0.0,0.8218000904568069,0,0.8294889190411578,0.5264586160108549,0.6562641338760742,0.0,0.0,0.824966078697422,0.8218000904568069,0.7055630936227951,0.8276797829036635,0.8046132971506106,0.5156037991858887,0.6562641338760742,0.6562641338760742,0.0,0.8272274988692899,0.6562641338760742,0.8190863862505654,0.0,0.0,0.0,0.8312980551786522,0.7611940298507462,0.6811397557666214,0.0,0.5468113975576662,0.0,0.7014925373134329,0.8199909543193126,0.8199909543193126,0.7033016734509272,0.819538670284939,0.0,0.824966078697422,0.8199909543193126,0.0,0.8046132971506106,0.8172772501130711,0.0,0.0
381,0.8125,0.7932692307692307,0.6928418803418803,0.8007478632478633,0.35844017094017094,0.8135683760683761,0.6137820512820513,0.7980769230769231,0.7996794871794872,0.0,0.0,0.6415598290598291,0.811965811965812,0.0,0.6965811965811965,0.7382478632478633,0.8018162393162394,0.6848290598290598,0.6928418803418803,0.8044871794871795,0.6933760683760684,0.7954059829059829,0.8039529914529915,0.7403846153846154,0.6415598290598291,0.6965811965811965,0.6415598290598291,0.6955128205128205,0.8012820512820513,0.0,0.6415598290598291,0.6688034188034188,0.0,0.7371794871794872,0.781517094017094,0.6607905982905983,0.0,0.6479700854700855,0.8050213675213675,0,0.5566239316239316,0.0,0.6415598290598291,0.0,0.8087606837606838,0.0,0.6415598290598291,0.0,0.7548076923076923,0.7702991452991453,0.0,0.7943376068376068,0.6388888888888888,0.7473290598290598,0.6415598290598291,0.6810897435897436,0.8039529914529915,0.6928418803418803,0.6415598290598291,0.7516025641025641,0.7329059829059829,0.8034188034188035,0.8076923076923077,0.6965811965811965,0.0,0.5491452991452992,0.0,0.8018162393162394,0.6415598290598291,0.8076923076923077,0.0,0.7713675213675214,0.6415598290598291,0.7099358974358975,0.7660256410256411,0.7959401709401709,0.6864316239316239,0.6415598290598291,0.6965811965811965,0,0.7280982905982906,0.6415598290598291,0.8039529914529915,0.0,0.36324786324786323,0.6399572649572649,0.7964743589743589,0.6896367521367521,0.8055555555555556,0.7403846153846154,0.6415598290598291,0.7943376068376068,0.7724358974358975,0.7938034188034188,0.0,0.3733974358974359,0.8066239316239316,0.7729700854700855,0.6415598290598291,0.7483974358974359,0.6607905982905983,0.37927350427350426,0.8023504273504274,0.7045940170940171,0.6415598290598291,0.6623931623931624,0.8028846153846154,0.6415598290598291,0.0,0.8055555555555556,0,0.7980769230769231,0.35844017094017094,0.6415598290598291,0.0,0.0,0.8060897435897436,0.8055555555555556,0.6864316239316239,0.8018162393162394,0.7889957264957265,0.5769230769230769,0.6426282051282052,0.6415598290598291,0.0,0.7873931623931624,0.6452991452991453,0.8012820512820513,0.0,0.0,0.0,0.8034188034188035,0.7574786324786325,0.6773504273504274,0.0,0.5849358974358975,0.7895299145299145,0.6901709401709402,0.8018162393162394,0.8039529914529915,0.6965811965811965,0.7954059829059829,0.0,0.8066239316239316,0.7980769230769231,0.0,0.7740384615384616,0.8018162393162394,0.0,0.0
382,0.48547008547008547,0.449002849002849,0.3492877492877493,0.4826210826210826,0.23133903133903133,0.486039886039886,0.403988603988604,0.4792022792022792,0.0,0.0,0.0,0.27635327635327633,0.49401709401709404,0.0,0.44387464387464387,0.3698005698005698,0.4586894586894587,0.3356125356125356,0.3641025641025641,0.47464387464387464,0.3754985754985755,0.48547008547008547,0.486039886039886,0.4148148148148148,0.27635327635327633,0.44387464387464387,0.2643874643874644,0.3800569800569801,0.0,0.0,0.27635327635327633,0.3800569800569801,0.0,0.4062678062678063,0.0,0.4056980056980057,0.0,0.44387464387464387,0.48717948717948717,0,0.30142450142450145,0.0,0.3504273504273504,0.0,0.49401709401709404,0.0,0.36011396011396013,0.0,0.4267806267806268,0.456980056980057,0.0,0.45356125356125354,0.249002849002849,0.3851851851851852,0.2501424501424501,0.33618233618233617,0.4723646723646724,0.347008547008547,0.29572649572649573,0.41196581196581195,0.4148148148148148,0.4883190883190883,0.47806267806267805,0.44387464387464387,0.0,0.2547008547008547,0.0,0.4774928774928775,0.27635327635327633,0.4866096866096866,0.0,0.44216524216524217,0.27464387464387463,0.4603988603988604,0.45925925925925926,0.43646723646723645,0.35669515669515667,0.27635327635327633,0.44387464387464387,0,0.47977207977207975,0.2826210826210826,0.47635327635327634,0.0,0.2376068376068376,0.2301994301994302,0.4700854700854701,0.3578347578347578,0.48148148148148145,0.4905982905982906,0.27635327635327633,0.44045584045584046,0.4433048433048433,0.4017094017094017,0.0,0.24216524216524216,0.4752136752136752,0.46951566951566953,0.2934472934472934,0.41994301994301997,0.44387464387464387,0.0,0.47065527065527063,0.45242165242165244,0.2376068376068376,0.4,0.47065527065527063,0.3504273504273504,0.0,0.47293447293447294,0,0.39544159544159546,0.2336182336182336,0.2518518518518518,0.0,0.0,0.47293447293447294,0.49344729344729343,0.35669515669515667,0.0,0.48034188034188036,0.31794871794871793,0.3076923076923077,0.27635327635327633,0.0,0.43874643874643876,0.2774928774928775,0.4905982905982906,0.0,0.0,0.0,0.48148148148148145,0.37264957264957266,0.26495726495726496,0.0,0.2814814814814815,0.0,0.350997150997151,0.0,0.49173789173789173,0.37777777777777777,0.45754985754985755,0.0,0.47293447293447294,0.4888888888888889,0.0,0.17777777777777778,0.4826210826210826,0.0,0.0
451,0.92,0.992,0.696,0.992,0.84,0.992,1.0,1.0,0.984,0.936,0.992,0.68,0.984,0.992,0.88,1.0,1.0,0.816,0.64,0.992,0.816,0.992,0.992,0.992,0.64,0.88,0.832,1.0,0.992,0.552,0.552,0.888,1.0,0.992,1.0,0.928,0.984,0.88,0.992,0,0.984,0.984,0.752,0.992,0.992,0.984,0.752,0.552,0.984,0.992,0.992,0.984,0.616,0.992,0.536,0.672,1.0,0.896,1.0,0.992,0.984,0.992,0.992,0.88,0.848,1.0,0.992,0.992,0.448,0.992,0.992,0.984,0.64,0.992,0.992,0.984,0.696,0.56,0.88,0,0.552,0.84,0.992,0.728,1.0,0.592,1.0,0.632,0.992,0.552,0.552,0.992,0.992,0.616,0.936,0.768,0.992,0.992,0.68,0.992,0.984,0.856,1.0,0.88,0.528,0.952,0.992,0.752,0.656,1.0,0,0.592,0.984,0.456,0.992,0.992,1.0,0.984,0.696,0.992,0.992,0.976,0.712,0.552,1.0,1.0,0.624,0.992,0.768,0.984,0.992,0.992,1.0,0.616,0.0,1.0,1.0,0.664,1.0,1.0,0.992,1.0,0.552,0.992,0.992,0.912,0.696,0.992,0.984,0.992
454,0.9253731343283582,0.9194029850746268,0.9253731343283582,0.9253731343283582,0.6746268656716418,0.9283582089552239,0.6656716417910448,0.9402985074626866,0.9402985074626866,0.9074626865671642,0.9074626865671642,0.9104477611940298,0.9283582089552239,0.9223880597014925,0.9104477611940298,0.9104477611940298,0.9343283582089552,0.9432835820895522,0.9223880597014925,0.9194029850746268,0.9283582089552239,0.9253731343283582,0.9194029850746268,0.9074626865671642,0.9074626865671642,0.9074626865671642,0.9074626865671642,0.9194029850746268,0.9194029850746268,0.9074626865671642,0.9074626865671642,0.9164179104477612,0.9373134328358209,0.9074626865671642,0.9343283582089552,0.9253731343283582,0.9432835820895522,0.9074626865671642,0.9164179104477612,0,0.9074626865671642,0.9373134328358209,0.9044776119402985,0.9074626865671642,0.9313432835820895,0.14626865671641792,0.9044776119402985,0.9074626865671642,0.9164179104477612,0.0,0.9313432835820895,0.9373134328358209,0.9164179104477612,0.9164179104477612,0.9074626865671642,0.9343283582089552,0.9373134328358209,0.9074626865671642,0.9074626865671642,0.9223880597014925,0.9223880597014925,0.9164179104477612,0.9164179104477612,0.9104477611940298,0.9044776119402985,0.33134328358208953,0.9313432835820895,0.9283582089552239,0.9074626865671642,0.9134328358208955,0.9343283582089552,0.9343283582089552,0.9074626865671642,0.9194029850746268,0.9074626865671642,0.9373134328358209,0.9462686567164179,0.9074626865671642,0.9104477611940298,0,0.9074626865671642,0.8925373134328358,0.9253731343283582,0.9014925373134328,0.6805970149253732,0.9074626865671642,0.9313432835820895,0.9223880597014925,0.9164179104477612,0.9074626865671642,0.9074626865671642,0.9194029850746268,0.9134328358208955,0.9223880597014925,0.9134328358208955,0.6955223880597015,0.9313432835820895,0.9194029850746268,0.9074626865671642,0.9194029850746268,0.9402985074626866,0.8507462686567164,0.9343283582089552,0.9164179104477612,0.9074626865671642,0.9253731343283582,0.9313432835820895,0.9044776119402985,0.9074626865671642,0.9343283582089552,0,0.9194029850746268,0.6805970149253732,0.8955223880597015,0.9313432835820895,0.9283582089552239,0.9432835820895522,0.9164179104477612,0.9462686567164179,0.9253731343283582,0.9074626865671642,0.6507462686567164,0.9074626865671642,0.9074626865671642,0.9164179104477612,0.9194029850746268,0.9074626865671642,0.9313432835820895,0.041791044776119404,0.9373134328358209,0.9253731343283582,0.9373134328358209,0.9283582089552239,0.9134328358208955,0.0,0.9074626865671642,0.9343283582089552,0.9253731343283582,0.9343283582089552,0.9253731343283582,0.9164179104477612,0.9313432835820895,0.9074626865671642,0.9223880597014925,0.9223880597014925,0.9074626865671642,0.835820895522388,0.9283582089552239,0.9343283582089552,0.9313432835820895
455,0.7745098039215687,0.7450980392156863,0.6568627450980392,0.7156862745098039,0.6568627450980392,0.7549019607843137,0.7549019607843137,0.7843137254901961,0.7843137254901961,0.6274509803921569,0.6274509803921569,0.6666666666666666,0.7745098039215687,0.7352941176470589,0.696078431372549,0.6568627450980392,0.7941176470588235,0.7549019607843137,0.6862745098039216,0.7156862745098039,0.6862745098039216,0.7745098039215687,0.7058823529411765,0.6274509803921569,0.6274509803921569,0.696078431372549,0.6470588235294118,0.7745098039215687,0.7450980392156863,0.6274509803921569,0.6274509803921569,0.6274509803921569,0.7843137254901961,0.6274509803921569,0.8235294117647058,0.6666666666666666,0.8235294117647058,0.6274509803921569,0.696078431372549,0,0.5980392156862745,0.8235294117647058,0.6274509803921569,0.5882352941176471,0.7843137254901961,0.8627450980392157,0.6470588235294118,0.6274509803921569,0.6666666666666666,0.6274509803921569,0.7352941176470589,0.8333333333333334,0.6764705882352942,0.6372549019607843,0.6274509803921569,0.6372549019607843,0.7745098039215687,0.6568627450980392,0.7549019607843137,0.7254901960784313,0.7058823529411765,0.7058823529411765,0.7549019607843137,0.696078431372549,0.5784313725490197,0.6078431372549019,0.7450980392156863,0.7745098039215687,0.6274509803921569,0.7549019607843137,0.7549019607843137,0.7352941176470589,0.6274509803921569,0.7058823529411765,0.6274509803921569,0.803921568627451,0.6666666666666666,0.6274509803921569,0.696078431372549,0,0.6274509803921569,0.6470588235294118,0.7549019607843137,0.5490196078431373,0.6666666666666666,0.6078431372549019,0.7156862745098039,0.6764705882352942,0.7058823529411765,0.6274509803921569,0.6274509803921569,0.7549019607843137,0.696078431372549,0.8333333333333334,0.6862745098039216,0.6764705882352942,0.7745098039215687,0.7450980392156863,0.6274509803921569,0.7843137254901961,0.8137254901960784,0.4215686274509804,0.7941176470588235,0.7843137254901961,0.6274509803921569,0.7254901960784313,0.8137254901960784,0.6274509803921569,0.6274509803921569,0.7745098039215687,0,0.8137254901960784,0.6666666666666666,0.46078431372549017,0.7352941176470589,0.7647058823529411,0.8235294117647058,0.7156862745098039,0.6666666666666666,0.8137254901960784,0.6274509803921569,0.6274509803921569,0.6470588235294118,0.6274509803921569,0.7058823529411765,0.8137254901960784,0.6274509803921569,0.7450980392156863,0.5490196078431373,0.8529411764705882,0.7647058823529411,0.8235294117647058,0.7647058823529411,0.6666666666666666,0.0,0.6176470588235294,0.7941176470588235,0.6470588235294118,0.8235294117647058,0.7450980392156863,0.7647058823529411,0.803921568627451,0.6274509803921569,0.7549019607843137,0.7156862745098039,0.6274509803921569,0.6372549019607843,0.7254901960784313,0.8137254901960784,0.7156862745098039
458,0.9478672985781991,0.9289099526066351,0.9620853080568721,0.981042654028436,0.957345971563981,0.9620853080568721,0.976303317535545,0.985781990521327,0.981042654028436,0.8009478672985783,0.8388625592417062,0.9383886255924171,0.957345971563981,0.0,0.6208530805687204,0.7677725118483413,0.990521327014218,0.990521327014218,0.985781990521327,0.976303317535545,0.985781990521327,0.985781990521327,0.966824644549763,0.7298578199052133,0.3696682464454976,0.5592417061611374,0.3080568720379147,0.981042654028436,0.966824644549763,0.0,0.3791469194312796,0.7393364928909952,0.981042654028436,0.7298578199052133,0.9620853080568721,0.9241706161137441,0.6161137440758294,0.6824644549763034,0.9715639810426541,0,0.8672985781990521,0.966824644549763,0.6255924170616114,0.8909952606635071,0.95260663507109,0.981042654028436,0.6018957345971564,0.6303317535545023,0.8909952606635071,0.7772511848341233,0.0,0.985781990521327,0.7819905213270142,0.9620853080568721,0.35071090047393366,0.9715639810426541,0.985781990521327,0.8483412322274881,0.7156398104265402,0.995260663507109,0.9146919431279621,0.966824644549763,0.966824644549763,0.6208530805687204,0.5639810426540285,0.9146919431279621,0.9383886255924171,0.957345971563981,0.35071090047393366,0.976303317535545,0.9715639810426541,0.981042654028436,0.3886255924170616,0.8625592417061612,0.8151658767772512,0.995260663507109,0.9715639810426541,0.3791469194312796,0.6208530805687204,0,0.9052132701421801,0.6492890995260664,0.976303317535545,0.35545023696682465,0.957345971563981,0.36492890995260663,0.995260663507109,0.966824644549763,0.9715639810426541,0.3791469194312796,0.3791469194312796,0.9052132701421801,0.8815165876777251,0.9715639810426541,0.8293838862559242,0.95260663507109,0.976303317535545,0.957345971563981,0.7061611374407583,0.995260663507109,0.985781990521327,0.8578199052132701,0.976303317535545,0.957345971563981,0.3696682464454976,0.9620853080568721,0.957345971563981,0.6255924170616114,0.38388625592417064,0.981042654028436,0,0.990521327014218,0.957345971563981,0.3080568720379147,0.0,0.943127962085308,0.981042654028436,0.966824644549763,0.9715639810426541,0.9478672985781991,0.9383886255924171,0.9715639810426541,0.7914691943127962,0.3791469194312796,0.9289099526066351,0.9383886255924171,0.6255924170616114,0.9715639810426541,0.5213270142180095,0.9620853080568721,0.943127962085308,0.9715639810426541,0.995260663507109,0.8056872037914692,0.0,0.9146919431279621,0.9715639810426541,0.9620853080568721,0.981042654028436,0.976303317535545,0.976303317535545,0.9146919431279621,0.6966824644549763,0.976303317535545,0.981042654028436,0.7677725118483413,0.985781990521327,0.976303317535545,0.976303317535545,0.966824644549763
460,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
466,0.6588235294117647,0.7529411764705882,0.6,0.5529411764705883,0.5176470588235295,0.6823529411764706,0.5294117647058824,0.6470588235294118,0.6705882352941176,0.5058823529411764,0.5176470588235295,0.6470588235294118,0.7176470588235294,0.6588235294117647,0.6470588235294118,0.5058823529411764,0.5294117647058824,0.8941176470588236,1.0,0.5294117647058824,0.7411764705882353,0.5294117647058824,0.5176470588235295,0.49411764705882355,0.6705882352941176,0.6470588235294118,0.5647058823529412,0.5176470588235295,0.5411764705882353,0.7058823529411765,0.6705882352941176,0.5058823529411764,0.6705882352941176,0.49411764705882355,0.6235294117647059,0.6941176470588235,0.8,0.5411764705882353,0.5176470588235295,0,0.5176470588235295,0.5294117647058824,0.5647058823529412,0.5176470588235295,0.7176470588235294,0.611764705882353,0.5647058823529412,0.5176470588235295,0.49411764705882355,0.0,0.6941176470588235,0.6235294117647059,1.0,0.4235294117647059,0.5176470588235295,0.8117647058823529,0.5647058823529412,0.5411764705882353,0.5176470588235295,0.5529411764705883,0.6352941176470588,0.5411764705882353,0.5294117647058824,0.6470588235294118,0.5764705882352941,0.49411764705882355,0.611764705882353,0.5411764705882353,0.5176470588235295,0.5411764705882353,0.6823529411764706,0.8235294117647058,0.8235294117647058,0.5647058823529412,0.5176470588235295,0.5294117647058824,0.9176470588235294,0.5176470588235295,0.6470588235294118,0,0.5176470588235295,0.5882352941176471,0.5294117647058824,0.7411764705882353,0.5764705882352941,0.6705882352941176,0.5647058823529412,1.0,0.5529411764705883,0.5176470588235295,0.5176470588235295,0.5411764705882353,0.7647058823529411,0.8941176470588236,0.5529411764705883,0.5176470588235295,0.611764705882353,0.611764705882353,0.5176470588235295,0.5294117647058824,0.6235294117647059,0.6352941176470588,0.5411764705882353,0.4823529411764706,0.6823529411764706,0.5294117647058824,0.788235294117647,0.5647058823529412,0.7764705882352941,0.5764705882352941,0,0.8941176470588236,0.5647058823529412,0.5294117647058824,0.6941176470588235,0.5882352941176471,0.6470588235294118,0.6,0.5058823529411764,0.8235294117647058,0.5411764705882353,0.5529411764705883,0.7764705882352941,0.5176470588235295,0.7294117647058823,0.7058823529411765,0.7294117647058823,0.5647058823529412,0.49411764705882355,0.7176470588235294,0.7411764705882353,0.4588235294117647,0.5529411764705883,0.7764705882352941,0.0,0.5176470588235295,0.7647058823529411,0.6235294117647059,0.7058823529411765,0.611764705882353,0.5294117647058824,0.43529411764705883,0.5176470588235295,0.5176470588235295,0.5411764705882353,0.5411764705882353,0.5176470588235295,0.5529411764705883,0.47058823529411764,0.5764705882352941
470,0.6845238095238095,0.6130952380952381,0.6666666666666666,0.6785714285714286,0.6071428571428571,0.7023809523809523,0.6845238095238095,0.6964285714285714,0.6845238095238095,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6726190476190477,0.6309523809523809,0.6666666666666666,0.6785714285714286,0.6845238095238095,0.6904761904761905,0.6845238095238095,0.6666666666666666,0.6666666666666666,0.6607142857142857,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6964285714285714,0.6964285714285714,0.6845238095238095,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.7083333333333334,0.6666666666666666,0.6964285714285714,0.6547619047619048,0.6309523809523809,0.6666666666666666,0.6845238095238095,0,0.6369047619047619,0.6666666666666666,0.6666666666666666,0.6845238095238095,0.6666666666666666,0.625,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.0,0.6785714285714286,0.6607142857142857,0.5714285714285714,0.6726190476190477,0.6666666666666666,0.625,0.6845238095238095,0.6845238095238095,0.6666666666666666,0.6607142857142857,0.6488095238095238,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.625,0.6369047619047619,0.6726190476190477,0.6785714285714286,0.6666666666666666,0.6666666666666666,0.6726190476190477,0.6428571428571429,0.6607142857142857,0.6845238095238095,0.6666666666666666,0.6726190476190477,0.6488095238095238,0.6547619047619048,0.6666666666666666,0,0.6666666666666666,0.6666666666666666,0.6785714285714286,0.6130952380952381,0.6607142857142857,0.6369047619047619,0.6726190476190477,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.6904761904761905,0.5952380952380952,0.6547619047619048,0.6607142857142857,0.6666666666666666,0.6964285714285714,0.6785714285714286,0.6666666666666666,0.6845238095238095,0.6071428571428571,0.7083333333333334,0.6904761904761905,0.6488095238095238,0.6607142857142857,0.0,0.6726190476190477,0.6666666666666666,0.6309523809523809,0.6845238095238095,0,0.6488095238095238,0.6607142857142857,0.5833333333333334,0.6964285714285714,0.6845238095238095,0.7083333333333334,0.6666666666666666,0.6666666666666666,0.6726190476190477,0.6666666666666666,0.6607142857142857,0.6666666666666666,0.6666666666666666,0.6607142857142857,0.6547619047619048,0.6666666666666666,0.6666666666666666,0.6666666666666666,0.625,0.6726190476190477,0.6666666666666666,0.6726190476190477,0.6190476190476191,0.0,0.6845238095238095,0.7023809523809523,0.6785714285714286,0.6904761904761905,0.6666666666666666,0.6785714285714286,0.6369047619047619,0.6666666666666666,0.6785714285714286,0.6666666666666666,0.6845238095238095,0.6904761904761905,0.6726190476190477,0.6607142857142857,0.7142857142857143

