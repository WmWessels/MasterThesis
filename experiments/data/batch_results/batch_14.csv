0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
40648,0.605,0.5375,0.52,0.5425,0.505,0.5325,0.5225,0.5575,0.5275,0.5175,0.515,0.0,0.5375,0.0,0.5025,0.5375,0.5325,0.575,0.0,0.545,0.5675,0.0,0.54,0.535,0.49,0.5025,0.5275,0.5325,0.5425,0.565,0.49,0.5225,0.0,0.5275,0.5375,0.4825,0.545,0.525,0.6275,0,0.52,0.0,0.4975,0.55,0.5675,0.5675,0.5075,0.5225,0.535,0.0,0.0,0.5325,0.5125,0.5575,0.5325,0.5525,0.57,0.5,0.51,0.5425,0.5425,0.56,0.5725,0.5025,0.5,0.53,0.505,0.6125,0.515,0.5125,0.5125,0.5275,0.4975,0.505,0.585,0.54,0.575,0.5,0.5025,0,0.525,0.5175,0.615,0.47,0.5225,0.5425,0.5275,0.0,0.54,0.53,0.5,0.525,0.5475,0.0,0.4975,0.0,0.5175,0.54,0.5125,0.54,0.4925,0.5125,0.5475,0.5175,0.48,0.0,0.57,0.4975,0.53,0.5525,0,0.0,0.5225,0.5325,0.5875,0.51,0.525,0.5225,0.0,0.5475,0.5175,0.535,0.515,0.5,0.5075,0.4875,0.485,0.5325,0.5,0.6025,0.5525,0.0,0.575,0.5025,0.0,0.53,0.545,0.5075,0.58,0.525,0.515,0.5075,0.5025,0.5825,0.55,0.495,0.0,0.5575,0.0,0.53
40649,0.7175,0.56,0.665,0.6975,0.5,0.635,0.51,0.635,0.7,0.5525,0.6775,0.0,0.6625,0.6775,0.48,0.6125,0.505,0.6275,0.0,0.6775,0.65,0.0,0.6775,0.6775,0.5075,0.48,0.5,0.505,0.6075,0.725,0.5375,0.5225,0.71,0.6375,0.65,0.555,0.6625,0.5075,0.5125,0,0.49,0.0,0.555,0.69,0.6525,0.63,0.555,0.6775,0.545,0.0,0.6975,0.63,0.525,0.65,0.4975,0.615,0.6725,0.5125,0.51,0.6175,0.5875,0.66,0.675,0.48,0.5,0.4975,0.6325,0.5175,0.5275,0.6875,0.6675,0.515,0.515,0.5075,0.495,0.6375,0.6225,0.5,0.48,0,0.545,0.5025,0.4975,0.485,0.5125,0.55,0.505,0.0,0.68,0.5125,0.5,0.615,0.5875,0.0,0.5025,0.0,0.63,0.6425,0.5725,0.585,0.685,0.525,0.6275,0.4925,0.53,0.0,0.66,0.555,0.49,0.63,0,0.0,0.5175,0.515,0.7275,0.6175,0.68,0.65,0.0,0.625,0.6275,0.49,0.52,0.5,0.6775,0.5525,0.505,0.6725,0.515,0.7,0.64,0.0,0.5725,0.55,0.0,0.4975,0.645,0.63,0.58,0.6525,0.4925,0.585,0.6,0.6125,0.6475,0.5325,0.0,0.665,0.0,0.705
40650,0.665,0.5275,0.6,0.625,0.46,0.645,0.4625,0.615,0.665,0.6275,0.565,0.0,0.63,0.6925,0.4925,0.5825,0.47,0.5725,0.0,0.63,0.5775,0.0,0.6025,0.5975,0.475,0.4925,0.535,0.47,0.5375,0.74,0.515,0.485,0.7,0.5825,0.65,0.6275,0.635,0.4825,0.49,0,0.475,0.0,0.5625,0.6725,0.6475,0.6175,0.5625,0.6225,0.535,0.0,0.6925,0.6625,0.535,0.5825,0.52,0.565,0.635,0.5625,0.525,0.5825,0.5875,0.6525,0.6475,0.4925,0.5125,0.475,0.6325,0.48,0.5025,0.6425,0.56,0.46,0.515,0.4625,0.475,0.655,0.5775,0.5,0.4925,0,0.515,0.4875,0.4775,0.535,0.4775,0.5225,0.4675,0.0,0.6525,0.4925,0.5,0.4725,0.4925,0.0,0.5625,0.0,0.65,0.6775,0.525,0.6125,0.6675,0.495,0.6125,0.4825,0.4675,0.0,0.6725,0.5625,0.485,0.6425,0,0.0,0.475,0.4725,0.7325,0.6425,0.7075,0.5825,0.0,0.6025,0.6075,0.475,0.5225,0.5,0.7275,0.5075,0.5125,0.6075,0.485,0.6825,0.625,0.0,0.5675,0.575,0.0,0.475,0.65,0.5775,0.5875,0.6325,0.46,0.4975,0.5925,0.5825,0.69,0.5425,0.0,0.655,0.0,0.705
40663,0.54,0.58,0.34,0.55,0.34,0.55,0.55,0.63,0.59,0.57,0.56,0.57,0.54,0.56,0.35,0.6,0.64,0.6,0.59,0.55,0.38,0.57,0.54,0.51,0.57,0.35,0.36,0.55,0.52,0.57,0.52,0.59,0.6,0.49,0.6,0.52,0.24,0.33,0.55,0,0.43,0.61,0.34,0.61,0.56,0.45,0.34,0.48,0.57,0.45,0.59,0.6,0.61,0.61,0.31,0.52,0.58,0.62,0.58,0.47,0.57,0.53,0.53,0.35,0.44,0.58,0.59,0.57,0.24,0.54,0.58,0.6,0.58,0.49,0.55,0.57,0.58,0.24,0.35,0,0.24,0.28,0.59,0.62,0.55,0.36,0.57,0.57,0.53,0.24,0.24,0.51,0.58,0.58,0.62,0.26,0.58,0.58,0.42,0.47,0.62,0.54,0.56,0.58,0.59,0.58,0.57,0.34,0.57,0.58,0,0.62,0.54,0.57,0.56,0.62,0.6,0.55,0.6,0.55,0.48,0.56,0.55,0.24,0.56,0.55,0.4,0.54,0.0,0.61,0.58,0.62,0.64,0.52,0.0,0.57,0.62,0.31,0.63,0.58,0.54,0.56,0.62,0.53,0.53,0.58,0.36,0.56,0.61,0.55
40664,0.8101851851851852,0.9305555555555556,0.8101851851851852,0.9467592592592593,0.7083333333333334,0.9444444444444444,0.9027777777777778,0.9421296296296297,0.9768518518518519,0.8842592592592593,0.7013888888888888,0.0,0.9050925925925926,0.9560185185185185,0.7013888888888888,0.7013888888888888,0.9305555555555556,0.9004629629629629,0.0,0.9074074074074074,0.8541666666666666,0.9444444444444444,0.9120370370370371,0.7013888888888888,0.7222222222222222,0.7013888888888888,0.7685185185185185,0.9305555555555556,0.9282407407407407,0.7013888888888888,0.7013888888888888,0.7476851851851852,0.9606481481481481,0.7013888888888888,0.9097222222222222,0.7986111111111112,0.7222222222222222,0.7013888888888888,0.8402777777777778,0,0.7013888888888888,0.9467592592592593,0.7013888888888888,0.7013888888888888,0.9282407407407407,0.6435185185185185,0.7013888888888888,0.7013888888888888,0.7476851851851852,0.0,0.9583333333333334,0.9745370370370371,0.6967592592592593,0.8726851851851852,0.7060185185185185,0.8981481481481481,0.9606481481481481,0.7638888888888888,0.7453703703703703,0.8472222222222222,0.8333333333333334,0.9212962962962963,0.9143518518518519,0.7013888888888888,0.8356481481481481,0.7013888888888888,0.9166666666666666,0.8449074074074074,0.7013888888888888,0.9143518518518519,0.8078703703703703,0.9189814814814815,0.7731481481481481,0.8009259259259259,0.7013888888888888,0.9583333333333334,0.8842592592592593,0.7013888888888888,0.7013888888888888,0,0.7106481481481481,0.7013888888888888,0.9097222222222222,0.8171296296296297,0.7013888888888888,0.8564814814814815,0.8356481481481481,0.0,0.9375,0.7013888888888888,0.7013888888888888,0.9074074074074074,0.8981481481481481,0.0,0.8888888888888888,0.7013888888888888,0.9537037037037037,0.8680555555555556,0.7013888888888888,0.8634259259259259,0.9930555555555556,0.6828703703703703,0.9490740740740741,0.7777777777777778,0.7106481481481481,0.8287037037037037,0.9513888888888888,0.7013888888888888,0.7638888888888888,0.9560185185185185,0,0.0,0.7013888888888888,0.9236111111111112,0.9490740740740741,0.8912037037037037,0.9513888888888888,0.8148148148148148,0.9328703703703703,0.9513888888888888,0.8217592592592593,0.6574074074074074,0.7037037037037037,0.7013888888888888,0.9583333333333334,0.9444444444444444,0.7013888888888888,0.8541666666666666,0.5023148148148148,0.9791666666666666,0.8981481481481481,0.9583333333333334,0.8935185185185185,0.7013888888888888,0.8125,0.7013888888888888,0.9675925925925926,0.8425925925925926,0.9699074074074074,0.8912037037037037,0.8541666666666666,0.8472222222222222,0.7013888888888888,0.9398148148148148,0.9259259259259259,0.8263888888888888,0.0,0.9537037037037037,0.9467592592592593,0.9537037037037037
40665,1.0,1.0,0.7310924369747899,0.9831932773109243,0.0,1.0,1.0,0.9747899159663865,1.0,0.7310924369747899,0.7983193277310925,0.8319327731092437,1.0,0.0,1.0,0.7899159663865546,0.9915966386554622,0.8823529411764706,0.7815126050420168,1.0,0.8151260504201681,0.9411764705882353,1.0,0.8403361344537815,0.5210084033613446,1.0,0.5210084033613446,0.9915966386554622,1.0,0.0,0.5630252100840336,0.7226890756302521,1.0,0.8151260504201681,0.907563025210084,0.6974789915966386,1.0,0.6050420168067226,1.0,0,0.7983193277310925,1.0,0.6386554621848739,0.865546218487395,1.0,1.0,0.680672268907563,0.5630252100840336,0.8067226890756303,0.7815126050420168,0.0,1.0,0.8067226890756303,0.8403361344537815,0.5378151260504201,0.8319327731092437,1.0,0.4369747899159664,0.5798319327731093,0.8907563025210085,0.7815126050420168,1.0,1.0,1.0,0.5294117647058824,0.773109243697479,0.9159663865546218,1.0,0.5630252100840336,1.0,1.0,0.9915966386554622,0.6050420168067226,0.9495798319327731,0.7647058823529411,1.0,0.865546218487395,0.5630252100840336,1.0,0,0.5630252100840336,0.0,1.0,0.6218487394957983,0.0,0.6134453781512605,0.9495798319327731,0.7394957983193278,1.0,0.5630252100840336,0.5630252100840336,1.0,0.9159663865546218,1.0,0.6890756302521008,0.0,1.0,0.8991596638655462,0.5630252100840336,0.8403361344537815,1.0,0.773109243697479,1.0,1.0,0.5882352941176471,0.8991596638655462,1.0,0.6386554621848739,0.4789915966386555,1.0,0,1.0,0.0,0.5294117647058824,0.0,0.8991596638655462,1.0,1.0,0.8571428571428571,1.0,0.9327731092436975,0.8235294117647058,0.5966386554621849,0.0,1.0,1.0,0.0,0.9831932773109243,0.0,1.0,0.8319327731092437,1.0,0.907563025210084,0.8151260504201681,0.0,0.773109243697479,0.9915966386554622,0.7394957983193278,1.0,0.9663865546218487,0.9915966386554622,1.0,0.5630252100840336,1.0,0.9831932773109243,0.6386554621848739,0.8823529411764706,1.0,1.0,1.0
40666,1.0,1.0,0.9224242424242424,1.0,0.0,1.0,0.9587878787878787,1.0,1.0,0.943030303030303,0.8818181818181818,0.8478787878787879,1.0,0.0,1.0,0.9509090909090909,0.9993939393939394,0.9787878787878788,0.96,1.0,0.9454545454545454,1.0,1.0,0.9309090909090909,0.8460606060606061,1.0,0.8460606060606061,1.0,1.0,0.0,0.8460606060606061,0.9806060606060606,0.0,0.9345454545454546,0.9787878787878788,0.9121212121212121,1.0,0.8460606060606061,1.0,0,0.7296969696969697,1.0,0.8460606060606061,0.9690909090909091,1.0,1.0,0.8666666666666667,0.8460606060606061,0.9715151515151516,0.9272727272727272,0.0,1.0,0.9915151515151515,0.9624242424242424,0.8460606060606061,0.9781818181818182,1.0,0.9787878787878788,0.8460606060606061,0.9636363636363636,0.943030303030303,1.0,1.0,1.0,0.9157575757575758,0.7460606060606061,0.0,1.0,0.8460606060606061,1.0,1.0,1.0,0.8460606060606061,0.9981818181818182,0.9224242424242424,1.0,0.9709090909090909,0.8460606060606061,1.0,0,0.9939393939393939,0.0,1.0,0.0,0.0,0.8460606060606061,0.9951515151515151,0.9478787878787879,1.0,0.9987878787878788,0.8460606060606061,1.0,0.996969696969697,1.0,0.0,0.0,1.0,0.9648484848484848,0.8460606060606061,0.953939393939394,1.0,0.8824242424242424,1.0,1.0,0.8460606060606061,0.9642424242424242,1.0,0.8460606060606061,0.0,1.0,0,1.0,0.0,0.8460606060606061,0.0,0.0,1.0,0.9993939393939394,0.9715151515151516,1.0,0.9903030303030304,0.7775757575757576,0.9321212121212121,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0,0.9733333333333334,0.9642424242424242,0.0,0.7727272727272727,1.0,0.9236363636363636,1.0,1.0,1.0,1.0,0.8460606060606061,1.0,1.0,0.0,0.8781818181818182,1.0,1.0,0.0
40670,0.8958594730238394,0.9058971141781681,0.8607277289836889,0.9259723964868256,0.8695106649937264,0.9372647427854455,0.9422835633626098,0.9535759096612296,0.9623588456712673,0.5947302383939774,0.5194479297365119,0.0,0.9372647427854455,0.0,0.6373902132998746,0.24090338770388958,0.9297365119196989,0.8431618569636136,0.0,0.8983688833124216,0.8657465495608532,0.944792973651192,0.9021329987452948,0.5194479297365119,0.5846925972396487,0.6373902132998746,0.48306148055207027,0.93099121706399,0.9071518193224593,0.0,0.5194479297365119,0.671267252195734,0.0,0.24090338770388958,0.9259723964868256,0.8117942283563363,0.8996235884567126,0.5194479297365119,0.9234629861982434,0,0.5194479297365119,0.9573400250941029,0.5746549560853199,0.5194479297365119,0.9146800501882058,0.5633626097867002,0.5997490589711418,0.5194479297365119,0.8155583437892095,0.0,0.0,0.9636135508155583,0.7340025094102886,0.8343789209535759,0.5119196988707654,0.8180677540777918,0.944792973651192,0.44291091593475534,0.5633626097867002,0.8619824341279799,0.8569636135508155,0.904642409033877,0.8946047678795483,0.6373902132998746,0.4993726474278545,0.5194479297365119,0.0,0.9297365119196989,0.5194479297365119,0.9109159347553325,0.9234629861982434,0.9498117942283564,0.6072772898368883,0.7791718946047679,0.5194479297365119,0.9636135508155583,0.8557089084065245,0.5194479297365119,0.6373902132998746,0,0.9222082810539524,0.5194479297365119,0.9498117942283564,0.0,0.8557089084065245,0.26223337515683814,0.944792973651192,0.0,0.904642409033877,0.8820577164366374,0.5194479297365119,0.8958594730238394,0.904642409033877,0.0,0.6461731493099122,0.8506900878293601,0.946047678795483,0.9272271016311167,0.5194479297365119,0.8657465495608532,0.9598494353826851,0.7164366373902133,0.9410288582183187,0.9335006273525721,0.6035131744040151,0.8644918444165621,0.9347553324968633,0.5746549560853199,0.0,0.9510664993726474,0,0.0,0.8557089084065245,0.479297365119197,0.0,0.9196988707653702,0.958594730238394,0.9322459222082811,0.8431618569636136,0.9322459222082811,0.9297365119196989,0.877038895859473,0.6248431618569636,0.5194479297365119,0.9084065244667503,0.9222082810539524,0.5194479297365119,0.944792973651192,0.4090338770388959,0.9598494353826851,0.0,0.946047678795483,0.8444165621079046,0.7327478042659975,0.0,0.5194479297365119,0.944792973651192,0.8682559598494354,0.9247176913425345,0.9510664993726474,0.946047678795483,0.9247176913425345,0.5194479297365119,0.9284818067754078,0.9109159347553325,0.616060225846926,0.0,0.9397741530740276,0.9636135508155583,0.0
40671,0.0,0.8048780487804879,0.7926829268292683,0.7439024390243902,0.0,0.8414634146341463,0.7682926829268293,0.8536585365853658,0.8048780487804879,0.43902439024390244,0.43902439024390244,0.0,0.8170731707317073,0.8536585365853658,0.6463414634146342,0.6829268292682927,0.8536585365853658,0.8658536585365854,0.0,0.7439024390243902,0.7804878048780488,0.6951219512195121,0.7317073170731707,0.43902439024390244,0.8414634146341463,0.6463414634146342,0.7804878048780488,0.8536585365853658,0.7682926829268293,0.43902439024390244,0.43902439024390244,0.4878048780487805,0.8414634146341463,0.43902439024390244,0.8536585365853658,0.7926829268292683,0.8780487804878049,0.43902439024390244,0.6341463414634146,0,0.4268292682926829,0.8292682926829268,0.6341463414634146,0.6097560975609756,0.8170731707317073,0.5975609756097561,0.6341463414634146,0.43902439024390244,0.4634146341463415,0.0,0.8170731707317073,0.8048780487804879,0.8170731707317073,0.8292682926829268,0.8048780487804879,0.8536585365853658,0.8414634146341463,0.7804878048780488,0.8536585365853658,0.8170731707317073,0.7804878048780488,0.7560975609756098,0.7560975609756098,0.6463414634146342,0.7682926829268293,0.4268292682926829,0.8048780487804879,0.7926829268292683,0.43902439024390244,0.7560975609756098,0.8292682926829268,0.8170731707317073,0.8536585365853658,0.7804878048780488,0.43902439024390244,0.8292682926829268,0.8414634146341463,0.43902439024390244,0.6463414634146342,0,0.43902439024390244,0.5975609756097561,0.7317073170731707,0.7926829268292683,0.43902439024390244,0.5975609756097561,0.7439024390243902,0.0,0.7804878048780488,0.43902439024390244,0.43902439024390244,0.8048780487804879,0.8170731707317073,0.0,0.8292682926829268,0.43902439024390244,0.0,0.8048780487804879,0.5365853658536586,0.8170731707317073,0.8170731707317073,0.7195121951219512,0.8414634146341463,0.6951219512195121,0.8170731707317073,0.7317073170731707,0.8292682926829268,0.6341463414634146,0.8414634146341463,0.7560975609756098,0,0.0,0.43902439024390244,0.7926829268292683,0.8292682926829268,0.8292682926829268,0.8536585365853658,0.7804878048780488,0.8414634146341463,0.8414634146341463,0.43902439024390244,0.7682926829268293,0.7926829268292683,0.43902439024390244,0.7926829268292683,0.8170731707317073,0.5121951219512195,0.8292682926829268,0.5487804878048781,0.8170731707317073,0.7926829268292683,0.8536585365853658,0.8292682926829268,0.7926829268292683,0.0,0.43902439024390244,0.8536585365853658,0.7926829268292683,0.8536585365853658,0.8536585365853658,0.6097560975609756,0.8292682926829268,0.43902439024390244,0.7804878048780488,0.7439024390243902,0.7439024390243902,0.0,0.8170731707317073,0.8536585365853658,0.7926829268292683
40677,0.54125,0.72125,0.71,0.7325,0.7175,0.73375,0.7275,0.72875,0.7225,0.73375,0.105,0.0,0.73375,0.69875,0.195,0.0925,0.72625,0.62125,0.0,0.73625,0.7075,0.7325,0.7275,0.1025,0.1825,0.195,0.33875,0.725,0.7225,0.7325,0.28,0.7125,0.72875,0.1025,0.73375,0.51375,0.2625,0.105,0.72125,0,0.105,0.7275,0.20125,0.105,0.72875,0.2225,0.19875,0.105,0.43375,0.0,0.69625,0.71,0.1525,0.55,0.14875,0.6425,0.73875,0.73125,0.52,0.68875,0.6925,0.72875,0.73375,0.195,0.71375,0.105,0.7275,0.72,0.1875,0.73,0.74,0.725,0.24375,0.59375,0.105,0.71625,0.66875,0.105,0.195,0,0.74375,0.15,0.72875,0.0,0.73375,0.595,0.72875,0.0,0.73375,0.73375,0.105,0.725,0.72625,0.0,0.72625,0.7325,0.7325,0.73375,0.2975,0.67,0.69375,0.72,0.7325,0.46875,0.11375,0.45625,0.73375,0.20125,0.0,0.7375,0,0.0,0.73375,0.47625,0.72375,0.74625,0.73625,0.73375,0.7225,0.7275,0.73125,0.16875,0.385,0.105,0.67625,0.695,0.18375,0.73875,0.18375,0.71625,0.735,0.7275,0.7125,0.16125,0.0,0.105,0.72625,0.69875,0.695,0.73625,0.73,0.7225,0.72125,0.73375,0.73125,0.7225,0.0,0.7325,0.72625,0.725
40678,0.52125,0.72,0.71125,0.71375,0.69875,0.71375,0.71375,0.715,0.70875,0.7125,0.10625,0.0,0.71375,0.71125,0.175,0.10375,0.71625,0.71625,0.0,0.71875,0.71875,0.71625,0.72125,0.08375,0.7125,0.175,0.69,0.70875,0.7075,0.72375,0.6625,0.70125,0.71,0.10125,0.715,0.53375,0.3975,0.10625,0.2575,0,0.10625,0.7175,0.20875,0.10625,0.71625,0.345,0.20875,0.10625,0.4575,0.0,0.71,0.71625,0.44,0.7025,0.71375,0.725,0.71375,0.7125,0.715,0.7175,0.70875,0.725,0.725,0.175,0.71125,0.10625,0.71,0.44625,0.26375,0.71875,0.71875,0.7225,0.71375,0.5425,0.10625,0.715,0.72125,0.10625,0.175,0,0.71875,0.2025,0.52,0.70375,0.72625,0.7125,0.725,0.0,0.71375,0.7125,0.10625,0.685,0.70875,0.0,0.7125,0.7225,0.715,0.7125,0.60625,0.7225,0.71125,0.71125,0.715,0.175,0.70875,0.4375,0.7175,0.20875,0.71,0.71125,0,0.0,0.72625,0.52,0.7125,0.715,0.71,0.71625,0.72125,0.71625,0.71375,0.175,0.47875,0.10625,0.71125,0.71125,0.24875,0.71375,0.36,0.71625,0.71375,0.7125,0.72875,0.47875,0.0,0.10625,0.7125,0.71875,0.715,0.7125,0.72625,0.6275,0.72,0.7075,0.71875,0.72,0.0,0.7125,0.71125,0.70375
40680,0.9365558912386707,0.824773413897281,0.8731117824773413,0.9305135951661632,0.7371601208459214,0.9274924471299094,1.0,0.9154078549848943,0.9969788519637462,0.8459214501510574,0.7794561933534743,0.0,0.8670694864048338,0.9939577039274925,0.7794561933534743,0.7794561933534743,1.0,0.9093655589123867,0.0,0.9274924471299094,0.8851963746223565,0.9879154078549849,0.9063444108761329,0.7794561933534743,0.918429003021148,0.7794561933534743,0.8912386706948641,1.0,0.8670694864048338,0.7794561933534743,0.7794561933534743,0.8368580060422961,1.0,0.7794561933534743,0.9546827794561934,0.7794561933534743,1.0,0.7794561933534743,0.8096676737160121,0,0.7794561933534743,1.0,0.7794561933534743,0.7794561933534743,0.9214501510574018,1.0,0.7794561933534743,0.7794561933534743,0.8126888217522659,0.0,1.0,0.9969788519637462,0.824773413897281,0.8942598187311178,0.8489425981873112,0.9093655589123867,1.0,0.8942598187311178,0.8912386706948641,0.9123867069486404,0.851963746223565,0.8912386706948641,0.9214501510574018,0.7794561933534743,0.8761329305135952,0.7794561933534743,0.9154078549848943,0.824773413897281,0.7794561933534743,0.9214501510574018,0.8277945619335347,1.0,0.9093655589123867,0.918429003021148,0.7794561933534743,1.0,0.9395770392749244,0.7794561933534743,0.7794561933534743,0,0.7824773413897281,0.7794561933534743,0.8368580060422961,0.9516616314199395,0.7794561933534743,0.9154078549848943,0.8338368580060423,0.0,0.9214501510574018,0.7794561933534743,0.7794561933534743,0.8368580060422961,1.0,0.0,0.9123867069486404,0.7794561933534743,0.972809667673716,0.8882175226586103,0.7794561933534743,0.9154078549848943,1.0,0.8761329305135952,0.9214501510574018,0.7613293051359517,0.8972809667673716,0.8096676737160121,0.9637462235649547,0.7794561933534743,0.9244712990936556,0.9818731117824774,0,0.0,0.7794561933534743,0.8398791540785498,1.0,0.9063444108761329,0.9969788519637462,0.8308157099697885,1.0,0.8942598187311178,0.8036253776435045,0.7009063444108762,0.8459214501510574,0.7794561933534743,0.9667673716012085,0.851963746223565,0.7794561933534743,0.8429003021148036,0.6706948640483383,1.0,0.9063444108761329,1.0,0.9274924471299094,0.8459214501510574,0.0,0.7794561933534743,1.0,0.8731117824773413,1.0,0.8489425981873112,1.0,0.8217522658610272,0.7794561933534743,0.8912386706948641,0.918429003021148,0.9093655589123867,0.0,0.9516616314199395,1.0,1.0
40686,0.6455696202531646,0.759493670886076,0.810126582278481,0.810126582278481,0.6962025316455697,0.810126582278481,0.7848101265822784,0.8354430379746836,0.7974683544303798,0.7468354430379747,0.8481012658227848,0.0,0.810126582278481,0.7974683544303798,0.4810126582278481,0.7974683544303798,0.7721518987341772,0.810126582278481,0.0,0.8354430379746836,0.7974683544303798,0.7848101265822784,0.8481012658227848,0.7974683544303798,0.6835443037974683,0.4810126582278481,0.620253164556962,0.7721518987341772,0.8354430379746836,0.7721518987341772,0.5063291139240507,0.7341772151898734,0.8227848101265823,0.7974683544303798,0.7721518987341772,0.6329113924050633,0.8354430379746836,0.34177215189873417,0.7974683544303798,0,0.8481012658227848,0.7721518987341772,0.4177215189873418,0.7974683544303798,0.810126582278481,0.43037974683544306,0.4177215189873418,0.4810126582278481,0.6835443037974683,0.8481012658227848,0.7974683544303798,0.810126582278481,0.43037974683544306,0.7848101265822784,0.569620253164557,0.7974683544303798,0.8227848101265823,0.7341772151898734,0.7468354430379747,0.7848101265822784,0.6329113924050633,0.8227848101265823,0.8354430379746836,0.4810126582278481,0.7468354430379747,0.7468354430379747,0.7468354430379747,0.759493670886076,0.27848101265822783,0.810126582278481,0.810126582278481,0.7974683544303798,0.6962025316455697,0.7974683544303798,0.8481012658227848,0.7721518987341772,0.7974683544303798,0.27848101265822783,0.4810126582278481,0,0.27848101265822783,0.34177215189873417,0.7974683544303798,0.6835443037974683,0.7974683544303798,0.34177215189873417,0.8354430379746836,0.0,0.8227848101265823,0.27848101265822783,0.27848101265822783,0.810126582278481,0.759493670886076,0.0,0.7721518987341772,0.3037974683544304,0.810126582278481,0.7848101265822784,0.4177215189873418,0.7974683544303798,0.8354430379746836,0.6582278481012658,0.8227848101265823,0.7468354430379747,0.7215189873417721,0.7468354430379747,0.810126582278481,0.4177215189873418,0.6708860759493671,0.8227848101265823,0,0.0,0.7974683544303798,0.759493670886076,0.8227848101265823,0.7215189873417721,0.810126582278481,0.7974683544303798,0.759493670886076,0.8227848101265823,0.7974683544303798,0.7974683544303798,0.4177215189873418,0.27848101265822783,0.7721518987341772,0.7848101265822784,0.379746835443038,0.8227848101265823,0.31645569620253167,0.8354430379746836,0.7088607594936709,0.7468354430379747,0.810126582278481,0.46835443037974683,0.0,0.7974683544303798,0.7974683544303798,0.8227848101265823,0.810126582278481,0.8354430379746836,0.810126582278481,0.8227848101265823,0.5569620253164557,0.7848101265822784,0.810126582278481,0.7468354430379747,0.0,0.8227848101265823,0.7848101265822784,0.759493670886076
40687,0.6217228464419475,0.7415730337078652,0.7640449438202247,0.7640449438202247,0.7153558052434457,0.7565543071161048,0.7677902621722846,0.7565543071161048,0.7528089887640449,0.7191011235955056,0.7677902621722846,0.0,0.7640449438202247,0.7303370786516854,0.5355805243445693,0.7453183520599251,0.7528089887640449,0.7415730337078652,0.0,0.7640449438202247,0.7602996254681648,0.7640449438202247,0.7490636704119851,0.7490636704119851,0.7340823970037453,0.5355805243445693,0.6367041198501873,0.7528089887640449,0.7490636704119851,0.3258426966292135,0.31086142322097376,0.7378277153558053,0.7415730337078652,0.7490636704119851,0.7490636704119851,0.6966292134831461,0.4943820224719101,0.7640449438202247,0.7415730337078652,0,0.7640449438202247,0.7565543071161048,0.4943820224719101,0.7827715355805244,0.7602996254681648,0.4157303370786517,0.4606741573033708,0.31086142322097376,0.6704119850187266,0.7677902621722846,0.7415730337078652,0.7715355805243446,0.3408239700374532,0.7415730337078652,0.6853932584269663,0.7602996254681648,0.7453183520599251,0.7116104868913857,0.7340823970037453,0.7790262172284644,0.7078651685393258,0.7640449438202247,0.7528089887640449,0.5355805243445693,0.6629213483146067,0.7453183520599251,0.7565543071161048,0.7528089887640449,0.3333333333333333,0.7528089887640449,0.7602996254681648,0.7640449438202247,0.7228464419475655,0.7602996254681648,0.7715355805243446,0.7715355805243446,0.7415730337078652,0.31086142322097376,0.5355805243445693,0,0.6067415730337079,0.5355805243445693,0.7640449438202247,0.7265917602996255,0.7640449438202247,0.6479400749063671,0.7715355805243446,0.0,0.7490636704119851,0.5280898876404494,0.31086142322097376,0.7490636704119851,0.7415730337078652,0.0,0.7265917602996255,0.5243445692883895,0.7528089887640449,0.7640449438202247,0.40074906367041196,0.7565543071161048,0.7378277153558053,0.6554307116104869,0.7490636704119851,0.7565543071161048,0.7116104868913857,0.7415730337078652,0.7415730337078652,0.4943820224719101,0.7265917602996255,0.7715355805243446,0,0.0,0.7640449438202247,0.704119850187266,0.7715355805243446,0.7528089887640449,0.7565543071161048,0.7640449438202247,0.7378277153558053,0.7677902621722846,0.7602996254681648,0.7790262172284644,0.3895131086142322,0.31086142322097376,0.7303370786516854,0.7415730337078652,0.352059925093633,0.7715355805243446,0.0,0.7415730337078652,0.7602996254681648,0.7453183520599251,0.7228464419475655,0.39325842696629215,0.0,0.7752808988764045,0.7602996254681648,0.7453183520599251,0.7528089887640449,0.7677902621722846,0.7752808988764045,0.7528089887640449,0.3146067415730337,0.7490636704119851,0.7490636704119851,0.7340823970037453,0.0,0.7565543071161048,0.7490636704119851,0.7303370786516854
40690,1.0,0.8359375,0.90625,1.0,0.6328125,0.9765625,0.8046875,0.9765625,0.9921875,0.90625,0.5390625,0.0,0.8984375,0.9296875,0.65625,0.5390625,0.8046875,0.9375,0.0,0.96875,0.9296875,0.90625,0.9921875,0.5390625,0.8828125,0.65625,0.8359375,0.8046875,0.96875,0.921875,0.53125,0.8203125,1.0,0.5390625,0.8125,0.7109375,1.0,0.5390625,0.6796875,0,0.5390625,0.8984375,0.6953125,0.5390625,1.0,1.0,0.6953125,0.5390625,0.71875,0.0,0.9296875,0.96875,0.7421875,0.9140625,0.7421875,0.8671875,1.0,0.9453125,0.8671875,0.875,0.78125,0.9453125,0.9765625,0.65625,0.8046875,0.5390625,0.765625,0.7265625,0.71875,0.9921875,0.96875,0.8046875,0.8515625,0.7421875,0.5390625,0.953125,0.90625,0.5390625,0.65625,0,0.5390625,0.6328125,0.8046875,0.765625,0.546875,0.8828125,0.796875,0.0,0.984375,0.5390625,0.5390625,0.8046875,0.7890625,0.0,0.8671875,0.5390625,1.0,0.828125,0.75,0.875,0.9921875,0.859375,1.0,0.640625,0.859375,0.6796875,1.0,0.6953125,0.8046875,1.0,0,0.0,0.5390625,0.8046875,1.0,0.8046875,0.921875,0.875,0.8984375,0.9921875,0.8671875,0.7421875,0.734375,0.5390625,0.9609375,0.953125,0.4453125,0.90625,0.5546875,1.0,0.78125,0.9140625,0.9609375,0.7421875,0.0,0.5390625,0.953125,0.9296875,0.9921875,0.9140625,0.8046875,0.90625,0.546875,0.9140625,0.9921875,0.875,0.0,1.0,0.8984375,0.9453125
40691,0.5875,0.56,0.5025,0.635,0.275,0.6875,0.6075,0.7,0.695,0.58,0.425,0.5475,0.6675,0.6325,0.54,0.4075,0.5975,0.605,0.63,0.6,0.525,0.615,0.615,0.39,0.4975,0.54,0.56,0.5925,0.63,0.5975,0.4575,0.5475,0.69,0.47,0.69,0.5725,0.3075,0.43,0.5925,0,0.425,0.68,0.5225,0.475,0.665,0.275,0.5225,0.425,0.525,0.0,0.67,0.67,0.5825,0.5325,0.425,0.48,0.705,0.68,0.65,0.5625,0.605,0.6,0.6125,0.54,0.6275,0.115,0.68,0.67,0.425,0.615,0.6225,0.6,0.4825,0.5625,0.425,0.7025,0.6,0.47,0.54,0,0.5875,0.5175,0.62,0.5525,0.43,0.435,0.595,0.62,0.6175,0.56,0.425,0.6075,0.5525,0.58,0.685,0.4625,0.5875,0.6375,0.425,0.585,0.4075,0.5325,0.6775,0.5975,0.5625,0.66,0.68,0.5225,0.5325,0.665,0,0.5425,0.425,0.4375,0.6675,0.6675,0.6625,0.6125,0.625,0.6825,0.4725,0.3575,0.5125,0.425,0.57,0.6275,0.4775,0.66,0.375,0.6775,0.6675,0.7125,0.6925,0.515,0.0,0.425,0.665,0.4975,0.695,0.6675,0.5675,0.6025,0.5375,0.6375,0.62,0.62,0.5625,0.6625,0.6675,0.6275

40700,0.7755102040816326,0.7448979591836735,0.6632653061224489,0.7040816326530612,0.5306122448979592,0.7959183673469388,0.6122448979591837,0.826530612244898,0.8061224489795918,0.6224489795918368,0.6224489795918368,0.6530612244897959,0.7040816326530612,0.7551020408163265,0.7040816326530612,0.6530612244897959,0.7448979591836735,0.7244897959183674,0.6938775510204082,0.6632653061224489,0.673469387755102,0.7040816326530612,0.6632653061224489,0.5714285714285714,0.6224489795918368,0.6224489795918368,0.6632653061224489,0.7040816326530612,0.673469387755102,0.6224489795918368,0.6224489795918368,0.6224489795918368,0.8061224489795918,0.5714285714285714,0.7551020408163265,0.6530612244897959,0.8367346938775511,0.6224489795918368,0.673469387755102,0,0.5714285714285714,0.8367346938775511,0.6326530612244898,0.5714285714285714,0.7653061224489796,0.7857142857142857,0.6326530612244898,0.6224489795918368,0.7040816326530612,0.5714285714285714,0.8061224489795918,0.7959183673469388,0.673469387755102,0.6020408163265306,0.6224489795918368,0.6530612244897959,0.8061224489795918,0.6632653061224489,0.7346938775510204,0.7244897959183674,0.6326530612244898,0.6632653061224489,0.6836734693877551,0.7040816326530612,0.5510204081632653,0.6020408163265306,0.7040816326530612,0.7857142857142857,0.6224489795918368,0.6836734693877551,0.7755102040816326,0.7755102040816326,0.6224489795918368,0.673469387755102,0.6224489795918368,0.7755102040816326,0.7244897959183674,0.6224489795918368,0.7040816326530612,0,0.6224489795918368,0.6326530612244898,0.7040816326530612,0.5612244897959183,0.5306122448979592,0.6122448979591837,0.7346938775510204,0.6938775510204082,0.6836734693877551,0.6224489795918368,0.6224489795918368,0.7244897959183674,0.7040816326530612,0.8061224489795918,0.6530612244897959,0.5408163265306123,0.7653061224489796,0.6938775510204082,0.6224489795918368,0.7448979591836735,0.8163265306122449,0.5816326530612245,0.7857142857142857,0.7857142857142857,0.6224489795918368,0.7142857142857143,0.8163265306122449,0.6326530612244898,0.5714285714285714,0.7551020408163265,0,0.7755102040816326,0.5306122448979592,0.5408163265306123,0.7857142857142857,0.6938775510204082,0.8469387755102041,0.6632653061224489,0.7244897959183674,0.826530612244898,0.6224489795918368,0.5816326530612245,0.6632653061224489,0.6224489795918368,0.7857142857142857,0.7959183673469388,0.6632653061224489,0.7346938775510204,0.5,0.826530612244898,0.673469387755102,0.8163265306122449,0.7448979591836735,0.7142857142857143,0.0,0.6020408163265306,0.8163265306122449,0.6530612244897959,0.8163265306122449,0.7551020408163265,0.7142857142857143,0.7857142857142857,0.6224489795918368,0.7142857142857143,0.673469387755102,0.673469387755102,0.5816326530612245,0.7142857142857143,0.8367346938775511,0.7040816326530612
40701,0.8952,0.9384,0.8584,0.9376,0.5608,0.948,0.8528,0.9376,0.9464,0.8864,0.8584,0.8584,0.94,0.0,0.8656,0.8624,0.8536,0.872,0.8584,0.928,0.8584,0.9112,0.9352,0.8624,0.8584,0.8584,0.8592,0.8608,0.9488,0.8584,0.8584,0.876,0.9624,0.8632,0.9608,0.9032,0.9472,0.8584,0.9152,0,0.8608,0.932,0.8568,0.872,0.9472,0.8624,0.86,0.8584,0.868,0.868,0.0,0.9264,0.8584,0.864,0.8584,0.868,0.9584,0.8728,0.8584,0.8712,0.9496,0.928,0.9352,0.8656,0.896,0.6632,0.9584,0.9256,0.8584,0.9328,0.8872,0.8656,0.8584,0.8672,0.8584,0.9224,0.8616,0.8584,0.8656,0,0.8592,0.8584,0.9496,0.0,0.5832,0.8576,0.8552,0.8584,0.9344,0.8584,0.8584,0.9304,0.8696,0.8864,0.9064,0.56,0.9328,0.9464,0.8584,0.8688,0.9408,0.8656,0.9576,0.8736,0.8584,0.8576,0.9488,0.8568,0.0,0.9512,0,0.8768,0.5832,0.8584,0.0,0.9472,0.9304,0.8904,0.8984,0.9448,0.8584,0.7192,0.8584,0.8584,0.952,0.9456,0.8584,0.8952,0.8592,0.9528,0.9552,0.9472,0.8856,0.856,0.0,0.8664,0.9024,0.8584,0.9608,0.9136,0.8608,0.9304,0.8584,0.9512,0.932,0.9288,0.884,0.9456,0.952,0.0
40702,0.8277153558052435,0.8127340823970037,0.8389513108614233,0.8277153558052435,0.6217228464419475,0.8352059925093633,0.8352059925093633,0.8127340823970037,0.8202247191011236,0.8277153558052435,0.8277153558052435,0.0,0.8426966292134831,0.8277153558052435,0.8277153558052435,0.8277153558052435,0.8314606741573034,0.8239700374531835,0.0,0.8314606741573034,0.8239700374531835,0.8352059925093633,0.8314606741573034,0.8277153558052435,0.7940074906367042,0.8277153558052435,0.8277153558052435,0.8314606741573034,0.8314606741573034,0.8277153558052435,0.8277153558052435,0.8277153558052435,0.797752808988764,0.8277153558052435,0.7940074906367042,0.8314606741573034,0.7715355805243446,0.8277153558052435,0.8277153558052435,0,0.7602996254681648,0.8426966292134831,0.8277153558052435,0.8202247191011236,0.8314606741573034,0.7415730337078652,0.8277153558052435,0.8277153558052435,0.8277153558052435,0.8277153558052435,0.8014981273408239,0.8202247191011236,0.8352059925093633,0.797752808988764,0.8277153558052435,0.8314606741573034,0.7940074906367042,0.8202247191011236,0.8202247191011236,0.8314606741573034,0.8389513108614233,0.8314606741573034,0.8277153558052435,0.8277153558052435,0.8277153558052435,0.7078651685393258,0.8202247191011236,0.8314606741573034,0.8277153558052435,0.8314606741573034,0.8277153558052435,0.8277153558052435,0.7902621722846442,0.8277153558052435,0.8277153558052435,0.8314606741573034,0.8239700374531835,0.8277153558052435,0.8277153558052435,0,0.8277153558052435,0.8277153558052435,0.8277153558052435,0.7752808988764045,0.8089887640449438,0.8277153558052435,0.8277153558052435,0.0,0.8314606741573034,0.8277153558052435,0.8277153558052435,0.8389513108614233,0.8314606741573034,0.0,0.8314606741573034,0.8277153558052435,0.8239700374531835,0.8202247191011236,0.8277153558052435,0.8164794007490637,0.8277153558052435,0.8239700374531835,0.8352059925093633,0.8389513108614233,0.8052434456928839,0.8389513108614233,0.8277153558052435,0.8277153558052435,0.7827715355805244,0.8239700374531835,0,0.0,0.8014981273408239,0.8277153558052435,0.8127340823970037,0.8277153558052435,0.8277153558052435,0.8277153558052435,0.8277153558052435,0.8202247191011236,0.8277153558052435,0.7677902621722846,0.8277153558052435,0.8277153558052435,0.8314606741573034,0.8014981273408239,0.8277153558052435,0.8277153558052435,0.50187265917603,0.8164794007490637,0.8389513108614233,0.8239700374531835,0.8277153558052435,0.8277153558052435,0.0,0.7752808988764045,0.7827715355805244,0.8352059925093633,0.797752808988764,0.8314606741573034,0.8314606741573034,0.8014981273408239,0.8277153558052435,0.8426966292134831,0.8277153558052435,0.8352059925093633,0.0,0.8202247191011236,0.8314606741573034,0.8314606741573034
