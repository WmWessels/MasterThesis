0,"Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.2)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=11,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=43))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.15000000000000002)),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.3, min_samples_leaf=11,
                                        min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', LogisticRegression(C=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.1, min_samples_leaf=2,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=12,
                                            min_samples_split=4,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.4, whiten='unit-variance')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=18,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer(norm='max')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.15000000000000002,
                                            min_samples_leaf=2,
                                            min_samples_split=18,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=9,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PolynomialFeatures(include_bias=False)),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(bootstrap=False,
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.4)),
                ('0',
                 KNeighborsClassifier(n_neighbors=15, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()), ('0', LogisticRegression(C=25.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=8, p=1, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.7000000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=41, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=27, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.014)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.25,
                                      min_samples_leaf=4,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=20,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=37))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.7000000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=14,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.75, whiten='unit-variance')),
                ('1', RBFSampler(gamma=0.1)),
                ('0', KNeighborsClassifier(n_neighbors=25))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=10.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=17,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=7,
                                            max_features=0.2,
                                            min_samples_leaf=5,
                                            min_samples_split=15,
                                            subsample=0.8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='laplacian',
                          n_components=5)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.8,
                                            min_samples_leaf=13,
                                            min_samples_split=14,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', FastICA(tol=0.7000000000000001, whiten='unit-variance')),
                ('1', SelectPercentile(percentile=16)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=3,
                                      min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.2)),
                ('0', KNeighborsClassifier(n_neighbors=29, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.9500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=5, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=2,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=10,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.8500000000000001)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=1,
                                            max_features=0.55,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.2))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=32)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.8,
                                      min_samples_leaf=10,
                                      min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0', LogisticRegression())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.007)),
                ('0',
                 GradientBoostingClassifier(max_depth=5,
                                            max_features=0.9500000000000001,
                                            min_samples_leaf=11,
                                            min_samples_split=12,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_leaf=3,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Binarizer(threshold=0.35000000000000003)),
                ('0',
                 GradientBoostingClassifier(max_depth=10,
                                            max_features=0.35000000000000003,
                                            min_samples_leaf=11,
                                            min_samples_split=9,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=1.0, max_depth=5,
                                            max_features=0.9000000000000001,
                                            min_samples_leaf=18,
                                            min_samples_split=7,
                                            subsample=0.7000000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=10, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=5,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.1)), ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=1.0,
                                            min_samples_leaf=16,
                                            min_samples_split=15,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=1, svd_solver='randomized')),
                ('1', Binarizer(threshold=0.45)),
                ('0',
                 RandomForestClassifier(max_features=0.55, min_samples_leaf=3,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer()), ('1', SelectFwe(alpha=0.019)),
                ('0',
                 RandomForestClassifier(max_features=0.5, min_samples_leaf=19,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.8,
                                        min_samples_leaf=9,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=7, max_features=0.1,
                                            min_samples_leaf=8,
                                            min_samples_split=3,
                                            subsample=0.35000000000000003))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l1', linkage='average')),
                ('0',
                 KNeighborsClassifier(n_neighbors=21, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', Binarizer(threshold=0.55)),
                ('0', KNeighborsClassifier(n_neighbors=6, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.7000000000000001)),
                ('1', StandardScaler()),
                ('0', KNeighborsClassifier(n_neighbors=42))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', KNeighborsClassifier(n_neighbors=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.9500000000000001, whiten='unit-variance')),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', RBFSampler(gamma=0.9500000000000001)),
                ('0',
                 ExtraTreesClassifier(max_features=0.1, min_samples_leaf=10,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0', KNeighborsClassifier(n_neighbors=22))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=8,
                                        min_samples_leaf=17,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=18,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.7000000000000001,
                                      min_samples_leaf=16,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=8,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.1, whiten='unit-variance')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=5,
                                        min_samples_leaf=12,
                                        min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', PCA(iterated_power=8, svd_solver='randomized')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=9,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=43)),
                ('0',
                 RandomForestClassifier(max_features=0.8500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.15000000000000002, kernel='polynomial',
                          n_components=1)),
                ('0', LogisticRegression(C=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=15,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.7500000000000001,
                                            min_samples_leaf=9,
                                            min_samples_split=3,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=1,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=8,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.5)),
                ('0',
                 ExtraTreesClassifier(max_features=0.8500000000000001,
                                      min_samples_leaf=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=3,
                                        min_samples_leaf=20,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Binarizer(threshold=0.15000000000000002)),
                ('1', SelectPercentile(percentile=34)),
                ('0',
                 RandomForestClassifier(max_features=0.2, min_samples_leaf=13,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=10, max_features=0.1,
                                            min_samples_leaf=10,
                                            min_samples_split=11,
                                            subsample=0.3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')), ('1', Binarizer(threshold=0.65)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=2,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=3,
                                        min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 FeatureAgglomeration(affinity='precomputed',
                                      linkage='complete')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01,
                                            max_features=0.3,
                                            min_samples_leaf=19,
                                            min_samples_split=19,
                                            subsample=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 Nystroem(gamma=0.5, kernel='additive_chi2', n_components=9)),
                ('1', RobustScaler()),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=7,
                                        min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=56)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.45, min_samples_leaf=4,
                                      min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.2)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=10,
                                        min_samples_split=7))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.1)),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', KNeighborsClassifier(n_neighbors=15, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()), ('0', LogisticRegression(C=0.01))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.6500000000000001)),
                ('0',
                 KNeighborsClassifier(n_neighbors=50, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=12,
                                      min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.01, max_depth=9,
                                            max_features=0.55,
                                            min_samples_leaf=16,
                                            min_samples_split=19,
                                            subsample=0.05))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', RBFSampler(gamma=0.0)),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=1, min_samples_leaf=17,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 DecisionTreeClassifier(max_depth=9, min_samples_leaf=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.3)),
                ('0',
                 GradientBoostingClassifier(max_depth=2, max_features=1.0,
                                            min_samples_leaf=14,
                                            min_samples_split=3,
                                            subsample=0.7500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.25, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=4,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.016)),
                ('0', MultinomialNB(alpha=100.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.1)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6000000000000001,
                                      min_samples_leaf=6,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0',
                 ExtraTreesClassifier(max_features=0.6000000000000001,
                                      min_samples_leaf=10,
                                      min_samples_split=18))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.9500000000000001, kernel='polynomial',
                          n_components=5)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.25, min_samples_leaf=18,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0', KNeighborsClassifier(n_neighbors=20, p=1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=4,
                                            max_features=0.2,
                                            min_samples_leaf=19,
                                            min_samples_split=3,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.6000000000000001, whiten='unit-variance')),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.6500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('3', RobustScaler()), ('2', SelectPercentile(percentile=13)),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.75)),
                ('0',
                 KNeighborsClassifier(n_neighbors=37, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectFwe(alpha=0.027)),
                ('1', SelectPercentile(percentile=44)),
                ('0',
                 KNeighborsClassifier(n_neighbors=47, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.8500000000000001,
                                        min_samples_leaf=6,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=1,
                                        min_samples_split=6))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RBFSampler(gamma=0.6000000000000001)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.55, min_samples_leaf=2,
                                        min_samples_split=19))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.4,
                                      min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.25,
                                        min_samples_leaf=17,
                                        min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.8)),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.5, max_depth=2,
                                            max_features=0.1,
                                            min_samples_leaf=20,
                                            min_samples_split=13,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', MultinomialNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', SelectPercentile(percentile=58)),
                ('1', RBFSampler(gamma=0.9)),
                ('0', LogisticRegression(C=15.0))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.6000000000000001,
                                        min_samples_leaf=11,
                                        min_samples_split=4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=8, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(max_features=0.45, min_samples_leaf=9,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 GradientBoostingClassifier(max_features=0.15000000000000002,
                                            min_samples_split=16,
                                            subsample=0.5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MaxAbsScaler()),
                ('0',
                 RandomForestClassifier(criterion='entropy',
                                        max_features=0.15000000000000002,
                                        min_samples_leaf=18,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.042)),
                ('0',
                 KNeighborsClassifier(n_neighbors=18, weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.7500000000000001,
                                        min_samples_leaf=7,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.15000000000000002,
                                      min_samples_leaf=20,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', StandardScaler()), ('1', RobustScaler()),
                ('0', BernoulliNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration()),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.7500000000000001,
                                      min_samples_leaf=5,
                                      min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.05, kernel='additive_chi2', n_components=1)),
                ('0', MultinomialNB(alpha=0.001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2', MaxAbsScaler()),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 DecisionTreeClassifier(max_depth=8, min_samples_split=17))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', MinMaxScaler()),
                ('0',
                 DecisionTreeClassifier(criterion='entropy', max_depth=9,
                                        min_samples_leaf=3,
                                        min_samples_split=16))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1',
                 Nystroem(gamma=0.2, kernel='additive_chi2', n_components=1)),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.35000000000000003,
                                      min_samples_leaf=13,
                                      min_samples_split=15))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(max_features=0.1, min_samples_leaf=6,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete')),
                ('1', MaxAbsScaler()),
                ('0', MultinomialNB(alpha=10.0, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 GradientBoostingClassifier(max_depth=8,
                                            max_features=0.8500000000000001,
                                            min_samples_leaf=8,
                                            subsample=0.45))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=7, svd_solver='randomized')),
                ('0',
                 RandomForestClassifier(bootstrap=False, max_features=0.5,
                                        min_samples_leaf=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.049)),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.35000000000000003,
                                        min_samples_split=20))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', StandardScaler()),
                ('0',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(affinity='l2', linkage='average')),
                ('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features=0.9000000000000001,
                                        min_samples_leaf=12,
                                        min_samples_split=5))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', RobustScaler()),
                ('0', MultinomialNB(alpha=0.01, fit_prior=False))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', BernoulliNB(alpha=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      max_features=0.8500000000000001,
                                      min_samples_split=3))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=3, svd_solver='randomized')),
                ('0', KNeighborsClassifier(n_neighbors=41))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(criterion='entropy',
                                      max_features=0.8500000000000001,
                                      min_samples_leaf=2,
                                      min_samples_split=8))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 RandomForestClassifier(criterion='entropy', max_features=0.1,
                                        min_samples_leaf=4,
                                        min_samples_split=13))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0', LogisticRegression(C=0.1))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=80)),
                ('0',
                 DecisionTreeClassifier(max_depth=6, min_samples_leaf=3,
                                        min_samples_split=12))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PCA(iterated_power=2, svd_solver='randomized')),
                ('0',
                 GradientBoostingClassifier(learning_rate=0.001, max_depth=9,
                                            max_features=0.1,
                                            min_samples_leaf=3,
                                            min_samples_split=3,
                                            subsample=0.4))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=86)),
                ('0',
                 ExtraTreesClassifier(criterion='entropy', max_features=0.8,
                                      min_samples_leaf=12,
                                      min_samples_split=14))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, max_features=0.45,
                                      min_samples_leaf=11,
                                      min_samples_split=11))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', FastICA(tol=0.55, whiten='unit-variance')),
                ('0',
                 RandomForestClassifier(max_features=0.3, min_samples_leaf=19,
                                        min_samples_split=9))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold(threshold=0.35000000000000003)),
                ('0', GaussianNB())])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('0',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features=0.55, min_samples_leaf=5,
                                      min_samples_split=10))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', SelectFwe(alpha=0.025)),
                ('0',
                 GradientBoostingClassifier(max_depth=4,
                                            max_features=0.35000000000000003,
                                            min_samples_split=4,
                                            subsample=0.9500000000000001))])","Pipeline(steps=[('imputation', SimpleImputer(strategy='median')),
                ('1', PolynomialFeatures(include_bias=False)),
                ('0',
                 ExtraTreesClassifier(max_features=0.9000000000000001,
                                      min_samples_leaf=19,
                                      min_samples_split=10))])"
43098,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
43255,0.86,0.852,0.86,0.836,0.864,0.848,0.908,0.74,0.892,0.808,0.5,0.692,0.86,0.848,0.652,0.508,0.9,0.856,0.852,0.86,0.856,0.84,0.832,0.524,0.468,0.652,0.744,0.9,0.876,0.852,0.712,0.588,0.872,0.524,0.876,0.86,0.86,0.484,0.86,0,0.48,0.864,0.86,0.524,0.872,0.86,0.86,0.52,0.852,0.0,0.86,0.812,0.528,0.524,0.524,0.868,0.868,0.78,0.62,0.624,0.856,0.804,0.836,0.652,0.688,0.492,0.884,0.86,0.52,0.864,0.856,0.896,0.464,0.86,0.496,0.828,0.864,0.52,0.652,0,0.756,0.7,0.836,0.512,0.88,0.664,0.868,0.864,0.864,0.668,0.52,0.788,0.848,0.86,0.808,0.86,0.872,0.888,0.744,0.588,0.868,0.572,0.876,0.652,0.544,0.584,0.88,0.86,0.544,0.828,0,0.84,0.884,0.54,0.888,0.884,0.86,0.768,0.856,0.868,0.72,0.652,0.532,0.52,0.832,0.852,0.568,0.748,0.468,0.888,0.884,0.852,0.664,0.524,0.0,0.496,0.888,0.864,0.872,0.772,0.9,0.816,0.76,0.848,0.8,0.788,0.696,0.872,0.836,0.864
43595,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
43607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
43723,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
43891,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0

43893,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
43894,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
43895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
43896,0.8614130434782609,0.8288043478260869,0.8396739130434783,0.8559782608695652,0.5,0.8614130434782609,0.7336956521739131,0.8641304347826086,0.8641304347826086,0.845108695652174,0.8396739130434783,0.8396739130434783,0.8559782608695652,0.0,0.8396739130434783,0.8260869565217391,0.8885869565217391,0.842391304347826,0.8396739130434783,0.8532608695652174,0.8396739130434783,0.8505434782608695,0.8532608695652174,0.845108695652174,0.8396739130434783,0.8396739130434783,0.8396739130434783,0.8396739130434783,0.8695652173913043,0.8396739130434783,0.8396739130434783,0.8505434782608695,0.8614130434782609,0.845108695652174,0.8586956521739131,0.8396739130434783,0.8586956521739131,0.8396739130434783,0.8668478260869565,0,0.7744565217391305,0.8532608695652174,0.8396739130434783,0.842391304347826,0.8614130434782609,0.8614130434782609,0.8396739130434783,0.8396739130434783,0.8315217391304348,0.842391304347826,0.0,0.875,0.8179347826086957,0.8206521739130435,0.8396739130434783,0.8505434782608695,0.8614130434782609,0.8396739130434783,0.8396739130434783,0.842391304347826,0.8342391304347826,0.8532608695652174,0.8505434782608695,0.8396739130434783,0.8532608695652174,0.6847826086956522,0.8586956521739131,0.8532608695652174,0.8396739130434783,0.8614130434782609,0.842391304347826,0.8668478260869565,0.8396739130434783,0.8315217391304348,0.842391304347826,0.8804347826086957,0.842391304347826,0.8396739130434783,0.8396739130434783,0,0.8396739130434783,0.8396739130434783,0.8586956521739131,0.8016304347826086,0.5,0.8396739130434783,0.8586956521739131,0.8396739130434783,0.8532608695652174,0.8396739130434783,0.8396739130434783,0.8342391304347826,0.8233695652173914,0.8586956521739131,0.8478260869565217,0.6168478260869565,0.8668478260869565,0.845108695652174,0.8396739130434783,0.8369565217391305,0.8668478260869565,0.5842391304347826,0.8641304347826086,0.8559782608695652,0.8396739130434783,0.8478260869565217,0.8586956521739131,0.8396739130434783,0.8342391304347826,0.8586956521739131,0,0.8288043478260869,0.5,0.8342391304347826,0.8668478260869565,0.8614130434782609,0.8804347826086957,0.842391304347826,0.8369565217391305,0.842391304347826,0.8396739130434783,0.6820652173913043,0.8396739130434783,0.8396739130434783,0.8179347826086957,0.8179347826086957,0.8396739130434783,0.8559782608695652,0.5489130434782609,0.8695652173913043,0.8668478260869565,0.842391304347826,0.842391304347826,0.8369565217391305,0.0,0.8152173913043478,0.8478260869565217,0.8396739130434783,0.8614130434782609,0.8559782608695652,0.842391304347826,0.8288043478260869,0.8396739130434783,0.8614130434782609,0.8532608695652174,0.8369565217391305,0.7934782608695652,0.8641304347826086,0.8505434782608695,0.8614130434782609
43897,1.0,1.0,0.845108695652174,0.9918478260869565,0.391304347826087,1.0,0.782608695652174,1.0,1.0,0.8940217391304348,0.845108695652174,0.845108695652174,1.0,1.0,1.0,0.8152173913043478,0.9864130434782609,0.8342391304347826,0.845108695652174,1.0,0.845108695652174,1.0,1.0,0.845108695652174,0.845108695652174,1.0,0.845108695652174,0.9809782608695652,1.0,0.845108695652174,0.845108695652174,0.9347826086956522,1.0,0.845108695652174,0.9945652173913043,0.9864130434782609,1.0,0.845108695652174,1.0,0,0.8125,1.0,0.9782608695652174,0.8288043478260869,1.0,1.0,0.9782608695652174,0.845108695652174,0.8478260869565217,0.0,1.0,1.0,0.8315217391304348,0.842391304347826,0.845108695652174,0.842391304347826,1.0,0.845108695652174,0.845108695652174,0.845108695652174,0.9836956521739131,0.9972826086956522,1.0,1.0,0.9211956521739131,0.453804347826087,0.9864130434782609,1.0,0.845108695652174,1.0,1.0,0.8913043478260869,0.845108695652174,0.8532608695652174,0.845108695652174,1.0,0.845108695652174,0.845108695652174,1.0,0,0.845108695652174,0.845108695652174,0.9918478260869565,0.842391304347826,0.391304347826087,0.845108695652174,0.907608695652174,0.845108695652174,1.0,0.845108695652174,0.845108695652174,1.0,0.9130434782608695,1.0,0.907608695652174,0.845108695652174,1.0,0.9891304347826086,0.845108695652174,0.845108695652174,1.0,0.8478260869565217,0.9918478260869565,1.0,0.845108695652174,0.0,1.0,0.9782608695652174,0.842391304347826,0.9836956521739131,0,1.0,0.391304347826087,0.842391304347826,1.0,0.9836956521739131,1.0,0.9972826086956522,1.0,1.0,0.845108695652174,0.6983695652173914,0.845108695652174,0.845108695652174,1.0,1.0,0.845108695652174,0.9836956521739131,0.4945652173913043,1.0,0.9836956521739131,1.0,0.8505434782608695,0.845108695652174,0.0,0.845108695652174,0.9619565217391305,0.845108695652174,1.0,0.9918478260869565,0.9809782608695652,1.0,0.845108695652174,1.0,0.9864130434782609,0.8885869565217391,0.9945652173913043,1.0,1.0,1.0
43905,0.845108695652174,0.8016304347826086,0.845108695652174,0.845108695652174,0.3967391304347826,0.845108695652174,0.8315217391304348,0.845108695652174,0.842391304347826,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.0,0.845108695652174,0.8152173913043478,0.845108695652174,0.8342391304347826,0.845108695652174,0.845108695652174,0.845108695652174,0.0,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.842391304347826,0.845108695652174,0.845108695652174,0.8342391304347826,0.8206521739130435,0.845108695652174,0.845108695652174,0,0.8016304347826086,0.0,0.845108695652174,0.8396739130434783,0.845108695652174,0.7907608695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.0,0.0,0.8342391304347826,0.8315217391304348,0.8396739130434783,0.845108695652174,0.842391304347826,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.7989130434782609,0.845108695652174,0.845108695652174,0.845108695652174,0.8315217391304348,0.453804347826087,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.8342391304347826,0.845108695652174,0.845108695652174,0.845108695652174,0.8288043478260869,0.845108695652174,0.845108695652174,0.845108695652174,0,0.845108695652174,0.845108695652174,0.845108695652174,0.8179347826086957,0.3967391304347826,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.8315217391304348,0.7907608695652174,0.8478260869565217,0.845108695652174,0.0,0.842391304347826,0.845108695652174,0.845108695652174,0.845108695652174,0.8233695652173914,0.7391304347826086,0.845108695652174,0.8396739130434783,0.845108695652174,0.0,0.845108695652174,0.845108695652174,0.8396739130434783,0.845108695652174,0,0.8369565217391305,0.3967391304347826,0.8369565217391305,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.0,0.8478260869565217,0.845108695652174,0.7146739130434783,0.845108695652174,0.845108695652174,0.8125,0.8179347826086957,0.845108695652174,0.845108695652174,0.4945652173913043,0.8342391304347826,0.8396739130434783,0.0,0.845108695652174,0.845108695652174,0.0,0.845108695652174,0.842391304347826,0.845108695652174,0.842391304347826,0.845108695652174,0.845108695652174,0.8152173913043478,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.845108695652174,0.0,0.845108695652174
43921,0.7939814814814815,0.9143518518518519,0.7986111111111112,0.9305555555555556,0.8032407407407407,0.9166666666666666,0.8796296296296297,0.9097222222222222,0.9675925925925926,0.8819444444444444,0.8217592592592593,0.0,0.8796296296296297,0.9166666666666666,0.7013888888888888,0.9097222222222222,0.9120370370370371,0.9236111111111112,0.0,0.8842592592592593,0.8402777777777778,0.9004629629629629,0.9097222222222222,0.8171296296296297,0.7453703703703703,0.7013888888888888,0.7662037037037037,0.9097222222222222,0.8888888888888888,0.7013888888888888,0.7013888888888888,0.7847222222222222,0.9560185185185185,0.8449074074074074,0.9120370370370371,0.7662037037037037,0.6666666666666666,0.7013888888888888,0.8055555555555556,0,0.6504629629629629,0.9328703703703703,0.7013888888888888,0.9652777777777778,0.9259259259259259,0.5671296296296297,0.7013888888888888,0.7013888888888888,0.7453703703703703,0.875,0.9305555555555556,0.9490740740740741,0.7013888888888888,0.8865740740740741,0.7175925925925926,0.9120370370370371,0.9537037037037037,0.7615740740740741,0.7013888888888888,0.8657407407407407,0.8356481481481481,0.8865740740740741,0.9050925925925926,0.7013888888888888,0.8495370370370371,0.8125,0.9004629629629629,0.8171296296296297,0.7013888888888888,0.9120370370370371,0.8171296296296297,0.8935185185185185,0.7523148148148148,0.7986111111111112,0.8009259259259259,0.9537037037037037,0.8888888888888888,0.7013888888888888,0.7013888888888888,0,0.7199074074074074,0.7013888888888888,0.9004629629629629,0.8356481481481481,0.8379629629629629,0.8842592592592593,0.8333333333333334,0.0,0.8981481481481481,0.7013888888888888,0.7013888888888888,0.8680555555555556,0.8726851851851852,0.0,0.8657407407407407,0.7222222222222222,0.9560185185185185,0.8541666666666666,0.7013888888888888,0.8703703703703703,0.9930555555555556,0.8125,0.9560185185185185,0.7662037037037037,0.7013888888888888,0.8009259259259259,0.9560185185185185,0.7013888888888888,0.7546296296296297,0.9490740740740741,0,0.0,0.8356481481481481,0.8819444444444444,0.9143518518518519,0.8819444444444444,0.9328703703703703,0.8263888888888888,0.9328703703703703,0.9560185185185185,0.8194444444444444,0.6504629629629629,0.7013888888888888,0.7013888888888888,0.8865740740740741,0.9351851851851852,0.7013888888888888,0.8425925925925926,0.4375,0.9745370370370371,0.8865740740740741,0.9282407407407407,0.8796296296296297,0.7013888888888888,0.8032407407407407,0.8541666666666666,0.9652777777777778,0.8333333333333334,0.9675925925925926,0.8495370370370371,0.8356481481481481,0.8518518518518519,0.7013888888888888,0.9259259259259259,0.8981481481481481,0.8425925925925926,0.0,0.9490740740740741,0.9375,0.8842592592592593
43922,0.9965534219596258,0.9980305268340719,0.9965534219596258,0.9980305268340719,0.930576070901034,0.9980305268340719,0.9980305268340719,1.0,1.0,0.9940915805022157,0.9965534219596258,0.810930576070901,0.9980305268340719,0.0,0.8946331856228459,0.9985228951255539,1.0,1.0,0.8257016248153619,0.9980305268340719,0.9980305268340719,1.0,0.9960610536681438,0.9975381585425899,0.6730674544559331,0.8946331856228459,0.7671097981290005,0.999015263417036,0.9965534219596258,0.0,0.9290989660265879,0.9896602658788775,0.0,0.9975381585425899,1.0,0.9463318562284588,1.0,0.8946331856228459,0.9965534219596258,0,0.9335302806499262,1.0,0.8207779419005417,1.0,0.9980305268340719,1.0,0.8207779419005417,0.9891678975873953,0.9960610536681438,0.9965534219596258,0.0,1.0,0.9054652880354506,1.0,0.723781388478582,0.9985228951255539,0.9985228951255539,0.9970457902511078,0.8478581979320532,0.9980305268340719,0.9940915805022157,0.9980305268340719,0.9980305268340719,0.8946331856228459,0.947316592811423,0.9497784342688331,0.0,0.9970457902511078,0.7021171836533727,0.9980305268340719,0.9935992122107337,1.0,0.7626784835056623,0.967011324470704,0.9965534219596258,1.0,0.9980305268340719,0.517971442639094,0.8946331856228459,0,0.9857213195470211,0.811422944362383,1.0,0.0,0.9921221073362876,1.0,0.9985228951255539,0.8257016248153619,0.9980305268340719,0.9773510585918267,0.517971442639094,0.9960610536681438,0.9985228951255539,0.8257016248153619,0.9955686853766618,0.9148202855736091,1.0,1.0,0.8355489906450024,0.9980305268340719,1.0,0.8936484490398818,0.9980305268340719,0.9807976366322009,0.6637124569177745,1.0,0.9980305268340719,0.8207779419005417,0.0,0.999015263417036,0,0.8257016248153619,0.948301329394387,0.6666666666666666,0.0,1.0,0.9985228951255539,0.9965534219596258,0.9985228951255539,0.9980305268340719,0.9965534219596258,0.9428852781880847,0.9030034465780403,0.517971442639094,1.0,0.9985228951255539,0.8631216149679961,0.9980305268340719,0.5430822255046776,1.0,0.0,1.0,0.9985228951255539,0.9000492368291482,0.0,0.947316592811423,0.9985228951255539,0.9955686853766618,0.9985228951255539,1.0,0.9960610536681438,1.0,0.9985228951255539,0.9980305268340719,0.9980305268340719,0.9926144756277696,0.7744953225012309,0.9980305268340719,1.0,0.0
43924,0.717391304347826,0.657608695652174,0.46195652173913043,0.7010869565217391,0.0,0.6521739130434783,0.5163043478260869,0.6304347826086957,0.657608695652174,0.5597826086956522,0.3695652173913043,0.4673913043478261,0.7119565217391305,0.6630434782608695,0.375,0.3804347826086957,0.6630434782608695,0.5543478260869565,0.5380434782608695,0.7282608695652174,0.5054347826086957,0.6847826086956522,0.7065217391304348,0.3967391304347826,0.27717391304347827,0.42391304347826086,0.44021739130434784,0.41847826086956524,0.6956521739130435,0.5054347826086957,0.28804347826086957,0.42391304347826086,0.6739130434782609,0.43478260869565216,0.5815217391304348,0.41304347826086957,0.6630434782608695,0.28804347826086957,0.6684782608695652,0,0.358695652173913,0.6793478260869565,0.42391304347826086,0.4076086956521739,0.717391304347826,0.7010869565217391,0.42391304347826086,0.358695652173913,0.5054347826086957,0.4076086956521739,0.6630434782608695,0.6358695652173914,0.3967391304347826,0.483695652173913,0.266304347826087,0.45652173913043476,0.7228260869565217,0.532608695652174,0.532608695652174,0.5434782608695652,0.43478260869565216,0.7065217391304348,0.7010869565217391,0.375,0.5434782608695652,0.34782608695652173,0.5597826086956522,0.6793478260869565,0.28804347826086957,0.7010869565217391,0.6793478260869565,0.6630434782608695,0.28804347826086957,0.532608695652174,0.358695652173913,0.6739130434782609,0.4891304347826087,0.28804347826086957,0.375,0,0.41304347826086957,0.0,0.7119565217391305,0.24456521739130435,0.0,0.2826086956521739,0.5543478260869565,0.5054347826086957,0.6956521739130435,0.28804347826086957,0.28804347826086957,0.6684782608695652,0.5706521739130435,0.7065217391304348,0.5652173913043478,0.0,0.7010869565217391,0.5489130434782609,0.40217391304347827,0.5434782608695652,0.6684782608695652,0.5054347826086957,0.7228260869565217,0.5815217391304348,0.2554347826086957,0.532608695652174,0.7445652173913043,0.42391304347826086,0.22826086956521738,0.7282608695652174,0,0.7010869565217391,0.0,0.22826086956521738,0.6630434782608695,0.6032608695652174,0.7010869565217391,0.6032608695652174,0.532608695652174,0.6902173913043478,0.5217391304347826,0.44565217391304346,0.45108695652173914,0.0,0.5217391304347826,0.5760869565217391,0.0,0.6086956521739131,0.0,0.7010869565217391,0.5543478260869565,0.6793478260869565,0.5815217391304348,0.45108695652173914,0.0,0.4076086956521739,0.7119565217391305,0.44021739130434784,0.7010869565217391,0.6467391304347826,0.40217391304347827,0.625,0.3967391304347826,0.7119565217391305,0.6847826086956522,0.5163043478260869,0.5597826086956522,0.7336956521739131,0.6793478260869565,0.6902173913043478
43925,0.7903970452446907,0.7580794090489381,0.6251154201292706,0.7349953831948292,0.3204062788550323,0.7839335180055401,0.5392428439519852,0.7876269621421976,0.7433056325023084,0.6749769159741459,0.5364727608494921,0.5253924284395198,0.7294552169898431,0.7811634349030471,0.5964912280701754,0.4995383194829178,0.5761772853185596,0.7026777469990766,0.6823638042474608,0.7183748845798708,0.6325023084025854,0.61865189289012,0.7294552169898431,0.5401662049861495,0.5106186518928901,0.58264081255771,0.6491228070175439,0.5392428439519852,0.7534626038781164,0.5106186518928901,0.5106186518928901,0.6168051708217913,0.827331486611265,0.44967682363804246,0.7996306555863343,0.605724838411819,0.43028624192059095,0.5106186518928901,0.7248384118190212,0,0.3831948291782087,0.7719298245614035,0.541089566020314,0.5337026777469991,0.7903970452446907,0.6408125577100646,0.5392428439519852,0.5106186518928901,0.615881809787627,0.5106186518928901,0.8162511542012927,0.7793167128347184,0.6592797783933518,0.5687903970452447,0.4967682363804247,0.6574330563250231,0.8180978762696214,0.6694367497691598,0.7063711911357341,0.6629732225300092,0.7313019390581718,0.716528162511542,0.7266851338873499,0.5964912280701754,0.6435826408125577,0.24838411819021236,0.7848568790397045,0.7691597414589104,0.31117266851338876,0.7313019390581718,0.667590027700831,0.6398891966759003,0.5096952908587258,0.569713758079409,0.5318559556786704,0.7636195752539243,0.6759002770083102,0.5143120960295475,0.5964912280701754,0,0.592797783933518,0.5318559556786704,0.7700831024930748,0.0,0.3231763619575254,0.47368421052631576,0.6038781163434903,0.6740535549399815,0.7229916897506925,0.6204986149584487,0.5106186518928901,0.7488457987072945,0.6177285318559557,0.7460757156048015,0.7072945521698984,0.44783010156971376,0.7968605724838412,0.7645429362880887,0.5106186518928901,0.6712834718374885,0.8051708217913204,0.564173591874423,0.8097876269621422,0.5724838411819021,0.492151431209603,0.6583564173591875,0.8208679593721145,0.541089566020314,0.0,0.7839335180055401,0,0.7765466297322253,0.3231763619575254,0.492151431209603,0.8005540166204986,0.7848568790397045,0.7146814404432132,0.6472760849492152,0.6574330563250231,0.8125577100646353,0.5106186518928901,0.4773776546629732,0.5530932594644506,0.5106186518928901,0.7608494921514312,0.7682363804247461,0.5106186518928901,0.716528162511542,0.13573407202216067,0.8190212373037857,0.7931671283471837,0.7774699907663897,0.7636195752539243,0.6611265004616805,0.0,0.5429362880886427,0.7248384118190212,0.6251154201292706,0.8374884579870729,0.7276084949215144,0.5595567867036011,0.7239150507848569,0.5106186518928901,0.7793167128347184,0.7128347183748845,0.6962142197599261,0.5715604801477377,0.7793167128347184,0.7719298245614035,0.7848568790397045
43941,0.9955555555555555,0.9955555555555555,0.96,0.9866666666666667,0.9911111111111112,0.9955555555555555,0.9911111111111112,1.0,1.0,0.9111111111111111,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9822222222222222,0.9688888888888889,0.9911111111111112,0.96,0.9955555555555555,0.9911111111111112,0.8888888888888888,0.6444444444444445,0.9955555555555555,0.6088888888888889,1.0,0.9911111111111112,0.9822222222222222,0.8044444444444444,0.8488888888888889,0.9911111111111112,0.8666666666666667,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9911111111111112,0,0.9422222222222222,1.0,0.9911111111111112,1.0,0.9955555555555555,0.7022222222222222,0.9911111111111112,0.9955555555555555,0.8177777777777778,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.8355555555555556,0.6,0.9733333333333334,1.0,0.8888888888888888,0.8177777777777778,0.8044444444444444,0.9911111111111112,0.9911111111111112,0.9777777777777777,0.9955555555555555,0.9244444444444444,0.9777777777777777,0.9911111111111112,0.9955555555555555,0.5422222222222223,0.9911111111111112,0.9955555555555555,1.0,0.7111111111111111,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9777777777777777,0.9288888888888889,0.9955555555555555,0,0.9911111111111112,0.9688888888888889,0.9955555555555555,0.7555555555555555,0.9911111111111112,0.6311111111111111,0.8666666666666667,0.9688888888888889,0.9911111111111112,0.9777777777777777,0.5422222222222223,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9555555555555556,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.8177777777777778,0.8,1.0,0.9111111111111111,0.9955555555555555,0.9955555555555555,0.6622222222222223,1.0,0.9955555555555555,0.9911111111111112,0.6533333333333333,0.9955555555555555,0,0.9911111111111112,0.9911111111111112,0.6222222222222222,0.9955555555555555,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9155555555555556,0.8577777777777778,0.9866666666666667,0.5422222222222223,1.0,1.0,0.96,0.9955555555555555,0.0,1.0,0.9911111111111112,1.0,0.8622222222222222,0.9955555555555555,0.0,0.9733333333333334,1.0,0.96,1.0,1.0,0.9911111111111112,1.0,0.5422222222222223,0.9911111111111112,0.9866666666666667,0.9022222222222223,0.9955555555555555,0.9955555555555555,1.0,0.9911111111111112
43942,0.9955555555555555,0.9955555555555555,0.96,0.9911111111111112,0.9911111111111112,0.9955555555555555,0.9866666666666667,1.0,0.9955555555555555,0.92,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9822222222222222,0.9688888888888889,0.9777777777777777,0.96,0.9911111111111112,0.9911111111111112,0.8888888888888888,0.6844444444444444,0.9955555555555555,0.5866666666666667,1.0,0.9911111111111112,0.9911111111111112,0.5955555555555555,0.8533333333333334,0.9911111111111112,0.8666666666666667,0.9911111111111112,0.9911111111111112,1.0,0.9955555555555555,0.9911111111111112,0,0.9422222222222222,1.0,0.9911111111111112,1.0,0.9955555555555555,0.9955555555555555,0.9911111111111112,0.9955555555555555,0.8044444444444444,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.8355555555555556,0.5511111111111111,0.9733333333333334,1.0,0.8888888888888888,0.7955555555555556,0.8044444444444444,0.9911111111111112,0.9911111111111112,0.9822222222222222,0.9955555555555555,0.9288888888888889,0.9777777777777777,0.9911111111111112,0.9955555555555555,0.4577777777777778,0.9911111111111112,0.9955555555555555,1.0,0.7466666666666667,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9777777777777777,0.9288888888888889,0.9955555555555555,0,0.9911111111111112,0.9822222222222222,0.9955555555555555,0.7333333333333333,0.9911111111111112,0.72,0.8666666666666667,0.9688888888888889,0.9911111111111112,0.96,0.5422222222222223,0.9955555555555555,0.9955555555555555,0.9955555555555555,0.9511111111111111,0.9911111111111112,0.9911111111111112,0.9911111111111112,0.92,0.8,1.0,0.8488888888888889,0.9955555555555555,0.9955555555555555,0.6488888888888888,1.0,0.9955555555555555,0.9911111111111112,0.7244444444444444,0.9955555555555555,0,0.9911111111111112,0.9911111111111112,0.6311111111111111,0.9955555555555555,0.9911111111111112,0.9955555555555555,0.9955555555555555,0.9822222222222222,0.9955555555555555,0.9244444444444444,0.8577777777777778,0.9911111111111112,0.5422222222222223,1.0,1.0,0.9422222222222222,1.0,0.0,1.0,0.9911111111111112,1.0,0.8622222222222222,0.9955555555555555,0.0,0.9733333333333334,1.0,0.96,1.0,0.9955555555555555,0.9911111111111112,1.0,0.5422222222222223,0.9911111111111112,0.9911111111111112,0.88,0.9955555555555555,0.9911111111111112,1.0,0.9911111111111112
43946,0.6088328075709779,0.5588853838065194,0.535751840168244,0.620925341745531,0.0,0.6272344900105152,0.5599369085173501,0.6403785488958991,0.617770767613039,0.6046267087276551,0.5304942166140905,0.573080967402734,0.613564668769716,0.0,0.5494216614090431,0.5110410094637224,0.5541535226077813,0.5930599369085173,0.5683491062039958,0.6083070452155626,0.5483701366982124,0.5851735015772871,0.601472134595163,0.5236593059936908,0.49369085173501576,0.5494216614090431,0.5473186119873817,0.5478443743427971,0.6172450052576236,0.6219768664563617,0.5,0.5862250262881178,0.674553101997897,0.5247108307045215,0.6288117770767613,0.5667718191377498,0.6146161934805467,0.5320715036803365,0.5914826498422713,0,0.535751840168244,0.6203995793901157,0.5415352260778128,0.5289169295478444,0.619348054679285,0.5825446898002103,0.5415352260778128,0.5262881177707676,0.5473186119873817,0.5304942166140905,0.0,0.6062039957939012,0.6172450052576236,0.5620399579390115,0.49369085173501576,0.5488958990536278,0.6519453207150369,0.5825446898002103,0.5977917981072555,0.5536277602523659,0.5841219768664564,0.5993690851735016,0.6025236593059937,0.5494216614090431,0.5657202944269191,0.535751840168244,0.6130389064143007,0.5888538380651945,0.5,0.619348054679285,0.5846477392218717,0.5725552050473186,0.4968454258675079,0.5630914826498423,0.5341745531019979,0.5951629863301787,0.57465825446898,0.5026288117770767,0.5494216614090431,0,0.5694006309148265,0.0,0.6019978969505784,0.0,0.0,0.4831756046267087,0.5636172450052577,0.556782334384858,0.619348054679285,0.5767613038906414,0.5,0.5772870662460567,0.5657202944269191,0.5946372239747634,0.6214511041009464,0.5262881177707676,0.6419558359621451,0.617770767613039,0.49263932702418506,0.5651945320715037,0.6130389064143007,0.5347003154574133,0.6445846477392219,0.5814931650893796,0.5199789695057834,0.5294426919032598,0.6272344900105152,0.5415352260778128,0.0,0.6456361724500526,0,0.5830704521556257,0.0,0.5057833859095688,0.0,0.6098843322818086,0.5930599369085173,0.5983175604626709,0.6345951629863302,0.6225026288117771,0.582018927444795,0.5531019978969506,0.5488958990536278,0.0,0.5704521556256572,0.583596214511041,0.0,0.6225026288117771,0.5131440588853838,0.6330178759200841,0.6098843322818086,0.6167192429022083,0.6041009463722398,0.5425867507886435,0.0,0.535751840168244,0.6256572029442692,0.544689800210305,0.6756046267087277,0.613564668769716,0.5415352260778128,0.5609884332281808,0.583596214511041,0.6130389064143007,0.61198738170347,0.6025236593059937,0.5063091482649842,0.637223974763407,0.5883280757097792,0.637223974763407
