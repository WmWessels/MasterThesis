{
    "0": [
        "LinearSVR(FastICA(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FastICA.whiten='unit-variance', FastICA.tol=0.1), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=5.0, LinearSVR.tol=0.0001, LinearSVR.epsilon=0.0001)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.001, LinearSVR.epsilon=0.0001)",
        "LinearSVR(VarianceThreshold(data, VarianceThreshold.threshold=0.5), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.1, LinearSVR.epsilon=0.001)",
        "AdaBoostRegressor(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.7000000000000001), AdaBoostRegressor.loss='exponential', AdaBoostRegressor.learning_rate=0.1, AdaBoostRegressor.n_estimators=100)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='epsilon_insensitive', LinearSVR.C=15.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "LinearSVR(Nystroem(Binarizer(data, Binarizer.threshold=0.55), Nystroem.n_components=5, Nystroem.gamma=0.25, Nystroem.kernel='polynomial'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "ElasticNetCV(FeatureAgglomeration(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FeatureAgglomeration.linkage='complete', FeatureAgglomeration.affinity='euclidean'), ElasticNetCV.l1_ratio=0.45, ElasticNetCV.tol=0.0001)",
        "ElasticNetCV(FeatureAgglomeration(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FeatureAgglomeration.linkage='complete', FeatureAgglomeration.affinity='l2'), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.001)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=20, DecisionTreeRegressor.max_depth=2, min_samples_leaf=6)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=14, DecisionTreeRegressor.max_depth=2, min_samples_leaf=6)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=6, DecisionTreeRegressor.max_depth=2, min_samples_leaf=5)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=8, DecisionTreeRegressor.max_depth=2, min_samples_leaf=5)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=3, DecisionTreeRegressor.max_depth=2, min_samples_leaf=4)",
        "LinearSVR(Nystroem(data, Nystroem.n_components=4, Nystroem.gamma=0.0, Nystroem.kernel='linear'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=20.0, LinearSVR.tol=0.0001, LinearSVR.epsilon=0.0001)"
    ],
    "1": [
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.001, LinearSVR.epsilon=0.0001)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='epsilon_insensitive', LinearSVR.C=15.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "AdaBoostRegressor(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.7000000000000001), AdaBoostRegressor.loss='exponential', AdaBoostRegressor.learning_rate=0.1, AdaBoostRegressor.n_estimators=100)",
        "LinearSVR(FastICA(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FastICA.whiten='unit-variance', FastICA.tol=0.1), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=5.0, LinearSVR.tol=0.0001, LinearSVR.epsilon=0.0001)",
        "LinearSVR(Nystroem(Binarizer(data, Binarizer.threshold=0.55), Nystroem.n_components=5, Nystroem.gamma=0.25, Nystroem.kernel='polynomial'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=3, DecisionTreeRegressor.max_depth=2, min_samples_leaf=4)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=14, DecisionTreeRegressor.max_depth=2, min_samples_leaf=6)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=20, DecisionTreeRegressor.max_depth=2, min_samples_leaf=6)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=6, DecisionTreeRegressor.max_depth=2, min_samples_leaf=5)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=8, DecisionTreeRegressor.max_depth=2, min_samples_leaf=5)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=20.0, LinearSVR.tol=0.0001, LinearSVR.epsilon=0.0001)",
        "LinearSVR(Nystroem(data, Nystroem.n_components=4, Nystroem.gamma=0.0, Nystroem.kernel='linear'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "LinearSVR(VarianceThreshold(data, VarianceThreshold.threshold=0.5), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.1, LinearSVR.epsilon=0.001)",
        "LinearSVR(Nystroem(data, Nystroem.n_components=5, Nystroem.gamma=0.9, Nystroem.kernel='linear'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.001, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "ElasticNetCV(FeatureAgglomeration(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FeatureAgglomeration.linkage='complete', FeatureAgglomeration.affinity='l2'), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.001)"
    ],
    "2": [
        "LinearSVR(FastICA(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FastICA.whiten='unit-variance', FastICA.tol=0.1), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=5.0, LinearSVR.tol=0.0001, LinearSVR.epsilon=0.0001)",
        "LinearSVR(VarianceThreshold(data, VarianceThreshold.threshold=0.5), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.1, LinearSVR.epsilon=0.001)",
        "LinearSVR(Nystroem(Binarizer(data, Binarizer.threshold=0.55), Nystroem.n_components=5, Nystroem.gamma=0.25, Nystroem.kernel='polynomial'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "LinearSVR(Nystroem(data, Nystroem.n_components=5, Nystroem.gamma=0.9, Nystroem.kernel='linear'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.001, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "LinearSVR(SelectFwe(Nystroem(data, Nystroem.n_components=9, Nystroem.gamma=0.4, Nystroem.kernel='linear'), SelectFwe.score_func=f_regression, SelectFwe.alpha=0.017), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "ElasticNetCV(FeatureAgglomeration(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FeatureAgglomeration.linkage='complete', FeatureAgglomeration.affinity='euclidean'), ElasticNetCV.l1_ratio=0.45, ElasticNetCV.tol=0.0001)",
        "ElasticNetCV(FeatureAgglomeration(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FeatureAgglomeration.linkage='complete', FeatureAgglomeration.affinity='l2'), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.001)",
        "LinearSVR(SelectFwe(Nystroem(data, Nystroem.n_components=9, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear'), SelectFwe.score_func=f_regression, SelectFwe.alpha=0.01), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "ElasticNetCV(FeatureAgglomeration(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FeatureAgglomeration.linkage='average', FeatureAgglomeration.affinity='euclidean'), ElasticNetCV.l1_ratio=0.45, ElasticNetCV.tol=0.0001)",
        "LinearSVR(Nystroem(data, Nystroem.n_components=4, Nystroem.gamma=0.0, Nystroem.kernel='linear'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "KNeighborsRegressor(RobustScaler(PCA(data, PCA.svd_solver='randomized', PCA.iterated_power=6), KNeighborsRegressor.n_neighbors=6, KNeighborsRegressor.weights='uniform', KNeighborsRegressor.p=1)",
        "KNeighborsRegressor(RobustScaler(PCA(data, PCA.svd_solver='randomized', PCA.iterated_power=2), KNeighborsRegressor.n_neighbors=6, KNeighborsRegressor.weights='uniform', KNeighborsRegressor.p=1)",
        "ElasticNetCV(PolynomialFeatures(FeatureAgglomeration(data, FeatureAgglomeration.linkage='complete', FeatureAgglomeration.affinity='l1'), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), ElasticNetCV.l1_ratio=0.45, ElasticNetCV.tol=1e-05)",
        "KNeighborsRegressor(RobustScaler(PCA(data, PCA.svd_solver='randomized', PCA.iterated_power=4), KNeighborsRegressor.n_neighbors=6, KNeighborsRegressor.weights='uniform', KNeighborsRegressor.p=1)",
        "KNeighborsRegressor(RobustScaler(PCA(data, PCA.svd_solver='randomized', PCA.iterated_power=9), KNeighborsRegressor.n_neighbors=6, KNeighborsRegressor.weights='uniform', KNeighborsRegressor.p=1)",
        "KNeighborsRegressor(RobustScaler(PCA(data, PCA.svd_solver='randomized', PCA.iterated_power=3), KNeighborsRegressor.n_neighbors=6, KNeighborsRegressor.weights='uniform', KNeighborsRegressor.p=1)"
    ],
    "-1": [
        "LinearSVR(FastICA(PolynomialFeatures(data, PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), FastICA.whiten='unit-variance', FastICA.tol=0.1), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=5.0, LinearSVR.tol=0.0001, LinearSVR.epsilon=0.0001)",
        "LinearSVR(VarianceThreshold(data, VarianceThreshold.threshold=0.5), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.1, LinearSVR.epsilon=0.001)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='epsilon_insensitive', LinearSVR.C=15.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.001, LinearSVR.epsilon=0.0001)",
        "LinearSVR(Nystroem(Binarizer(data, Binarizer.threshold=0.55), Nystroem.n_components=5, Nystroem.gamma=0.25, Nystroem.kernel='polynomial'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "AdaBoostRegressor(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.7000000000000001), AdaBoostRegressor.loss='exponential', AdaBoostRegressor.learning_rate=0.1, AdaBoostRegressor.n_estimators=100)",
        "LinearSVR(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.55), PolynomialFeatures.interaction_only=False, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=10.0, LinearSVR.tol=0.01, LinearSVR.epsilon=0.0001)",
        "LinearSVR(Nystroem(data, Nystroem.n_components=4, Nystroem.gamma=0.0, Nystroem.kernel='linear'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "LinearSVR(Nystroem(data, Nystroem.n_components=5, Nystroem.gamma=0.9, Nystroem.kernel='linear'), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.001, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "LinearSVR(SelectFwe(Nystroem(data, Nystroem.n_components=9, Nystroem.gamma=0.4, Nystroem.kernel='linear'), SelectFwe.score_func=f_regression, SelectFwe.alpha=0.017), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "LinearSVR(SelectFwe(Nystroem(data, Nystroem.n_components=9, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear'), SelectFwe.score_func=f_regression, SelectFwe.alpha=0.01), LinearSVR.dual=False, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.C=0.1, LinearSVR.tol=0.01, LinearSVR.epsilon=0.001)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=3, DecisionTreeRegressor.max_depth=2, min_samples_leaf=4)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=8, DecisionTreeRegressor.max_depth=2, min_samples_leaf=5)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=6, DecisionTreeRegressor.max_depth=2, min_samples_leaf=5)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=14, DecisionTreeRegressor.max_depth=2, min_samples_leaf=6)",
        "DecisionTreeRegressor(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.4), min_samples_split=20, DecisionTreeRegressor.max_depth=2, min_samples_leaf=6)"
    ]
}